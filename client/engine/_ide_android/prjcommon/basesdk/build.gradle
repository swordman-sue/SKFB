apply plugin: 'com.android.library'

dependencies {
    compile files('libs/httpmime-4.1.3.jar')
    compile files('libs/bugly_crash_release.jar')
    compile files('libs/jcore-android-1.1.6.jar')
    compile files('libs/jpush-android-3.0.8.jar')
    compile 'com.android.support:support-compat:25.3.1'
    compile 'com.android.support:support-media-compat:25.3.1'    
    compile 'com.android.support:support-core-ui:25.3.1'
    compile 'com.android.support:support-core-utils:25.3.1'
    compile 'com.android.support:support-fragment:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile project(':..:cocoslib')
}

android {
    compileSdkVersion 21
    buildToolsVersion "25.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    
	//默认配置
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"        
    }    

    lintOptions {  
        abortOnError false  
    }  
        
	tasks.withType(JavaCompile){
	    compileTask->compileTask.dependsOn ndkBuild
	}    
}

//NDK编译
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    commandLine ANDROID_NDK_CMD,
            "NDK_PROJECT_PATH="+projectDir,
            "NDK_OUT="+projectDir+"/obj",
            "NDK_LIBS_OUT="+projectDir+"/libs",
            "APP_BUILD_SCRIPT="+projectDir+"/jni/Android.mk",
            "NDK_APPLICATION_MK="+projectDir+"/jni/Application.mk"
}
