// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_define.proto

#ifndef PROTOBUF_data_5fdefine_2eproto__INCLUDED
#define PROTOBUF_data_5fdefine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_data_5fdefine_2eproto();
void protobuf_AssignDesc_data_5fdefine_2eproto();
void protobuf_ShutdownFile_data_5fdefine_2eproto();

class Item;
class Equipment;
class Treasure;
class fairy;
class HeroTrainData;
class Hero;
class MonsterData;
class ArenaRankData;
class ArenaRankDataList;
class role_rank_data;
class role_rank_list;
class all_server_role_rank_list;
class GuildRankData;
class Property;
class FormationProperty;
class GuideData;
class RoleBaseInfo;
class RoleEquipmentInfo;
class Formation;
class RoleHeroInfo;
class RoleTreasureInfo;
class RoleItemInfo;
class EmailContext;
class EmailInfo;
class RoleEmailInfo;
class MapData;
class ChapterData;
class MainFBData;
class HeroMapData;
class HeroFBChapter;
class HeroFBData;
class DailyFBData;
class EliteMapEnemyData;
class EliteFBChapter;
class EliteFBData;
class TowerFBData;
class RoleFBInfo;
class ShopGoods;
class HeroShopData;
class GuildShopData;
class MallShopData;
class TowerShopData;
class ArenaShopData;
class AwakenShopData;
class FairyShopData;
class ScoreMatchShopData;
class SevenDayShopData;
class RoleShopInfo;
class RoleSpiritInfo;
class FriendData;
class RoleFriendData;
class RoleRebelInfo;
class AchievementData;
class RoleAchievemntInfo;
class DailyMission;
class RoleDailyMissionInfo;
class SkillData;
class RoleGuildSkillInfo;
class RoleSignInData;
class RewardData;
class RoleRewardData;
class YCSData;
class TQTData;
class SevenDayTargetData;
class RoleActivityData;

// ===================================================================

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class Equipment : public ::google::protobuf::Message {
 public:
  Equipment();
  virtual ~Equipment();

  Equipment(const Equipment& from);

  inline Equipment& operator=(const Equipment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Equipment& default_instance();

  void Swap(Equipment* other);

  // implements Message ----------------------------------------------

  Equipment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Equipment& from);
  void MergeFrom(const Equipment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 info_id = 2;
  inline bool has_info_id() const;
  inline void clear_info_id();
  static const int kInfoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 info_id() const;
  inline void set_info_id(::google::protobuf::uint32 value);

  // required uint32 enhance_level = 3;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::uint32 value);

  // required uint32 refine_level = 4;
  inline bool has_refine_level() const;
  inline void clear_refine_level();
  static const int kRefineLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 refine_level() const;
  inline void set_refine_level(::google::protobuf::uint32 value);

  // required uint32 refine_exp = 5;
  inline bool has_refine_exp() const;
  inline void clear_refine_exp();
  static const int kRefineExpFieldNumber = 5;
  inline ::google::protobuf::uint32 refine_exp() const;
  inline void set_refine_exp(::google::protobuf::uint32 value);

  // required uint32 enhance_cost_gold = 6;
  inline bool has_enhance_cost_gold() const;
  inline void clear_enhance_cost_gold();
  static const int kEnhanceCostGoldFieldNumber = 6;
  inline ::google::protobuf::uint32 enhance_cost_gold() const;
  inline void set_enhance_cost_gold(::google::protobuf::uint32 value);

  // repeated .PB.Item refine_cost_item_list = 7;
  inline int refine_cost_item_list_size() const;
  inline void clear_refine_cost_item_list();
  static const int kRefineCostItemListFieldNumber = 7;
  inline const ::PB::Item& refine_cost_item_list(int index) const;
  inline ::PB::Item* mutable_refine_cost_item_list(int index);
  inline ::PB::Item* add_refine_cost_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Item >&
      refine_cost_item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Item >*
      mutable_refine_cost_item_list();

  // @@protoc_insertion_point(class_scope:PB.Equipment)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info_id();
  inline void clear_has_info_id();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_refine_level();
  inline void clear_has_refine_level();
  inline void set_has_refine_exp();
  inline void clear_has_refine_exp();
  inline void set_has_enhance_cost_gold();
  inline void clear_has_enhance_cost_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 info_id_;
  ::google::protobuf::uint32 enhance_level_;
  ::google::protobuf::uint32 refine_level_;
  ::google::protobuf::uint32 refine_exp_;
  ::google::protobuf::uint32 enhance_cost_gold_;
  ::google::protobuf::RepeatedPtrField< ::PB::Item > refine_cost_item_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static Equipment* default_instance_;
};
// -------------------------------------------------------------------

class Treasure : public ::google::protobuf::Message {
 public:
  Treasure();
  virtual ~Treasure();

  Treasure(const Treasure& from);

  inline Treasure& operator=(const Treasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Treasure& default_instance();

  void Swap(Treasure* other);

  // implements Message ----------------------------------------------

  Treasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Treasure& from);
  void MergeFrom(const Treasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 info_id = 2;
  inline bool has_info_id() const;
  inline void clear_info_id();
  static const int kInfoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 info_id() const;
  inline void set_info_id(::google::protobuf::uint32 value);

  // required uint32 enhance_level = 3;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::uint32 value);

  // required uint32 enhance_exp = 4;
  inline bool has_enhance_exp() const;
  inline void clear_enhance_exp();
  static const int kEnhanceExpFieldNumber = 4;
  inline ::google::protobuf::uint32 enhance_exp() const;
  inline void set_enhance_exp(::google::protobuf::uint32 value);

  // required uint32 refine_level = 5;
  inline bool has_refine_level() const;
  inline void clear_refine_level();
  static const int kRefineLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 refine_level() const;
  inline void set_refine_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.Treasure)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info_id();
  inline void clear_has_info_id();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_enhance_exp();
  inline void clear_has_enhance_exp();
  inline void set_has_refine_level();
  inline void clear_has_refine_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 info_id_;
  ::google::protobuf::uint32 enhance_level_;
  ::google::protobuf::uint32 enhance_exp_;
  ::google::protobuf::uint32 refine_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static Treasure* default_instance_;
};
// -------------------------------------------------------------------

class fairy : public ::google::protobuf::Message {
 public:
  fairy();
  virtual ~fairy();

  fairy(const fairy& from);

  inline fairy& operator=(const fairy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fairy& default_instance();

  void Swap(fairy* other);

  // implements Message ----------------------------------------------

  fairy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fairy& from);
  void MergeFrom(const fairy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 info_id = 2;
  inline bool has_info_id() const;
  inline void clear_info_id();
  static const int kInfoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 info_id() const;
  inline void set_info_id(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 break_level = 5;
  inline bool has_break_level() const;
  inline void clear_break_level();
  static const int kBreakLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 break_level() const;
  inline void set_break_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.fairy)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info_id();
  inline void clear_has_info_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_break_level();
  inline void clear_has_break_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 info_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 break_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static fairy* default_instance_;
};
// -------------------------------------------------------------------

class HeroTrainData : public ::google::protobuf::Message {
 public:
  HeroTrainData();
  virtual ~HeroTrainData();

  HeroTrainData(const HeroTrainData& from);

  inline HeroTrainData& operator=(const HeroTrainData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroTrainData& default_instance();

  void Swap(HeroTrainData* other);

  // implements Message ----------------------------------------------

  HeroTrainData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroTrainData& from);
  void MergeFrom(const HeroTrainData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pro_type = 1;
  inline bool has_pro_type() const;
  inline void clear_pro_type();
  static const int kProTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 pro_type() const;
  inline void set_pro_type(::google::protobuf::uint32 value);

  // required uint32 pro_value = 2;
  inline bool has_pro_value() const;
  inline void clear_pro_value();
  static const int kProValueFieldNumber = 2;
  inline ::google::protobuf::uint32 pro_value() const;
  inline void set_pro_value(::google::protobuf::uint32 value);

  // required uint32 pro_level = 3;
  inline bool has_pro_level() const;
  inline void clear_pro_level();
  static const int kProLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 pro_level() const;
  inline void set_pro_level(::google::protobuf::uint32 value);

  // required uint32 tmp_pro_value = 4;
  inline bool has_tmp_pro_value() const;
  inline void clear_tmp_pro_value();
  static const int kTmpProValueFieldNumber = 4;
  inline ::google::protobuf::uint32 tmp_pro_value() const;
  inline void set_tmp_pro_value(::google::protobuf::uint32 value);

  // required uint32 reward_flag = 5;
  inline bool has_reward_flag() const;
  inline void clear_reward_flag();
  static const int kRewardFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 reward_flag() const;
  inline void set_reward_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.HeroTrainData)
 private:
  inline void set_has_pro_type();
  inline void clear_has_pro_type();
  inline void set_has_pro_value();
  inline void clear_has_pro_value();
  inline void set_has_pro_level();
  inline void clear_has_pro_level();
  inline void set_has_tmp_pro_value();
  inline void clear_has_tmp_pro_value();
  inline void set_has_reward_flag();
  inline void clear_has_reward_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pro_type_;
  ::google::protobuf::uint32 pro_value_;
  ::google::protobuf::uint32 pro_level_;
  ::google::protobuf::uint32 tmp_pro_value_;
  ::google::protobuf::uint32 reward_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static HeroTrainData* default_instance_;
};
// -------------------------------------------------------------------

class Hero : public ::google::protobuf::Message {
 public:
  Hero();
  virtual ~Hero();

  Hero(const Hero& from);

  inline Hero& operator=(const Hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Hero& default_instance();

  void Swap(Hero* other);

  // implements Message ----------------------------------------------

  Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hero& from);
  void MergeFrom(const Hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 info_id = 2;
  inline bool has_info_id() const;
  inline void clear_info_id();
  static const int kInfoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 info_id() const;
  inline void set_info_id(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // required uint32 break_level = 6;
  inline bool has_break_level() const;
  inline void clear_break_level();
  static const int kBreakLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 break_level() const;
  inline void set_break_level(::google::protobuf::uint32 value);

  // required uint32 destiny_level = 7;
  inline bool has_destiny_level() const;
  inline void clear_destiny_level();
  static const int kDestinyLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 destiny_level() const;
  inline void set_destiny_level(::google::protobuf::uint32 value);

  // required uint32 destiny_exp = 8;
  inline bool has_destiny_exp() const;
  inline void clear_destiny_exp();
  static const int kDestinyExpFieldNumber = 8;
  inline ::google::protobuf::uint32 destiny_exp() const;
  inline void set_destiny_exp(::google::protobuf::uint32 value);

  // required uint32 awaken_star = 9;
  inline bool has_awaken_star() const;
  inline void clear_awaken_star();
  static const int kAwakenStarFieldNumber = 9;
  inline ::google::protobuf::uint32 awaken_star() const;
  inline void set_awaken_star(::google::protobuf::uint32 value);

  // required uint32 awaken_level = 10;
  inline bool has_awaken_level() const;
  inline void clear_awaken_level();
  static const int kAwakenLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 awaken_level() const;
  inline void set_awaken_level(::google::protobuf::uint32 value);

  // repeated uint32 awaken_item_list = 11;
  inline int awaken_item_list_size() const;
  inline void clear_awaken_item_list();
  static const int kAwakenItemListFieldNumber = 11;
  inline ::google::protobuf::uint32 awaken_item_list(int index) const;
  inline void set_awaken_item_list(int index, ::google::protobuf::uint32 value);
  inline void add_awaken_item_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      awaken_item_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_awaken_item_list();

  // repeated .PB.HeroTrainData train_data_list = 12;
  inline int train_data_list_size() const;
  inline void clear_train_data_list();
  static const int kTrainDataListFieldNumber = 12;
  inline const ::PB::HeroTrainData& train_data_list(int index) const;
  inline ::PB::HeroTrainData* mutable_train_data_list(int index);
  inline ::PB::HeroTrainData* add_train_data_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::HeroTrainData >&
      train_data_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::HeroTrainData >*
      mutable_train_data_list();

  // required uint32 train_cost_item_num = 13;
  inline bool has_train_cost_item_num() const;
  inline void clear_train_cost_item_num();
  static const int kTrainCostItemNumFieldNumber = 13;
  inline ::google::protobuf::uint32 train_cost_item_num() const;
  inline void set_train_cost_item_num(::google::protobuf::uint32 value);

  // required uint32 destiny_cost_item_num = 14;
  inline bool has_destiny_cost_item_num() const;
  inline void clear_destiny_cost_item_num();
  static const int kDestinyCostItemNumFieldNumber = 14;
  inline ::google::protobuf::uint32 destiny_cost_item_num() const;
  inline void set_destiny_cost_item_num(::google::protobuf::uint32 value);

  // required uint32 train_cost_diamond = 15;
  inline bool has_train_cost_diamond() const;
  inline void clear_train_cost_diamond();
  static const int kTrainCostDiamondFieldNumber = 15;
  inline ::google::protobuf::uint32 train_cost_diamond() const;
  inline void set_train_cost_diamond(::google::protobuf::uint32 value);

  // required uint32 train_cost_gold = 16;
  inline bool has_train_cost_gold() const;
  inline void clear_train_cost_gold();
  static const int kTrainCostGoldFieldNumber = 16;
  inline ::google::protobuf::uint32 train_cost_gold() const;
  inline void set_train_cost_gold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.Hero)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info_id();
  inline void clear_has_info_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_break_level();
  inline void clear_has_break_level();
  inline void set_has_destiny_level();
  inline void clear_has_destiny_level();
  inline void set_has_destiny_exp();
  inline void clear_has_destiny_exp();
  inline void set_has_awaken_star();
  inline void clear_has_awaken_star();
  inline void set_has_awaken_level();
  inline void clear_has_awaken_level();
  inline void set_has_train_cost_item_num();
  inline void clear_has_train_cost_item_num();
  inline void set_has_destiny_cost_item_num();
  inline void clear_has_destiny_cost_item_num();
  inline void set_has_train_cost_diamond();
  inline void clear_has_train_cost_diamond();
  inline void set_has_train_cost_gold();
  inline void clear_has_train_cost_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 info_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 break_level_;
  ::google::protobuf::uint32 destiny_level_;
  ::google::protobuf::uint32 destiny_exp_;
  ::google::protobuf::uint32 awaken_star_;
  ::google::protobuf::uint32 awaken_level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > awaken_item_list_;
  ::google::protobuf::RepeatedPtrField< ::PB::HeroTrainData > train_data_list_;
  ::google::protobuf::uint32 train_cost_item_num_;
  ::google::protobuf::uint32 destiny_cost_item_num_;
  ::google::protobuf::uint32 train_cost_diamond_;
  ::google::protobuf::uint32 train_cost_gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static Hero* default_instance_;
};
// -------------------------------------------------------------------

class MonsterData : public ::google::protobuf::Message {
 public:
  MonsterData();
  virtual ~MonsterData();

  MonsterData(const MonsterData& from);

  inline MonsterData& operator=(const MonsterData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterData& default_instance();

  void Swap(MonsterData* other);

  // implements Message ----------------------------------------------

  MonsterData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonsterData& from);
  void MergeFrom(const MonsterData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // required uint32 damage = 2;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);

  // required uint32 total_hp = 3;
  inline bool has_total_hp() const;
  inline void clear_total_hp();
  static const int kTotalHpFieldNumber = 3;
  inline ::google::protobuf::uint32 total_hp() const;
  inline void set_total_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.MonsterData)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_total_hp();
  inline void clear_has_total_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 total_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static MonsterData* default_instance_;
};
// -------------------------------------------------------------------

class ArenaRankData : public ::google::protobuf::Message {
 public:
  ArenaRankData();
  virtual ~ArenaRankData();

  ArenaRankData(const ArenaRankData& from);

  inline ArenaRankData& operator=(const ArenaRankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaRankData& default_instance();

  void Swap(ArenaRankData* other);

  // implements Message ----------------------------------------------

  ArenaRankData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaRankData& from);
  void MergeFrom(const ArenaRankData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 cur_rank = 2;
  inline bool has_cur_rank() const;
  inline void clear_cur_rank();
  static const int kCurRankFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_rank() const;
  inline void set_cur_rank(::google::protobuf::uint32 value);

  // required uint32 history_rank = 3;
  inline bool has_history_rank() const;
  inline void clear_history_rank();
  static const int kHistoryRankFieldNumber = 3;
  inline ::google::protobuf::uint32 history_rank() const;
  inline void set_history_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.ArenaRankData)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_cur_rank();
  inline void clear_has_cur_rank();
  inline void set_has_history_rank();
  inline void clear_has_history_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 cur_rank_;
  ::google::protobuf::uint32 history_rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static ArenaRankData* default_instance_;
};
// -------------------------------------------------------------------

class ArenaRankDataList : public ::google::protobuf::Message {
 public:
  ArenaRankDataList();
  virtual ~ArenaRankDataList();

  ArenaRankDataList(const ArenaRankDataList& from);

  inline ArenaRankDataList& operator=(const ArenaRankDataList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaRankDataList& default_instance();

  void Swap(ArenaRankDataList* other);

  // implements Message ----------------------------------------------

  ArenaRankDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaRankDataList& from);
  void MergeFrom(const ArenaRankDataList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ArenaRankData rank_list = 1;
  inline int rank_list_size() const;
  inline void clear_rank_list();
  static const int kRankListFieldNumber = 1;
  inline const ::PB::ArenaRankData& rank_list(int index) const;
  inline ::PB::ArenaRankData* mutable_rank_list(int index);
  inline ::PB::ArenaRankData* add_rank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ArenaRankData >&
      rank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ArenaRankData >*
      mutable_rank_list();

  // @@protoc_insertion_point(class_scope:PB.ArenaRankDataList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ArenaRankData > rank_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static ArenaRankDataList* default_instance_;
};
// -------------------------------------------------------------------

class role_rank_data : public ::google::protobuf::Message {
 public:
  role_rank_data();
  virtual ~role_rank_data();

  role_rank_data(const role_rank_data& from);

  inline role_rank_data& operator=(const role_rank_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_rank_data& default_instance();

  void Swap(role_rank_data* other);

  // implements Message ----------------------------------------------

  role_rank_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const role_rank_data& from);
  void MergeFrom(const role_rank_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required uint32 value_ex = 5;
  inline bool has_value_ex() const;
  inline void clear_value_ex();
  static const int kValueExFieldNumber = 5;
  inline ::google::protobuf::uint32 value_ex() const;
  inline void set_value_ex(::google::protobuf::uint32 value);

  // required uint32 update_time = 6;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 update_time() const;
  inline void set_update_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.role_rank_data)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_value_ex();
  inline void clear_has_value_ex();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 value_ex_;
  ::google::protobuf::uint32 update_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static role_rank_data* default_instance_;
};
// -------------------------------------------------------------------

class role_rank_list : public ::google::protobuf::Message {
 public:
  role_rank_list();
  virtual ~role_rank_list();

  role_rank_list(const role_rank_list& from);

  inline role_rank_list& operator=(const role_rank_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_rank_list& default_instance();

  void Swap(role_rank_list* other);

  // implements Message ----------------------------------------------

  role_rank_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const role_rank_list& from);
  void MergeFrom(const role_rank_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 server_id() const;
  inline void set_server_id(::google::protobuf::uint32 value);

  // repeated .PB.role_rank_data rank_list = 2;
  inline int rank_list_size() const;
  inline void clear_rank_list();
  static const int kRankListFieldNumber = 2;
  inline const ::PB::role_rank_data& rank_list(int index) const;
  inline ::PB::role_rank_data* mutable_rank_list(int index);
  inline ::PB::role_rank_data* add_rank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::role_rank_data >&
      rank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::role_rank_data >*
      mutable_rank_list();

  // @@protoc_insertion_point(class_scope:PB.role_rank_list)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::role_rank_data > rank_list_;
  ::google::protobuf::uint32 server_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static role_rank_list* default_instance_;
};
// -------------------------------------------------------------------

class all_server_role_rank_list : public ::google::protobuf::Message {
 public:
  all_server_role_rank_list();
  virtual ~all_server_role_rank_list();

  all_server_role_rank_list(const all_server_role_rank_list& from);

  inline all_server_role_rank_list& operator=(const all_server_role_rank_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const all_server_role_rank_list& default_instance();

  void Swap(all_server_role_rank_list* other);

  // implements Message ----------------------------------------------

  all_server_role_rank_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const all_server_role_rank_list& from);
  void MergeFrom(const all_server_role_rank_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank_type = 1;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);

  // repeated .PB.role_rank_list all_rank_list = 2;
  inline int all_rank_list_size() const;
  inline void clear_all_rank_list();
  static const int kAllRankListFieldNumber = 2;
  inline const ::PB::role_rank_list& all_rank_list(int index) const;
  inline ::PB::role_rank_list* mutable_all_rank_list(int index);
  inline ::PB::role_rank_list* add_all_rank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::role_rank_list >&
      all_rank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::role_rank_list >*
      mutable_all_rank_list();

  // @@protoc_insertion_point(class_scope:PB.all_server_role_rank_list)
 private:
  inline void set_has_rank_type();
  inline void clear_has_rank_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::role_rank_list > all_rank_list_;
  ::google::protobuf::uint32 rank_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static all_server_role_rank_list* default_instance_;
};
// -------------------------------------------------------------------

class GuildRankData : public ::google::protobuf::Message {
 public:
  GuildRankData();
  virtual ~GuildRankData();

  GuildRankData(const GuildRankData& from);

  inline GuildRankData& operator=(const GuildRankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRankData& default_instance();

  void Swap(GuildRankData* other);

  // implements Message ----------------------------------------------

  GuildRankData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildRankData& from);
  void MergeFrom(const GuildRankData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // required uint32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required uint32 update_time = 4;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 update_time() const;
  inline void set_update_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.GuildRankData)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 update_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static GuildRankData* default_instance_;
};
// -------------------------------------------------------------------

class Property : public ::google::protobuf::Message {
 public:
  Property();
  virtual ~Property();

  Property(const Property& from);

  inline Property& operator=(const Property& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Property& default_instance();

  void Swap(Property* other);

  // implements Message ----------------------------------------------

  Property* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Property& from);
  void MergeFrom(const Property& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.Property)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static Property* default_instance_;
};
// -------------------------------------------------------------------

class FormationProperty : public ::google::protobuf::Message {
 public:
  FormationProperty();
  virtual ~FormationProperty();

  FormationProperty(const FormationProperty& from);

  inline FormationProperty& operator=(const FormationProperty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FormationProperty& default_instance();

  void Swap(FormationProperty* other);

  // implements Message ----------------------------------------------

  FormationProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FormationProperty& from);
  void MergeFrom(const FormationProperty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // repeated .PB.Property pro_list = 2;
  inline int pro_list_size() const;
  inline void clear_pro_list();
  static const int kProListFieldNumber = 2;
  inline const ::PB::Property& pro_list(int index) const;
  inline ::PB::Property* mutable_pro_list(int index);
  inline ::PB::Property* add_pro_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Property >&
      pro_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Property >*
      mutable_pro_list();

  // @@protoc_insertion_point(class_scope:PB.FormationProperty)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::Property > pro_list_;
  ::google::protobuf::uint32 slot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static FormationProperty* default_instance_;
};
// -------------------------------------------------------------------

class GuideData : public ::google::protobuf::Message {
 public:
  GuideData();
  virtual ~GuideData();

  GuideData(const GuideData& from);

  inline GuideData& operator=(const GuideData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideData& default_instance();

  void Swap(GuideData* other);

  // implements Message ----------------------------------------------

  GuideData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideData& from);
  void MergeFrom(const GuideData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.GuideData)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static GuideData* default_instance_;
};
// -------------------------------------------------------------------

class RoleBaseInfo : public ::google::protobuf::Message {
 public:
  RoleBaseInfo();
  virtual ~RoleBaseInfo();

  RoleBaseInfo(const RoleBaseInfo& from);

  inline RoleBaseInfo& operator=(const RoleBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleBaseInfo& default_instance();

  void Swap(RoleBaseInfo* other);

  // implements Message ----------------------------------------------

  RoleBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleBaseInfo& from);
  void MergeFrom(const RoleBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required string role_name = 2;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  inline ::std::string* release_role_name();
  inline void set_allocated_role_name(::std::string* role_name);

  // required string account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint32 stamina = 4;
  inline bool has_stamina() const;
  inline void clear_stamina();
  static const int kStaminaFieldNumber = 4;
  inline ::google::protobuf::uint32 stamina() const;
  inline void set_stamina(::google::protobuf::uint32 value);

  // optional uint32 energy = 5;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 5;
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // optional uint32 sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 daily_init_level = 8;
  inline bool has_daily_init_level() const;
  inline void clear_daily_init_level();
  static const int kDailyInitLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 daily_init_level() const;
  inline void set_daily_init_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 9;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 9;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 gold = 10;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 10;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 diamond = 11;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 11;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);

  // optional uint32 head_image_id = 12;
  inline bool has_head_image_id() const;
  inline void clear_head_image_id();
  static const int kHeadImageIdFieldNumber = 12;
  inline ::google::protobuf::uint32 head_image_id() const;
  inline void set_head_image_id(::google::protobuf::uint32 value);

  // optional uint32 vip_level = 13;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 13;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 vip_exp = 14;
  inline bool has_vip_exp() const;
  inline void clear_vip_exp();
  static const int kVipExpFieldNumber = 14;
  inline ::google::protobuf::uint32 vip_exp() const;
  inline void set_vip_exp(::google::protobuf::uint32 value);

  // optional uint32 riot_suppress_times = 15;
  inline bool has_riot_suppress_times() const;
  inline void clear_riot_suppress_times();
  static const int kRiotSuppressTimesFieldNumber = 15;
  inline ::google::protobuf::uint32 riot_suppress_times() const;
  inline void set_riot_suppress_times(::google::protobuf::uint32 value);

  // optional uint32 hero_soul = 16;
  inline bool has_hero_soul() const;
  inline void clear_hero_soul();
  static const int kHeroSoulFieldNumber = 16;
  inline ::google::protobuf::uint32 hero_soul() const;
  inline void set_hero_soul(::google::protobuf::uint32 value);

  // optional uint32 god_soul = 17;
  inline bool has_god_soul() const;
  inline void clear_god_soul();
  static const int kGodSoulFieldNumber = 17;
  inline ::google::protobuf::uint32 god_soul() const;
  inline void set_god_soul(::google::protobuf::uint32 value);

  // optional uint32 fairy_soul = 18;
  inline bool has_fairy_soul() const;
  inline void clear_fairy_soul();
  static const int kFairySoulFieldNumber = 18;
  inline ::google::protobuf::uint32 fairy_soul() const;
  inline void set_fairy_soul(::google::protobuf::uint32 value);

  // optional uint32 arena_prestige = 19;
  inline bool has_arena_prestige() const;
  inline void clear_arena_prestige();
  static const int kArenaPrestigeFieldNumber = 19;
  inline ::google::protobuf::uint32 arena_prestige() const;
  inline void set_arena_prestige(::google::protobuf::uint32 value);

  // optional uint32 tower_prestige = 20;
  inline bool has_tower_prestige() const;
  inline void clear_tower_prestige();
  static const int kTowerPrestigeFieldNumber = 20;
  inline ::google::protobuf::uint32 tower_prestige() const;
  inline void set_tower_prestige(::google::protobuf::uint32 value);

  // optional uint32 fighting_power = 21;
  inline bool has_fighting_power() const;
  inline void clear_fighting_power();
  static const int kFightingPowerFieldNumber = 21;
  inline ::google::protobuf::uint32 fighting_power() const;
  inline void set_fighting_power(::google::protobuf::uint32 value);

  // optional uint32 wanted = 22;
  inline bool has_wanted() const;
  inline void clear_wanted();
  static const int kWantedFieldNumber = 22;
  inline ::google::protobuf::uint32 wanted() const;
  inline void set_wanted(::google::protobuf::uint32 value);

  // optional uint32 rebel_value = 23;
  inline bool has_rebel_value() const;
  inline void clear_rebel_value();
  static const int kRebelValueFieldNumber = 23;
  inline ::google::protobuf::uint32 rebel_value() const;
  inline void set_rebel_value(::google::protobuf::uint32 value);

  // optional uint32 honor = 24;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 24;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 cur_contribution = 25;
  inline bool has_cur_contribution() const;
  inline void clear_cur_contribution();
  static const int kCurContributionFieldNumber = 25;
  inline ::google::protobuf::uint32 cur_contribution() const;
  inline void set_cur_contribution(::google::protobuf::uint32 value);

  // optional uint32 world_boss_battle_times = 26;
  inline bool has_world_boss_battle_times() const;
  inline void clear_world_boss_battle_times();
  static const int kWorldBossBattleTimesFieldNumber = 26;
  inline ::google::protobuf::uint32 world_boss_battle_times() const;
  inline void set_world_boss_battle_times(::google::protobuf::uint32 value);

  // optional uint32 guild_fb_reward_chapter = 27;
  inline bool has_guild_fb_reward_chapter() const;
  inline void clear_guild_fb_reward_chapter();
  static const int kGuildFbRewardChapterFieldNumber = 27;
  inline ::google::protobuf::uint32 guild_fb_reward_chapter() const;
  inline void set_guild_fb_reward_chapter(::google::protobuf::uint32 value);

  // optional string last_login_time = 28;
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 28;
  inline const ::std::string& last_login_time() const;
  inline void set_last_login_time(const ::std::string& value);
  inline void set_last_login_time(const char* value);
  inline void set_last_login_time(const char* value, size_t size);
  inline ::std::string* mutable_last_login_time();
  inline ::std::string* release_last_login_time();
  inline void set_allocated_last_login_time(::std::string* last_login_time);

  // optional string last_logout_time = 29;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 29;
  inline const ::std::string& last_logout_time() const;
  inline void set_last_logout_time(const ::std::string& value);
  inline void set_last_logout_time(const char* value);
  inline void set_last_logout_time(const char* value, size_t size);
  inline ::std::string* mutable_last_logout_time();
  inline ::std::string* release_last_logout_time();
  inline void set_allocated_last_logout_time(::std::string* last_logout_time);

  // optional uint32 total_online_time = 30;
  inline bool has_total_online_time() const;
  inline void clear_total_online_time();
  static const int kTotalOnlineTimeFieldNumber = 30;
  inline ::google::protobuf::uint32 total_online_time() const;
  inline void set_total_online_time(::google::protobuf::uint32 value);

  // optional uint32 login_times = 31;
  inline bool has_login_times() const;
  inline void clear_login_times();
  static const int kLoginTimesFieldNumber = 31;
  inline ::google::protobuf::uint32 login_times() const;
  inline void set_login_times(::google::protobuf::uint32 value);

  // optional uint32 last_stamina_recover_time = 32;
  inline bool has_last_stamina_recover_time() const;
  inline void clear_last_stamina_recover_time();
  static const int kLastStaminaRecoverTimeFieldNumber = 32;
  inline ::google::protobuf::uint32 last_stamina_recover_time() const;
  inline void set_last_stamina_recover_time(::google::protobuf::uint32 value);

  // optional uint32 last_energy_recover_time = 33;
  inline bool has_last_energy_recover_time() const;
  inline void clear_last_energy_recover_time();
  static const int kLastEnergyRecoverTimeFieldNumber = 33;
  inline ::google::protobuf::uint32 last_energy_recover_time() const;
  inline void set_last_energy_recover_time(::google::protobuf::uint32 value);

  // optional uint32 last_wanted_recover_time = 34;
  inline bool has_last_wanted_recover_time() const;
  inline void clear_last_wanted_recover_time();
  static const int kLastWantedRecoverTimeFieldNumber = 34;
  inline ::google::protobuf::uint32 last_wanted_recover_time() const;
  inline void set_last_wanted_recover_time(::google::protobuf::uint32 value);

  // repeated .PB.FormationProperty formation_pro_list = 35;
  inline int formation_pro_list_size() const;
  inline void clear_formation_pro_list();
  static const int kFormationProListFieldNumber = 35;
  inline const ::PB::FormationProperty& formation_pro_list(int index) const;
  inline ::PB::FormationProperty* mutable_formation_pro_list(int index);
  inline ::PB::FormationProperty* add_formation_pro_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::FormationProperty >&
      formation_pro_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::FormationProperty >*
      mutable_formation_pro_list();

  // optional uint32 once_flag_list = 36;
  inline bool has_once_flag_list() const;
  inline void clear_once_flag_list();
  static const int kOnceFlagListFieldNumber = 36;
  inline ::google::protobuf::uint32 once_flag_list() const;
  inline void set_once_flag_list(::google::protobuf::uint32 value);

  // optional uint32 guide_x = 37;
  inline bool has_guide_x() const;
  inline void clear_guide_x();
  static const int kGuideXFieldNumber = 37;
  inline ::google::protobuf::uint32 guide_x() const;
  inline void set_guide_x(::google::protobuf::uint32 value);

  // optional uint32 guide_y = 38;
  inline bool has_guide_y() const;
  inline void clear_guide_y();
  static const int kGuideYFieldNumber = 38;
  inline ::google::protobuf::uint32 guide_y() const;
  inline void set_guide_y(::google::protobuf::uint32 value);

  // repeated .PB.GuideData guide_list = 39;
  inline int guide_list_size() const;
  inline void clear_guide_list();
  static const int kGuideListFieldNumber = 39;
  inline const ::PB::GuideData& guide_list(int index) const;
  inline ::PB::GuideData* mutable_guide_list(int index);
  inline ::PB::GuideData* add_guide_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::GuideData >&
      guide_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::GuideData >*
      mutable_guide_list();

  // optional uint32 duobao_peace_over_time = 40;
  inline bool has_duobao_peace_over_time() const;
  inline void clear_duobao_peace_over_time();
  static const int kDuobaoPeaceOverTimeFieldNumber = 40;
  inline ::google::protobuf::uint32 duobao_peace_over_time() const;
  inline void set_duobao_peace_over_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.RoleBaseInfo)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_role_name();
  inline void clear_has_role_name();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_stamina();
  inline void clear_has_stamina();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_daily_init_level();
  inline void clear_has_daily_init_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_head_image_id();
  inline void clear_has_head_image_id();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_vip_exp();
  inline void clear_has_vip_exp();
  inline void set_has_riot_suppress_times();
  inline void clear_has_riot_suppress_times();
  inline void set_has_hero_soul();
  inline void clear_has_hero_soul();
  inline void set_has_god_soul();
  inline void clear_has_god_soul();
  inline void set_has_fairy_soul();
  inline void clear_has_fairy_soul();
  inline void set_has_arena_prestige();
  inline void clear_has_arena_prestige();
  inline void set_has_tower_prestige();
  inline void clear_has_tower_prestige();
  inline void set_has_fighting_power();
  inline void clear_has_fighting_power();
  inline void set_has_wanted();
  inline void clear_has_wanted();
  inline void set_has_rebel_value();
  inline void clear_has_rebel_value();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_cur_contribution();
  inline void clear_has_cur_contribution();
  inline void set_has_world_boss_battle_times();
  inline void clear_has_world_boss_battle_times();
  inline void set_has_guild_fb_reward_chapter();
  inline void clear_has_guild_fb_reward_chapter();
  inline void set_has_last_login_time();
  inline void clear_has_last_login_time();
  inline void set_has_last_logout_time();
  inline void clear_has_last_logout_time();
  inline void set_has_total_online_time();
  inline void clear_has_total_online_time();
  inline void set_has_login_times();
  inline void clear_has_login_times();
  inline void set_has_last_stamina_recover_time();
  inline void clear_has_last_stamina_recover_time();
  inline void set_has_last_energy_recover_time();
  inline void clear_has_last_energy_recover_time();
  inline void set_has_last_wanted_recover_time();
  inline void clear_has_last_wanted_recover_time();
  inline void set_has_once_flag_list();
  inline void clear_has_once_flag_list();
  inline void set_has_guide_x();
  inline void clear_has_guide_x();
  inline void set_has_guide_y();
  inline void clear_has_guide_y();
  inline void set_has_duobao_peace_over_time();
  inline void clear_has_duobao_peace_over_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* role_name_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 stamina_;
  ::std::string* account_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 daily_init_level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 head_image_id_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 vip_exp_;
  ::google::protobuf::uint32 riot_suppress_times_;
  ::google::protobuf::uint32 hero_soul_;
  ::google::protobuf::uint32 god_soul_;
  ::google::protobuf::uint32 fairy_soul_;
  ::google::protobuf::uint32 arena_prestige_;
  ::google::protobuf::uint32 tower_prestige_;
  ::google::protobuf::uint32 fighting_power_;
  ::google::protobuf::uint32 wanted_;
  ::google::protobuf::uint32 rebel_value_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 cur_contribution_;
  ::google::protobuf::uint32 world_boss_battle_times_;
  ::std::string* last_login_time_;
  ::google::protobuf::uint32 guild_fb_reward_chapter_;
  ::google::protobuf::uint32 total_online_time_;
  ::std::string* last_logout_time_;
  ::google::protobuf::uint32 login_times_;
  ::google::protobuf::uint32 last_stamina_recover_time_;
  ::google::protobuf::uint32 last_energy_recover_time_;
  ::google::protobuf::uint32 last_wanted_recover_time_;
  ::google::protobuf::RepeatedPtrField< ::PB::FormationProperty > formation_pro_list_;
  ::google::protobuf::uint32 once_flag_list_;
  ::google::protobuf::uint32 guide_x_;
  ::google::protobuf::RepeatedPtrField< ::PB::GuideData > guide_list_;
  ::google::protobuf::uint32 guide_y_;
  ::google::protobuf::uint32 duobao_peace_over_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(40 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleEquipmentInfo : public ::google::protobuf::Message {
 public:
  RoleEquipmentInfo();
  virtual ~RoleEquipmentInfo();

  RoleEquipmentInfo(const RoleEquipmentInfo& from);

  inline RoleEquipmentInfo& operator=(const RoleEquipmentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleEquipmentInfo& default_instance();

  void Swap(RoleEquipmentInfo* other);

  // implements Message ----------------------------------------------

  RoleEquipmentInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleEquipmentInfo& from);
  void MergeFrom(const RoleEquipmentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.Equipment equipment_list = 1;
  inline int equipment_list_size() const;
  inline void clear_equipment_list();
  static const int kEquipmentListFieldNumber = 1;
  inline const ::PB::Equipment& equipment_list(int index) const;
  inline ::PB::Equipment* mutable_equipment_list(int index);
  inline ::PB::Equipment* add_equipment_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Equipment >&
      equipment_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Equipment >*
      mutable_equipment_list();

  // @@protoc_insertion_point(class_scope:PB.RoleEquipmentInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::Equipment > equipment_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleEquipmentInfo* default_instance_;
};
// -------------------------------------------------------------------

class Formation : public ::google::protobuf::Message {
 public:
  Formation();
  virtual ~Formation();

  Formation(const Formation& from);

  inline Formation& operator=(const Formation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Formation& default_instance();

  void Swap(Formation* other);

  // implements Message ----------------------------------------------

  Formation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Formation& from);
  void MergeFrom(const Formation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // repeated uint32 equipment_list = 2;
  inline int equipment_list_size() const;
  inline void clear_equipment_list();
  static const int kEquipmentListFieldNumber = 2;
  inline ::google::protobuf::uint32 equipment_list(int index) const;
  inline void set_equipment_list(int index, ::google::protobuf::uint32 value);
  inline void add_equipment_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equipment_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equipment_list();

  // repeated uint32 treasure_list = 3;
  inline int treasure_list_size() const;
  inline void clear_treasure_list();
  static const int kTreasureListFieldNumber = 3;
  inline ::google::protobuf::uint32 treasure_list(int index) const;
  inline void set_treasure_list(int index, ::google::protobuf::uint32 value);
  inline void add_treasure_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      treasure_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_treasure_list();

  // @@protoc_insertion_point(class_scope:PB.Formation)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equipment_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > treasure_list_;
  ::google::protobuf::uint32 hero_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static Formation* default_instance_;
};
// -------------------------------------------------------------------

class RoleHeroInfo : public ::google::protobuf::Message {
 public:
  RoleHeroInfo();
  virtual ~RoleHeroInfo();

  RoleHeroInfo(const RoleHeroInfo& from);

  inline RoleHeroInfo& operator=(const RoleHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHeroInfo& default_instance();

  void Swap(RoleHeroInfo* other);

  // implements Message ----------------------------------------------

  RoleHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHeroInfo& from);
  void MergeFrom(const RoleHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 normal_free_summon_times = 1;
  inline bool has_normal_free_summon_times() const;
  inline void clear_normal_free_summon_times();
  static const int kNormalFreeSummonTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 normal_free_summon_times() const;
  inline void set_normal_free_summon_times(::google::protobuf::uint32 value);

  // required uint32 normal_free_summon_time = 2;
  inline bool has_normal_free_summon_time() const;
  inline void clear_normal_free_summon_time();
  static const int kNormalFreeSummonTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 normal_free_summon_time() const;
  inline void set_normal_free_summon_time(::google::protobuf::uint32 value);

  // required uint32 high_free_summon_time = 3;
  inline bool has_high_free_summon_time() const;
  inline void clear_high_free_summon_time();
  static const int kHighFreeSummonTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 high_free_summon_time() const;
  inline void set_high_free_summon_time(::google::protobuf::uint32 value);

  // required uint32 high_summon_times = 4;
  inline bool has_high_summon_times() const;
  inline void clear_high_summon_times();
  static const int kHighSummonTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 high_summon_times() const;
  inline void set_high_summon_times(::google::protobuf::uint32 value);

  // repeated .PB.Hero hero_list = 5;
  inline int hero_list_size() const;
  inline void clear_hero_list();
  static const int kHeroListFieldNumber = 5;
  inline const ::PB::Hero& hero_list(int index) const;
  inline ::PB::Hero* mutable_hero_list(int index);
  inline ::PB::Hero* add_hero_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Hero >&
      hero_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Hero >*
      mutable_hero_list();

  // repeated uint32 collection_list = 6;
  inline int collection_list_size() const;
  inline void clear_collection_list();
  static const int kCollectionListFieldNumber = 6;
  inline ::google::protobuf::uint32 collection_list(int index) const;
  inline void set_collection_list(int index, ::google::protobuf::uint32 value);
  inline void add_collection_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      collection_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_collection_list();

  // repeated uint32 reinforcement_list = 7;
  inline int reinforcement_list_size() const;
  inline void clear_reinforcement_list();
  static const int kReinforcementListFieldNumber = 7;
  inline ::google::protobuf::uint32 reinforcement_list(int index) const;
  inline void set_reinforcement_list(int index, ::google::protobuf::uint32 value);
  inline void add_reinforcement_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reinforcement_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reinforcement_list();

  // repeated .PB.Formation formation_list = 8;
  inline int formation_list_size() const;
  inline void clear_formation_list();
  static const int kFormationListFieldNumber = 8;
  inline const ::PB::Formation& formation_list(int index) const;
  inline ::PB::Formation* mutable_formation_list(int index);
  inline ::PB::Formation* add_formation_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Formation >&
      formation_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Formation >*
      mutable_formation_list();

  // optional uint32 train_times = 9;
  inline bool has_train_times() const;
  inline void clear_train_times();
  static const int kTrainTimesFieldNumber = 9;
  inline ::google::protobuf::uint32 train_times() const;
  inline void set_train_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.RoleHeroInfo)
 private:
  inline void set_has_normal_free_summon_times();
  inline void clear_has_normal_free_summon_times();
  inline void set_has_normal_free_summon_time();
  inline void clear_has_normal_free_summon_time();
  inline void set_has_high_free_summon_time();
  inline void clear_has_high_free_summon_time();
  inline void set_has_high_summon_times();
  inline void clear_has_high_summon_times();
  inline void set_has_train_times();
  inline void clear_has_train_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 normal_free_summon_times_;
  ::google::protobuf::uint32 normal_free_summon_time_;
  ::google::protobuf::uint32 high_free_summon_time_;
  ::google::protobuf::uint32 high_summon_times_;
  ::google::protobuf::RepeatedPtrField< ::PB::Hero > hero_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > collection_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reinforcement_list_;
  ::google::protobuf::RepeatedPtrField< ::PB::Formation > formation_list_;
  ::google::protobuf::uint32 train_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleTreasureInfo : public ::google::protobuf::Message {
 public:
  RoleTreasureInfo();
  virtual ~RoleTreasureInfo();

  RoleTreasureInfo(const RoleTreasureInfo& from);

  inline RoleTreasureInfo& operator=(const RoleTreasureInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleTreasureInfo& default_instance();

  void Swap(RoleTreasureInfo* other);

  // implements Message ----------------------------------------------

  RoleTreasureInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleTreasureInfo& from);
  void MergeFrom(const RoleTreasureInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.Treasure treasure_list = 1;
  inline int treasure_list_size() const;
  inline void clear_treasure_list();
  static const int kTreasureListFieldNumber = 1;
  inline const ::PB::Treasure& treasure_list(int index) const;
  inline ::PB::Treasure* mutable_treasure_list(int index);
  inline ::PB::Treasure* add_treasure_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Treasure >&
      treasure_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Treasure >*
      mutable_treasure_list();

  // @@protoc_insertion_point(class_scope:PB.RoleTreasureInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::Treasure > treasure_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleTreasureInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleItemInfo : public ::google::protobuf::Message {
 public:
  RoleItemInfo();
  virtual ~RoleItemInfo();

  RoleItemInfo(const RoleItemInfo& from);

  inline RoleItemInfo& operator=(const RoleItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleItemInfo& default_instance();

  void Swap(RoleItemInfo* other);

  // implements Message ----------------------------------------------

  RoleItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleItemInfo& from);
  void MergeFrom(const RoleItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.Item item_list = 1;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 1;
  inline const ::PB::Item& item_list(int index) const;
  inline ::PB::Item* mutable_item_list(int index);
  inline ::PB::Item* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Item >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Item >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:PB.RoleItemInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::Item > item_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class EmailContext : public ::google::protobuf::Message {
 public:
  EmailContext();
  virtual ~EmailContext();

  EmailContext(const EmailContext& from);

  inline EmailContext& operator=(const EmailContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmailContext& default_instance();

  void Swap(EmailContext* other);

  // implements Message ----------------------------------------------

  EmailContext* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmailContext& from);
  void MergeFrom(const EmailContext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:PB.EmailContext)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static EmailContext* default_instance_;
};
// -------------------------------------------------------------------

class EmailInfo : public ::google::protobuf::Message {
 public:
  EmailInfo();
  virtual ~EmailInfo();

  EmailInfo(const EmailInfo& from);

  inline EmailInfo& operator=(const EmailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmailInfo& default_instance();

  void Swap(EmailInfo* other);

  // implements Message ----------------------------------------------

  EmailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmailInfo& from);
  void MergeFrom(const EmailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 info_id = 2;
  inline bool has_info_id() const;
  inline void clear_info_id();
  static const int kInfoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 info_id() const;
  inline void set_info_id(::google::protobuf::uint32 value);

  // required uint32 receive_time = 3;
  inline bool has_receive_time() const;
  inline void clear_receive_time();
  static const int kReceiveTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 receive_time() const;
  inline void set_receive_time(::google::protobuf::uint32 value);

  // repeated .PB.EmailContext context_list = 4;
  inline int context_list_size() const;
  inline void clear_context_list();
  static const int kContextListFieldNumber = 4;
  inline const ::PB::EmailContext& context_list(int index) const;
  inline ::PB::EmailContext* mutable_context_list(int index);
  inline ::PB::EmailContext* add_context_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::EmailContext >&
      context_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::EmailContext >*
      mutable_context_list();

  // @@protoc_insertion_point(class_scope:PB.EmailInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info_id();
  inline void clear_has_info_id();
  inline void set_has_receive_time();
  inline void clear_has_receive_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 info_id_;
  ::google::protobuf::RepeatedPtrField< ::PB::EmailContext > context_list_;
  ::google::protobuf::uint32 receive_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static EmailInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleEmailInfo : public ::google::protobuf::Message {
 public:
  RoleEmailInfo();
  virtual ~RoleEmailInfo();

  RoleEmailInfo(const RoleEmailInfo& from);

  inline RoleEmailInfo& operator=(const RoleEmailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleEmailInfo& default_instance();

  void Swap(RoleEmailInfo* other);

  // implements Message ----------------------------------------------

  RoleEmailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleEmailInfo& from);
  void MergeFrom(const RoleEmailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.EmailInfo email_list = 1;
  inline int email_list_size() const;
  inline void clear_email_list();
  static const int kEmailListFieldNumber = 1;
  inline const ::PB::EmailInfo& email_list(int index) const;
  inline ::PB::EmailInfo* mutable_email_list(int index);
  inline ::PB::EmailInfo* add_email_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::EmailInfo >&
      email_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::EmailInfo >*
      mutable_email_list();

  // @@protoc_insertion_point(class_scope:PB.RoleEmailInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::EmailInfo > email_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleEmailInfo* default_instance_;
};
// -------------------------------------------------------------------

class MapData : public ::google::protobuf::Message {
 public:
  MapData();
  virtual ~MapData();

  MapData(const MapData& from);

  inline MapData& operator=(const MapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapData& default_instance();

  void Swap(MapData* other);

  // implements Message ----------------------------------------------

  MapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapData& from);
  void MergeFrom(const MapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 star = 1;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 battle_times = 2;
  inline bool has_battle_times() const;
  inline void clear_battle_times();
  static const int kBattleTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 battle_times() const;
  inline void set_battle_times(::google::protobuf::uint32 value);

  // required uint32 reset_times = 3;
  inline bool has_reset_times() const;
  inline void clear_reset_times();
  static const int kResetTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 reset_times() const;
  inline void set_reset_times(::google::protobuf::uint32 value);

  // required uint32 is_get_reward = 4;
  inline bool has_is_get_reward() const;
  inline void clear_is_get_reward();
  static const int kIsGetRewardFieldNumber = 4;
  inline ::google::protobuf::uint32 is_get_reward() const;
  inline void set_is_get_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.MapData)
 private:
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_battle_times();
  inline void clear_has_battle_times();
  inline void set_has_reset_times();
  inline void clear_has_reset_times();
  inline void set_has_is_get_reward();
  inline void clear_has_is_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 battle_times_;
  ::google::protobuf::uint32 reset_times_;
  ::google::protobuf::uint32 is_get_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static MapData* default_instance_;
};
// -------------------------------------------------------------------

class ChapterData : public ::google::protobuf::Message {
 public:
  ChapterData();
  virtual ~ChapterData();

  ChapterData(const ChapterData& from);

  inline ChapterData& operator=(const ChapterData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChapterData& default_instance();

  void Swap(ChapterData* other);

  // implements Message ----------------------------------------------

  ChapterData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChapterData& from);
  void MergeFrom(const ChapterData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.MapData map_list = 1;
  inline int map_list_size() const;
  inline void clear_map_list();
  static const int kMapListFieldNumber = 1;
  inline const ::PB::MapData& map_list(int index) const;
  inline ::PB::MapData* mutable_map_list(int index);
  inline ::PB::MapData* add_map_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::MapData >&
      map_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::MapData >*
      mutable_map_list();

  // repeated uint32 star_reward_list = 2;
  inline int star_reward_list_size() const;
  inline void clear_star_reward_list();
  static const int kStarRewardListFieldNumber = 2;
  inline ::google::protobuf::uint32 star_reward_list(int index) const;
  inline void set_star_reward_list(int index, ::google::protobuf::uint32 value);
  inline void add_star_reward_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      star_reward_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_star_reward_list();

  // @@protoc_insertion_point(class_scope:PB.ChapterData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::MapData > map_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > star_reward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static ChapterData* default_instance_;
};
// -------------------------------------------------------------------

class MainFBData : public ::google::protobuf::Message {
 public:
  MainFBData();
  virtual ~MainFBData();

  MainFBData(const MainFBData& from);

  inline MainFBData& operator=(const MainFBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MainFBData& default_instance();

  void Swap(MainFBData* other);

  // implements Message ----------------------------------------------

  MainFBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MainFBData& from);
  void MergeFrom(const MainFBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ChapterData chapter_list = 1;
  inline int chapter_list_size() const;
  inline void clear_chapter_list();
  static const int kChapterListFieldNumber = 1;
  inline const ::PB::ChapterData& chapter_list(int index) const;
  inline ::PB::ChapterData* mutable_chapter_list(int index);
  inline ::PB::ChapterData* add_chapter_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ChapterData >&
      chapter_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ChapterData >*
      mutable_chapter_list();

  // @@protoc_insertion_point(class_scope:PB.MainFBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ChapterData > chapter_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static MainFBData* default_instance_;
};
// -------------------------------------------------------------------

class HeroMapData : public ::google::protobuf::Message {
 public:
  HeroMapData();
  virtual ~HeroMapData();

  HeroMapData(const HeroMapData& from);

  inline HeroMapData& operator=(const HeroMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroMapData& default_instance();

  void Swap(HeroMapData* other);

  // implements Message ----------------------------------------------

  HeroMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroMapData& from);
  void MergeFrom(const HeroMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 battle_times = 1;
  inline bool has_battle_times() const;
  inline void clear_battle_times();
  static const int kBattleTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 battle_times() const;
  inline void set_battle_times(::google::protobuf::uint32 value);

  // required uint32 is_get_reward = 2;
  inline bool has_is_get_reward() const;
  inline void clear_is_get_reward();
  static const int kIsGetRewardFieldNumber = 2;
  inline ::google::protobuf::uint32 is_get_reward() const;
  inline void set_is_get_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.HeroMapData)
 private:
  inline void set_has_battle_times();
  inline void clear_has_battle_times();
  inline void set_has_is_get_reward();
  inline void clear_has_is_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 battle_times_;
  ::google::protobuf::uint32 is_get_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static HeroMapData* default_instance_;
};
// -------------------------------------------------------------------

class HeroFBChapter : public ::google::protobuf::Message {
 public:
  HeroFBChapter();
  virtual ~HeroFBChapter();

  HeroFBChapter(const HeroFBChapter& from);

  inline HeroFBChapter& operator=(const HeroFBChapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroFBChapter& default_instance();

  void Swap(HeroFBChapter* other);

  // implements Message ----------------------------------------------

  HeroFBChapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroFBChapter& from);
  void MergeFrom(const HeroFBChapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.HeroMapData map_list = 1;
  inline int map_list_size() const;
  inline void clear_map_list();
  static const int kMapListFieldNumber = 1;
  inline const ::PB::HeroMapData& map_list(int index) const;
  inline ::PB::HeroMapData* mutable_map_list(int index);
  inline ::PB::HeroMapData* add_map_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::HeroMapData >&
      map_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::HeroMapData >*
      mutable_map_list();

  // required uint32 is_pass_extra_map = 2;
  inline bool has_is_pass_extra_map() const;
  inline void clear_is_pass_extra_map();
  static const int kIsPassExtraMapFieldNumber = 2;
  inline ::google::protobuf::uint32 is_pass_extra_map() const;
  inline void set_is_pass_extra_map(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.HeroFBChapter)
 private:
  inline void set_has_is_pass_extra_map();
  inline void clear_has_is_pass_extra_map();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::HeroMapData > map_list_;
  ::google::protobuf::uint32 is_pass_extra_map_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static HeroFBChapter* default_instance_;
};
// -------------------------------------------------------------------

class HeroFBData : public ::google::protobuf::Message {
 public:
  HeroFBData();
  virtual ~HeroFBData();

  HeroFBData(const HeroFBData& from);

  inline HeroFBData& operator=(const HeroFBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroFBData& default_instance();

  void Swap(HeroFBData* other);

  // implements Message ----------------------------------------------

  HeroFBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroFBData& from);
  void MergeFrom(const HeroFBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.HeroFBChapter chapter_list = 1;
  inline int chapter_list_size() const;
  inline void clear_chapter_list();
  static const int kChapterListFieldNumber = 1;
  inline const ::PB::HeroFBChapter& chapter_list(int index) const;
  inline ::PB::HeroFBChapter* mutable_chapter_list(int index);
  inline ::PB::HeroFBChapter* add_chapter_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::HeroFBChapter >&
      chapter_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::HeroFBChapter >*
      mutable_chapter_list();

  // required uint32 battle_times = 2;
  inline bool has_battle_times() const;
  inline void clear_battle_times();
  static const int kBattleTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 battle_times() const;
  inline void set_battle_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.HeroFBData)
 private:
  inline void set_has_battle_times();
  inline void clear_has_battle_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::HeroFBChapter > chapter_list_;
  ::google::protobuf::uint32 battle_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static HeroFBData* default_instance_;
};
// -------------------------------------------------------------------

class DailyFBData : public ::google::protobuf::Message {
 public:
  DailyFBData();
  virtual ~DailyFBData();

  DailyFBData(const DailyFBData& from);

  inline DailyFBData& operator=(const DailyFBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyFBData& default_instance();

  void Swap(DailyFBData* other);

  // implements Message ----------------------------------------------

  DailyFBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyFBData& from);
  void MergeFrom(const DailyFBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 chapter_list = 1;
  inline int chapter_list_size() const;
  inline void clear_chapter_list();
  static const int kChapterListFieldNumber = 1;
  inline ::google::protobuf::uint32 chapter_list(int index) const;
  inline void set_chapter_list(int index, ::google::protobuf::uint32 value);
  inline void add_chapter_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chapter_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chapter_list();

  // @@protoc_insertion_point(class_scope:PB.DailyFBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chapter_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static DailyFBData* default_instance_;
};
// -------------------------------------------------------------------

class EliteMapEnemyData : public ::google::protobuf::Message {
 public:
  EliteMapEnemyData();
  virtual ~EliteMapEnemyData();

  EliteMapEnemyData(const EliteMapEnemyData& from);

  inline EliteMapEnemyData& operator=(const EliteMapEnemyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EliteMapEnemyData& default_instance();

  void Swap(EliteMapEnemyData* other);

  // implements Message ----------------------------------------------

  EliteMapEnemyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EliteMapEnemyData& from);
  void MergeFrom(const EliteMapEnemyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // repeated .PB.MonsterData monster_list = 2;
  inline int monster_list_size() const;
  inline void clear_monster_list();
  static const int kMonsterListFieldNumber = 2;
  inline const ::PB::MonsterData& monster_list(int index) const;
  inline ::PB::MonsterData* mutable_monster_list(int index);
  inline ::PB::MonsterData* add_monster_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::MonsterData >&
      monster_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::MonsterData >*
      mutable_monster_list();

  // @@protoc_insertion_point(class_scope:PB.EliteMapEnemyData)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::MonsterData > monster_list_;
  ::google::protobuf::uint32 map_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static EliteMapEnemyData* default_instance_;
};
// -------------------------------------------------------------------

class EliteFBChapter : public ::google::protobuf::Message {
 public:
  EliteFBChapter();
  virtual ~EliteFBChapter();

  EliteFBChapter(const EliteFBChapter& from);

  inline EliteFBChapter& operator=(const EliteFBChapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EliteFBChapter& default_instance();

  void Swap(EliteFBChapter* other);

  // implements Message ----------------------------------------------

  EliteFBChapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EliteFBChapter& from);
  void MergeFrom(const EliteFBChapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.MapData map_list = 1;
  inline int map_list_size() const;
  inline void clear_map_list();
  static const int kMapListFieldNumber = 1;
  inline const ::PB::MapData& map_list(int index) const;
  inline ::PB::MapData* mutable_map_list(int index);
  inline ::PB::MapData* add_map_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::MapData >&
      map_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::MapData >*
      mutable_map_list();

  // repeated uint32 star_reward_list = 2;
  inline int star_reward_list_size() const;
  inline void clear_star_reward_list();
  static const int kStarRewardListFieldNumber = 2;
  inline ::google::protobuf::uint32 star_reward_list(int index) const;
  inline void set_star_reward_list(int index, ::google::protobuf::uint32 value);
  inline void add_star_reward_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      star_reward_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_star_reward_list();

  // required .PB.EliteMapEnemyData enemy_data = 3;
  inline bool has_enemy_data() const;
  inline void clear_enemy_data();
  static const int kEnemyDataFieldNumber = 3;
  inline const ::PB::EliteMapEnemyData& enemy_data() const;
  inline ::PB::EliteMapEnemyData* mutable_enemy_data();
  inline ::PB::EliteMapEnemyData* release_enemy_data();
  inline void set_allocated_enemy_data(::PB::EliteMapEnemyData* enemy_data);

  // @@protoc_insertion_point(class_scope:PB.EliteFBChapter)
 private:
  inline void set_has_enemy_data();
  inline void clear_has_enemy_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::MapData > map_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > star_reward_list_;
  ::PB::EliteMapEnemyData* enemy_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static EliteFBChapter* default_instance_;
};
// -------------------------------------------------------------------

class EliteFBData : public ::google::protobuf::Message {
 public:
  EliteFBData();
  virtual ~EliteFBData();

  EliteFBData(const EliteFBData& from);

  inline EliteFBData& operator=(const EliteFBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EliteFBData& default_instance();

  void Swap(EliteFBData* other);

  // implements Message ----------------------------------------------

  EliteFBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EliteFBData& from);
  void MergeFrom(const EliteFBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.EliteFBChapter chapter_list = 1;
  inline int chapter_list_size() const;
  inline void clear_chapter_list();
  static const int kChapterListFieldNumber = 1;
  inline const ::PB::EliteFBChapter& chapter_list(int index) const;
  inline ::PB::EliteFBChapter* mutable_chapter_list(int index);
  inline ::PB::EliteFBChapter* add_chapter_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::EliteFBChapter >&
      chapter_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::EliteFBChapter >*
      mutable_chapter_list();

  // @@protoc_insertion_point(class_scope:PB.EliteFBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::EliteFBChapter > chapter_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static EliteFBData* default_instance_;
};
// -------------------------------------------------------------------

class TowerFBData : public ::google::protobuf::Message {
 public:
  TowerFBData();
  virtual ~TowerFBData();

  TowerFBData(const TowerFBData& from);

  inline TowerFBData& operator=(const TowerFBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerFBData& default_instance();

  void Swap(TowerFBData* other);

  // implements Message ----------------------------------------------

  TowerFBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerFBData& from);
  void MergeFrom(const TowerFBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 map_star_list = 1;
  inline int map_star_list_size() const;
  inline void clear_map_star_list();
  static const int kMapStarListFieldNumber = 1;
  inline ::google::protobuf::uint32 map_star_list(int index) const;
  inline void set_map_star_list(int index, ::google::protobuf::uint32 value);
  inline void add_map_star_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      map_star_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_map_star_list();

  // required uint32 map_level_record = 2;
  inline bool has_map_level_record() const;
  inline void clear_map_level_record();
  static const int kMapLevelRecordFieldNumber = 2;
  inline ::google::protobuf::uint32 map_level_record() const;
  inline void set_map_level_record(::google::protobuf::uint32 value);

  // required uint32 keep_best_star_passed_record = 3;
  inline bool has_keep_best_star_passed_record() const;
  inline void clear_keep_best_star_passed_record();
  static const int kKeepBestStarPassedRecordFieldNumber = 3;
  inline ::google::protobuf::uint32 keep_best_star_passed_record() const;
  inline void set_keep_best_star_passed_record(::google::protobuf::uint32 value);

  // repeated .PB.Property select_pro_list = 4;
  inline int select_pro_list_size() const;
  inline void clear_select_pro_list();
  static const int kSelectProListFieldNumber = 4;
  inline const ::PB::Property& select_pro_list(int index) const;
  inline ::PB::Property* mutable_select_pro_list(int index);
  inline ::PB::Property* add_select_pro_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::Property >&
      select_pro_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::Property >*
      mutable_select_pro_list();

  // required uint32 is_buy_star_goods = 5;
  inline bool has_is_buy_star_goods() const;
  inline void clear_is_buy_star_goods();
  static const int kIsBuyStarGoodsFieldNumber = 5;
  inline ::google::protobuf::uint32 is_buy_star_goods() const;
  inline void set_is_buy_star_goods(::google::protobuf::uint32 value);

  // required uint32 star_goods_idx = 6;
  inline bool has_star_goods_idx() const;
  inline void clear_star_goods_idx();
  static const int kStarGoodsIdxFieldNumber = 6;
  inline ::google::protobuf::uint32 star_goods_idx() const;
  inline void set_star_goods_idx(::google::protobuf::uint32 value);

  // required uint32 is_need_reset = 7;
  inline bool has_is_need_reset() const;
  inline void clear_is_need_reset();
  static const int kIsNeedResetFieldNumber = 7;
  inline ::google::protobuf::uint32 is_need_reset() const;
  inline void set_is_need_reset(::google::protobuf::uint32 value);

  // required uint32 today_reset_times = 8;
  inline bool has_today_reset_times() const;
  inline void clear_today_reset_times();
  static const int kTodayResetTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 today_reset_times() const;
  inline void set_today_reset_times(::google::protobuf::uint32 value);

  // required uint32 cur_star = 9;
  inline bool has_cur_star() const;
  inline void clear_cur_star();
  static const int kCurStarFieldNumber = 9;
  inline ::google::protobuf::uint32 cur_star() const;
  inline void set_cur_star(::google::protobuf::uint32 value);

  // required uint32 star_max_record = 10;
  inline bool has_star_max_record() const;
  inline void clear_star_max_record();
  static const int kStarMaxRecordFieldNumber = 10;
  inline ::google::protobuf::uint32 star_max_record() const;
  inline void set_star_max_record(::google::protobuf::uint32 value);

  // required uint32 elite_map_level = 11;
  inline bool has_elite_map_level() const;
  inline void clear_elite_map_level();
  static const int kEliteMapLevelFieldNumber = 11;
  inline ::google::protobuf::uint32 elite_map_level() const;
  inline void set_elite_map_level(::google::protobuf::uint32 value);

  // required uint32 elite_map_battle_times = 12;
  inline bool has_elite_map_battle_times() const;
  inline void clear_elite_map_battle_times();
  static const int kEliteMapBattleTimesFieldNumber = 12;
  inline ::google::protobuf::uint32 elite_map_battle_times() const;
  inline void set_elite_map_battle_times(::google::protobuf::uint32 value);

  // required uint32 buy_elite_map_battle_times = 13;
  inline bool has_buy_elite_map_battle_times() const;
  inline void clear_buy_elite_map_battle_times();
  static const int kBuyEliteMapBattleTimesFieldNumber = 13;
  inline ::google::protobuf::uint32 buy_elite_map_battle_times() const;
  inline void set_buy_elite_map_battle_times(::google::protobuf::uint32 value);

  // repeated uint32 rand_pro_idx_list = 14;
  inline int rand_pro_idx_list_size() const;
  inline void clear_rand_pro_idx_list();
  static const int kRandProIdxListFieldNumber = 14;
  inline ::google::protobuf::uint32 rand_pro_idx_list(int index) const;
  inline void set_rand_pro_idx_list(int index, ::google::protobuf::uint32 value);
  inline void add_rand_pro_idx_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rand_pro_idx_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rand_pro_idx_list();

  // @@protoc_insertion_point(class_scope:PB.TowerFBData)
 private:
  inline void set_has_map_level_record();
  inline void clear_has_map_level_record();
  inline void set_has_keep_best_star_passed_record();
  inline void clear_has_keep_best_star_passed_record();
  inline void set_has_is_buy_star_goods();
  inline void clear_has_is_buy_star_goods();
  inline void set_has_star_goods_idx();
  inline void clear_has_star_goods_idx();
  inline void set_has_is_need_reset();
  inline void clear_has_is_need_reset();
  inline void set_has_today_reset_times();
  inline void clear_has_today_reset_times();
  inline void set_has_cur_star();
  inline void clear_has_cur_star();
  inline void set_has_star_max_record();
  inline void clear_has_star_max_record();
  inline void set_has_elite_map_level();
  inline void clear_has_elite_map_level();
  inline void set_has_elite_map_battle_times();
  inline void clear_has_elite_map_battle_times();
  inline void set_has_buy_elite_map_battle_times();
  inline void clear_has_buy_elite_map_battle_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > map_star_list_;
  ::google::protobuf::uint32 map_level_record_;
  ::google::protobuf::uint32 keep_best_star_passed_record_;
  ::google::protobuf::RepeatedPtrField< ::PB::Property > select_pro_list_;
  ::google::protobuf::uint32 is_buy_star_goods_;
  ::google::protobuf::uint32 star_goods_idx_;
  ::google::protobuf::uint32 is_need_reset_;
  ::google::protobuf::uint32 today_reset_times_;
  ::google::protobuf::uint32 cur_star_;
  ::google::protobuf::uint32 star_max_record_;
  ::google::protobuf::uint32 elite_map_level_;
  ::google::protobuf::uint32 elite_map_battle_times_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rand_pro_idx_list_;
  ::google::protobuf::uint32 buy_elite_map_battle_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static TowerFBData* default_instance_;
};
// -------------------------------------------------------------------

class RoleFBInfo : public ::google::protobuf::Message {
 public:
  RoleFBInfo();
  virtual ~RoleFBInfo();

  RoleFBInfo(const RoleFBInfo& from);

  inline RoleFBInfo& operator=(const RoleFBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleFBInfo& default_instance();

  void Swap(RoleFBInfo* other);

  // implements Message ----------------------------------------------

  RoleFBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleFBInfo& from);
  void MergeFrom(const RoleFBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PB.MainFBData main_fb_data = 1;
  inline bool has_main_fb_data() const;
  inline void clear_main_fb_data();
  static const int kMainFbDataFieldNumber = 1;
  inline const ::PB::MainFBData& main_fb_data() const;
  inline ::PB::MainFBData* mutable_main_fb_data();
  inline ::PB::MainFBData* release_main_fb_data();
  inline void set_allocated_main_fb_data(::PB::MainFBData* main_fb_data);

  // required .PB.HeroFBData hero_fb_data = 2;
  inline bool has_hero_fb_data() const;
  inline void clear_hero_fb_data();
  static const int kHeroFbDataFieldNumber = 2;
  inline const ::PB::HeroFBData& hero_fb_data() const;
  inline ::PB::HeroFBData* mutable_hero_fb_data();
  inline ::PB::HeroFBData* release_hero_fb_data();
  inline void set_allocated_hero_fb_data(::PB::HeroFBData* hero_fb_data);

  // required .PB.DailyFBData daily_fb_data = 3;
  inline bool has_daily_fb_data() const;
  inline void clear_daily_fb_data();
  static const int kDailyFbDataFieldNumber = 3;
  inline const ::PB::DailyFBData& daily_fb_data() const;
  inline ::PB::DailyFBData* mutable_daily_fb_data();
  inline ::PB::DailyFBData* release_daily_fb_data();
  inline void set_allocated_daily_fb_data(::PB::DailyFBData* daily_fb_data);

  // required .PB.TowerFBData tower_fb_data = 4;
  inline bool has_tower_fb_data() const;
  inline void clear_tower_fb_data();
  static const int kTowerFbDataFieldNumber = 4;
  inline const ::PB::TowerFBData& tower_fb_data() const;
  inline ::PB::TowerFBData* mutable_tower_fb_data();
  inline ::PB::TowerFBData* release_tower_fb_data();
  inline void set_allocated_tower_fb_data(::PB::TowerFBData* tower_fb_data);

  // required .PB.EliteFBData elite_fb_data = 5;
  inline bool has_elite_fb_data() const;
  inline void clear_elite_fb_data();
  static const int kEliteFbDataFieldNumber = 5;
  inline const ::PB::EliteFBData& elite_fb_data() const;
  inline ::PB::EliteFBData* mutable_elite_fb_data();
  inline ::PB::EliteFBData* release_elite_fb_data();
  inline void set_allocated_elite_fb_data(::PB::EliteFBData* elite_fb_data);

  // @@protoc_insertion_point(class_scope:PB.RoleFBInfo)
 private:
  inline void set_has_main_fb_data();
  inline void clear_has_main_fb_data();
  inline void set_has_hero_fb_data();
  inline void clear_has_hero_fb_data();
  inline void set_has_daily_fb_data();
  inline void clear_has_daily_fb_data();
  inline void set_has_tower_fb_data();
  inline void clear_has_tower_fb_data();
  inline void set_has_elite_fb_data();
  inline void clear_has_elite_fb_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PB::MainFBData* main_fb_data_;
  ::PB::HeroFBData* hero_fb_data_;
  ::PB::DailyFBData* daily_fb_data_;
  ::PB::TowerFBData* tower_fb_data_;
  ::PB::EliteFBData* elite_fb_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleFBInfo* default_instance_;
};
// -------------------------------------------------------------------

class ShopGoods : public ::google::protobuf::Message {
 public:
  ShopGoods();
  virtual ~ShopGoods();

  ShopGoods(const ShopGoods& from);

  inline ShopGoods& operator=(const ShopGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopGoods& default_instance();

  void Swap(ShopGoods* other);

  // implements Message ----------------------------------------------

  ShopGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopGoods& from);
  void MergeFrom(const ShopGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goods_id = 1;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // required uint32 goods_num = 2;
  inline bool has_goods_num() const;
  inline void clear_goods_num();
  static const int kGoodsNumFieldNumber = 2;
  inline ::google::protobuf::uint32 goods_num() const;
  inline void set_goods_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.ShopGoods)
 private:
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_goods_num();
  inline void clear_has_goods_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 goods_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static ShopGoods* default_instance_;
};
// -------------------------------------------------------------------

class HeroShopData : public ::google::protobuf::Message {
 public:
  HeroShopData();
  virtual ~HeroShopData();

  HeroShopData(const HeroShopData& from);

  inline HeroShopData& operator=(const HeroShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroShopData& default_instance();

  void Swap(HeroShopData* other);

  // implements Message ----------------------------------------------

  HeroShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroShopData& from);
  void MergeFrom(const HeroShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods goods_list = 1;
  inline int goods_list_size() const;
  inline void clear_goods_list();
  static const int kGoodsListFieldNumber = 1;
  inline const ::PB::ShopGoods& goods_list(int index) const;
  inline ::PB::ShopGoods* mutable_goods_list(int index);
  inline ::PB::ShopGoods* add_goods_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      goods_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_goods_list();

  // required uint32 last_recover_time = 2;
  inline bool has_last_recover_time() const;
  inline void clear_last_recover_time();
  static const int kLastRecoverTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 last_recover_time() const;
  inline void set_last_recover_time(::google::protobuf::uint32 value);

  // required uint32 free_refresh_times = 3;
  inline bool has_free_refresh_times() const;
  inline void clear_free_refresh_times();
  static const int kFreeRefreshTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 free_refresh_times() const;
  inline void set_free_refresh_times(::google::protobuf::uint32 value);

  // required uint32 cost_refresh_times = 4;
  inline bool has_cost_refresh_times() const;
  inline void clear_cost_refresh_times();
  static const int kCostRefreshTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_refresh_times() const;
  inline void set_cost_refresh_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.HeroShopData)
 private:
  inline void set_has_last_recover_time();
  inline void clear_has_last_recover_time();
  inline void set_has_free_refresh_times();
  inline void clear_has_free_refresh_times();
  inline void set_has_cost_refresh_times();
  inline void clear_has_cost_refresh_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > goods_list_;
  ::google::protobuf::uint32 last_recover_time_;
  ::google::protobuf::uint32 free_refresh_times_;
  ::google::protobuf::uint32 cost_refresh_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static HeroShopData* default_instance_;
};
// -------------------------------------------------------------------

class GuildShopData : public ::google::protobuf::Message {
 public:
  GuildShopData();
  virtual ~GuildShopData();

  GuildShopData(const GuildShopData& from);

  inline GuildShopData& operator=(const GuildShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildShopData& default_instance();

  void Swap(GuildShopData* other);

  // implements Message ----------------------------------------------

  GuildShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildShopData& from);
  void MergeFrom(const GuildShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods reward_goods_buy_record = 1;
  inline int reward_goods_buy_record_size() const;
  inline void clear_reward_goods_buy_record();
  static const int kRewardGoodsBuyRecordFieldNumber = 1;
  inline const ::PB::ShopGoods& reward_goods_buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_reward_goods_buy_record(int index);
  inline ::PB::ShopGoods* add_reward_goods_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      reward_goods_buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_reward_goods_buy_record();

  // repeated .PB.ShopGoods item_goods_buy_record = 2;
  inline int item_goods_buy_record_size() const;
  inline void clear_item_goods_buy_record();
  static const int kItemGoodsBuyRecordFieldNumber = 2;
  inline const ::PB::ShopGoods& item_goods_buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_item_goods_buy_record(int index);
  inline ::PB::ShopGoods* add_item_goods_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      item_goods_buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_item_goods_buy_record();

  // repeated .PB.ShopGoods limit_goods_buy_record = 3;
  inline int limit_goods_buy_record_size() const;
  inline void clear_limit_goods_buy_record();
  static const int kLimitGoodsBuyRecordFieldNumber = 3;
  inline const ::PB::ShopGoods& limit_goods_buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_limit_goods_buy_record(int index);
  inline ::PB::ShopGoods* add_limit_goods_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      limit_goods_buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_limit_goods_buy_record();

  // @@protoc_insertion_point(class_scope:PB.GuildShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > reward_goods_buy_record_;
  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > item_goods_buy_record_;
  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > limit_goods_buy_record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static GuildShopData* default_instance_;
};
// -------------------------------------------------------------------

class MallShopData : public ::google::protobuf::Message {
 public:
  MallShopData();
  virtual ~MallShopData();

  MallShopData(const MallShopData& from);

  inline MallShopData& operator=(const MallShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallShopData& default_instance();

  void Swap(MallShopData* other);

  // implements Message ----------------------------------------------

  MallShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallShopData& from);
  void MergeFrom(const MallShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods item_buy_record = 1;
  inline int item_buy_record_size() const;
  inline void clear_item_buy_record();
  static const int kItemBuyRecordFieldNumber = 1;
  inline const ::PB::ShopGoods& item_buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_item_buy_record(int index);
  inline ::PB::ShopGoods* add_item_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      item_buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_item_buy_record();

  // repeated .PB.ShopGoods gift_buy_record = 2;
  inline int gift_buy_record_size() const;
  inline void clear_gift_buy_record();
  static const int kGiftBuyRecordFieldNumber = 2;
  inline const ::PB::ShopGoods& gift_buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_gift_buy_record(int index);
  inline ::PB::ShopGoods* add_gift_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      gift_buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_gift_buy_record();

  // @@protoc_insertion_point(class_scope:PB.MallShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > item_buy_record_;
  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > gift_buy_record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static MallShopData* default_instance_;
};
// -------------------------------------------------------------------

class TowerShopData : public ::google::protobuf::Message {
 public:
  TowerShopData();
  virtual ~TowerShopData();

  TowerShopData(const TowerShopData& from);

  inline TowerShopData& operator=(const TowerShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerShopData& default_instance();

  void Swap(TowerShopData* other);

  // implements Message ----------------------------------------------

  TowerShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerShopData& from);
  void MergeFrom(const TowerShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods buy_record = 1;
  inline int buy_record_size() const;
  inline void clear_buy_record();
  static const int kBuyRecordFieldNumber = 1;
  inline const ::PB::ShopGoods& buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_buy_record(int index);
  inline ::PB::ShopGoods* add_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_buy_record();

  // @@protoc_insertion_point(class_scope:PB.TowerShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > buy_record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static TowerShopData* default_instance_;
};
// -------------------------------------------------------------------

class ArenaShopData : public ::google::protobuf::Message {
 public:
  ArenaShopData();
  virtual ~ArenaShopData();

  ArenaShopData(const ArenaShopData& from);

  inline ArenaShopData& operator=(const ArenaShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaShopData& default_instance();

  void Swap(ArenaShopData* other);

  // implements Message ----------------------------------------------

  ArenaShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaShopData& from);
  void MergeFrom(const ArenaShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods buy_record = 1;
  inline int buy_record_size() const;
  inline void clear_buy_record();
  static const int kBuyRecordFieldNumber = 1;
  inline const ::PB::ShopGoods& buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_buy_record(int index);
  inline ::PB::ShopGoods* add_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_buy_record();

  // @@protoc_insertion_point(class_scope:PB.ArenaShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > buy_record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static ArenaShopData* default_instance_;
};
// -------------------------------------------------------------------

class AwakenShopData : public ::google::protobuf::Message {
 public:
  AwakenShopData();
  virtual ~AwakenShopData();

  AwakenShopData(const AwakenShopData& from);

  inline AwakenShopData& operator=(const AwakenShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AwakenShopData& default_instance();

  void Swap(AwakenShopData* other);

  // implements Message ----------------------------------------------

  AwakenShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AwakenShopData& from);
  void MergeFrom(const AwakenShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods goods_list = 1;
  inline int goods_list_size() const;
  inline void clear_goods_list();
  static const int kGoodsListFieldNumber = 1;
  inline const ::PB::ShopGoods& goods_list(int index) const;
  inline ::PB::ShopGoods* mutable_goods_list(int index);
  inline ::PB::ShopGoods* add_goods_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      goods_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_goods_list();

  // required uint32 last_recover_time = 2;
  inline bool has_last_recover_time() const;
  inline void clear_last_recover_time();
  static const int kLastRecoverTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 last_recover_time() const;
  inline void set_last_recover_time(::google::protobuf::uint32 value);

  // required uint32 free_refresh_times = 3;
  inline bool has_free_refresh_times() const;
  inline void clear_free_refresh_times();
  static const int kFreeRefreshTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 free_refresh_times() const;
  inline void set_free_refresh_times(::google::protobuf::uint32 value);

  // required uint32 cost_refresh_times = 4;
  inline bool has_cost_refresh_times() const;
  inline void clear_cost_refresh_times();
  static const int kCostRefreshTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_refresh_times() const;
  inline void set_cost_refresh_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.AwakenShopData)
 private:
  inline void set_has_last_recover_time();
  inline void clear_has_last_recover_time();
  inline void set_has_free_refresh_times();
  inline void clear_has_free_refresh_times();
  inline void set_has_cost_refresh_times();
  inline void clear_has_cost_refresh_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > goods_list_;
  ::google::protobuf::uint32 last_recover_time_;
  ::google::protobuf::uint32 free_refresh_times_;
  ::google::protobuf::uint32 cost_refresh_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static AwakenShopData* default_instance_;
};
// -------------------------------------------------------------------

class FairyShopData : public ::google::protobuf::Message {
 public:
  FairyShopData();
  virtual ~FairyShopData();

  FairyShopData(const FairyShopData& from);

  inline FairyShopData& operator=(const FairyShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FairyShopData& default_instance();

  void Swap(FairyShopData* other);

  // implements Message ----------------------------------------------

  FairyShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FairyShopData& from);
  void MergeFrom(const FairyShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods goods_list = 1;
  inline int goods_list_size() const;
  inline void clear_goods_list();
  static const int kGoodsListFieldNumber = 1;
  inline const ::PB::ShopGoods& goods_list(int index) const;
  inline ::PB::ShopGoods* mutable_goods_list(int index);
  inline ::PB::ShopGoods* add_goods_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      goods_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_goods_list();

  // required uint32 used_refresh_times = 2;
  inline bool has_used_refresh_times() const;
  inline void clear_used_refresh_times();
  static const int kUsedRefreshTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 used_refresh_times() const;
  inline void set_used_refresh_times(::google::protobuf::uint32 value);

  // required uint32 last_auto_refresh_time = 3;
  inline bool has_last_auto_refresh_time() const;
  inline void clear_last_auto_refresh_time();
  static const int kLastAutoRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_auto_refresh_time() const;
  inline void set_last_auto_refresh_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.FairyShopData)
 private:
  inline void set_has_used_refresh_times();
  inline void clear_has_used_refresh_times();
  inline void set_has_last_auto_refresh_time();
  inline void clear_has_last_auto_refresh_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > goods_list_;
  ::google::protobuf::uint32 used_refresh_times_;
  ::google::protobuf::uint32 last_auto_refresh_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static FairyShopData* default_instance_;
};
// -------------------------------------------------------------------

class ScoreMatchShopData : public ::google::protobuf::Message {
 public:
  ScoreMatchShopData();
  virtual ~ScoreMatchShopData();

  ScoreMatchShopData(const ScoreMatchShopData& from);

  inline ScoreMatchShopData& operator=(const ScoreMatchShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreMatchShopData& default_instance();

  void Swap(ScoreMatchShopData* other);

  // implements Message ----------------------------------------------

  ScoreMatchShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScoreMatchShopData& from);
  void MergeFrom(const ScoreMatchShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods buy_record = 1;
  inline int buy_record_size() const;
  inline void clear_buy_record();
  static const int kBuyRecordFieldNumber = 1;
  inline const ::PB::ShopGoods& buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_buy_record(int index);
  inline ::PB::ShopGoods* add_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_buy_record();

  // @@protoc_insertion_point(class_scope:PB.ScoreMatchShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > buy_record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static ScoreMatchShopData* default_instance_;
};
// -------------------------------------------------------------------

class SevenDayShopData : public ::google::protobuf::Message {
 public:
  SevenDayShopData();
  virtual ~SevenDayShopData();

  SevenDayShopData(const SevenDayShopData& from);

  inline SevenDayShopData& operator=(const SevenDayShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SevenDayShopData& default_instance();

  void Swap(SevenDayShopData* other);

  // implements Message ----------------------------------------------

  SevenDayShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SevenDayShopData& from);
  void MergeFrom(const SevenDayShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.ShopGoods buy_record = 1;
  inline int buy_record_size() const;
  inline void clear_buy_record();
  static const int kBuyRecordFieldNumber = 1;
  inline const ::PB::ShopGoods& buy_record(int index) const;
  inline ::PB::ShopGoods* mutable_buy_record(int index);
  inline ::PB::ShopGoods* add_buy_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
      buy_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
      mutable_buy_record();

  // @@protoc_insertion_point(class_scope:PB.SevenDayShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods > buy_record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static SevenDayShopData* default_instance_;
};
// -------------------------------------------------------------------

class RoleShopInfo : public ::google::protobuf::Message {
 public:
  RoleShopInfo();
  virtual ~RoleShopInfo();

  RoleShopInfo(const RoleShopInfo& from);

  inline RoleShopInfo& operator=(const RoleShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleShopInfo& default_instance();

  void Swap(RoleShopInfo* other);

  // implements Message ----------------------------------------------

  RoleShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleShopInfo& from);
  void MergeFrom(const RoleShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PB.HeroShopData hero_shop = 1;
  inline bool has_hero_shop() const;
  inline void clear_hero_shop();
  static const int kHeroShopFieldNumber = 1;
  inline const ::PB::HeroShopData& hero_shop() const;
  inline ::PB::HeroShopData* mutable_hero_shop();
  inline ::PB::HeroShopData* release_hero_shop();
  inline void set_allocated_hero_shop(::PB::HeroShopData* hero_shop);

  // required .PB.GuildShopData guild_shop = 2;
  inline bool has_guild_shop() const;
  inline void clear_guild_shop();
  static const int kGuildShopFieldNumber = 2;
  inline const ::PB::GuildShopData& guild_shop() const;
  inline ::PB::GuildShopData* mutable_guild_shop();
  inline ::PB::GuildShopData* release_guild_shop();
  inline void set_allocated_guild_shop(::PB::GuildShopData* guild_shop);

  // required .PB.MallShopData mall_shop = 3;
  inline bool has_mall_shop() const;
  inline void clear_mall_shop();
  static const int kMallShopFieldNumber = 3;
  inline const ::PB::MallShopData& mall_shop() const;
  inline ::PB::MallShopData* mutable_mall_shop();
  inline ::PB::MallShopData* release_mall_shop();
  inline void set_allocated_mall_shop(::PB::MallShopData* mall_shop);

  // required .PB.TowerShopData tower_shop = 4;
  inline bool has_tower_shop() const;
  inline void clear_tower_shop();
  static const int kTowerShopFieldNumber = 4;
  inline const ::PB::TowerShopData& tower_shop() const;
  inline ::PB::TowerShopData* mutable_tower_shop();
  inline ::PB::TowerShopData* release_tower_shop();
  inline void set_allocated_tower_shop(::PB::TowerShopData* tower_shop);

  // required .PB.ArenaShopData arena_shop = 5;
  inline bool has_arena_shop() const;
  inline void clear_arena_shop();
  static const int kArenaShopFieldNumber = 5;
  inline const ::PB::ArenaShopData& arena_shop() const;
  inline ::PB::ArenaShopData* mutable_arena_shop();
  inline ::PB::ArenaShopData* release_arena_shop();
  inline void set_allocated_arena_shop(::PB::ArenaShopData* arena_shop);

  // required .PB.AwakenShopData awaken_shop = 6;
  inline bool has_awaken_shop() const;
  inline void clear_awaken_shop();
  static const int kAwakenShopFieldNumber = 6;
  inline const ::PB::AwakenShopData& awaken_shop() const;
  inline ::PB::AwakenShopData* mutable_awaken_shop();
  inline ::PB::AwakenShopData* release_awaken_shop();
  inline void set_allocated_awaken_shop(::PB::AwakenShopData* awaken_shop);

  // required .PB.FairyShopData fairy_shop = 7;
  inline bool has_fairy_shop() const;
  inline void clear_fairy_shop();
  static const int kFairyShopFieldNumber = 7;
  inline const ::PB::FairyShopData& fairy_shop() const;
  inline ::PB::FairyShopData* mutable_fairy_shop();
  inline ::PB::FairyShopData* release_fairy_shop();
  inline void set_allocated_fairy_shop(::PB::FairyShopData* fairy_shop);

  // required .PB.ScoreMatchShopData score_match_shop = 8;
  inline bool has_score_match_shop() const;
  inline void clear_score_match_shop();
  static const int kScoreMatchShopFieldNumber = 8;
  inline const ::PB::ScoreMatchShopData& score_match_shop() const;
  inline ::PB::ScoreMatchShopData* mutable_score_match_shop();
  inline ::PB::ScoreMatchShopData* release_score_match_shop();
  inline void set_allocated_score_match_shop(::PB::ScoreMatchShopData* score_match_shop);

  // optional .PB.SevenDayShopData seven_day_shop = 9;
  inline bool has_seven_day_shop() const;
  inline void clear_seven_day_shop();
  static const int kSevenDayShopFieldNumber = 9;
  inline const ::PB::SevenDayShopData& seven_day_shop() const;
  inline ::PB::SevenDayShopData* mutable_seven_day_shop();
  inline ::PB::SevenDayShopData* release_seven_day_shop();
  inline void set_allocated_seven_day_shop(::PB::SevenDayShopData* seven_day_shop);

  // @@protoc_insertion_point(class_scope:PB.RoleShopInfo)
 private:
  inline void set_has_hero_shop();
  inline void clear_has_hero_shop();
  inline void set_has_guild_shop();
  inline void clear_has_guild_shop();
  inline void set_has_mall_shop();
  inline void clear_has_mall_shop();
  inline void set_has_tower_shop();
  inline void clear_has_tower_shop();
  inline void set_has_arena_shop();
  inline void clear_has_arena_shop();
  inline void set_has_awaken_shop();
  inline void clear_has_awaken_shop();
  inline void set_has_fairy_shop();
  inline void clear_has_fairy_shop();
  inline void set_has_score_match_shop();
  inline void clear_has_score_match_shop();
  inline void set_has_seven_day_shop();
  inline void clear_has_seven_day_shop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PB::HeroShopData* hero_shop_;
  ::PB::GuildShopData* guild_shop_;
  ::PB::MallShopData* mall_shop_;
  ::PB::TowerShopData* tower_shop_;
  ::PB::ArenaShopData* arena_shop_;
  ::PB::AwakenShopData* awaken_shop_;
  ::PB::FairyShopData* fairy_shop_;
  ::PB::ScoreMatchShopData* score_match_shop_;
  ::PB::SevenDayShopData* seven_day_shop_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleSpiritInfo : public ::google::protobuf::Message {
 public:
  RoleSpiritInfo();
  virtual ~RoleSpiritInfo();

  RoleSpiritInfo(const RoleSpiritInfo& from);

  inline RoleSpiritInfo& operator=(const RoleSpiritInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleSpiritInfo& default_instance();

  void Swap(RoleSpiritInfo* other);

  // implements Message ----------------------------------------------

  RoleSpiritInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleSpiritInfo& from);
  void MergeFrom(const RoleSpiritInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.RoleSpiritInfo)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stage_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleSpiritInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendData : public ::google::protobuf::Message {
 public:
  FriendData();
  virtual ~FriendData();

  FriendData(const FriendData& from);

  inline FriendData& operator=(const FriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendData& default_instance();

  void Swap(FriendData* other);

  // implements Message ----------------------------------------------

  FriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendData& from);
  void MergeFrom(const FriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 is_give_energy = 2;
  inline bool has_is_give_energy() const;
  inline void clear_is_give_energy();
  static const int kIsGiveEnergyFieldNumber = 2;
  inline ::google::protobuf::uint32 is_give_energy() const;
  inline void set_is_give_energy(::google::protobuf::uint32 value);

  // required uint32 get_energy_state = 3;
  inline bool has_get_energy_state() const;
  inline void clear_get_energy_state();
  static const int kGetEnergyStateFieldNumber = 3;
  inline ::google::protobuf::uint32 get_energy_state() const;
  inline void set_get_energy_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.FriendData)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_is_give_energy();
  inline void clear_has_is_give_energy();
  inline void set_has_get_energy_state();
  inline void clear_has_get_energy_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 is_give_energy_;
  ::google::protobuf::uint32 get_energy_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static FriendData* default_instance_;
};
// -------------------------------------------------------------------

class RoleFriendData : public ::google::protobuf::Message {
 public:
  RoleFriendData();
  virtual ~RoleFriendData();

  RoleFriendData(const RoleFriendData& from);

  inline RoleFriendData& operator=(const RoleFriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleFriendData& default_instance();

  void Swap(RoleFriendData* other);

  // implements Message ----------------------------------------------

  RoleFriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleFriendData& from);
  void MergeFrom(const RoleFriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.FriendData friend_list = 1;
  inline int friend_list_size() const;
  inline void clear_friend_list();
  static const int kFriendListFieldNumber = 1;
  inline const ::PB::FriendData& friend_list(int index) const;
  inline ::PB::FriendData* mutable_friend_list(int index);
  inline ::PB::FriendData* add_friend_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::FriendData >&
      friend_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::FriendData >*
      mutable_friend_list();

  // repeated uint32 black_list = 2;
  inline int black_list_size() const;
  inline void clear_black_list();
  static const int kBlackListFieldNumber = 2;
  inline ::google::protobuf::uint32 black_list(int index) const;
  inline void set_black_list(int index, ::google::protobuf::uint32 value);
  inline void add_black_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      black_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_black_list();

  // repeated uint32 apply_list = 3;
  inline int apply_list_size() const;
  inline void clear_apply_list();
  static const int kApplyListFieldNumber = 3;
  inline ::google::protobuf::uint32 apply_list(int index) const;
  inline void set_apply_list(int index, ::google::protobuf::uint32 value);
  inline void add_apply_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      apply_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_apply_list();

  // required uint32 get_energy_times = 4;
  inline bool has_get_energy_times() const;
  inline void clear_get_energy_times();
  static const int kGetEnergyTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 get_energy_times() const;
  inline void set_get_energy_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.RoleFriendData)
 private:
  inline void set_has_get_energy_times();
  inline void clear_has_get_energy_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::FriendData > friend_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > black_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > apply_list_;
  ::google::protobuf::uint32 get_energy_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleFriendData* default_instance_;
};
// -------------------------------------------------------------------

class RoleRebelInfo : public ::google::protobuf::Message {
 public:
  RoleRebelInfo();
  virtual ~RoleRebelInfo();

  RoleRebelInfo(const RoleRebelInfo& from);

  inline RoleRebelInfo& operator=(const RoleRebelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleRebelInfo& default_instance();

  void Swap(RoleRebelInfo* other);

  // implements Message ----------------------------------------------

  RoleRebelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleRebelInfo& from);
  void MergeFrom(const RoleRebelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rebel_level = 1;
  inline bool has_rebel_level() const;
  inline void clear_rebel_level();
  static const int kRebelLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 rebel_level() const;
  inline void set_rebel_level(::google::protobuf::uint32 value);

  // required uint32 today_exploit = 2;
  inline bool has_today_exploit() const;
  inline void clear_today_exploit();
  static const int kTodayExploitFieldNumber = 2;
  inline ::google::protobuf::uint32 today_exploit() const;
  inline void set_today_exploit(::google::protobuf::uint32 value);

  // required uint32 today_damage = 3;
  inline bool has_today_damage() const;
  inline void clear_today_damage();
  static const int kTodayDamageFieldNumber = 3;
  inline ::google::protobuf::uint32 today_damage() const;
  inline void set_today_damage(::google::protobuf::uint32 value);

  // repeated uint32 reward_get_record_list = 4;
  inline int reward_get_record_list_size() const;
  inline void clear_reward_get_record_list();
  static const int kRewardGetRecordListFieldNumber = 4;
  inline ::google::protobuf::uint32 reward_get_record_list(int index) const;
  inline void set_reward_get_record_list(int index, ::google::protobuf::uint32 value);
  inline void add_reward_get_record_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reward_get_record_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reward_get_record_list();

  // required uint32 is_already_share = 5;
  inline bool has_is_already_share() const;
  inline void clear_is_already_share();
  static const int kIsAlreadyShareFieldNumber = 5;
  inline ::google::protobuf::uint32 is_already_share() const;
  inline void set_is_already_share(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.RoleRebelInfo)
 private:
  inline void set_has_rebel_level();
  inline void clear_has_rebel_level();
  inline void set_has_today_exploit();
  inline void clear_has_today_exploit();
  inline void set_has_today_damage();
  inline void clear_has_today_damage();
  inline void set_has_is_already_share();
  inline void clear_has_is_already_share();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rebel_level_;
  ::google::protobuf::uint32 today_exploit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reward_get_record_list_;
  ::google::protobuf::uint32 today_damage_;
  ::google::protobuf::uint32 is_already_share_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleRebelInfo* default_instance_;
};
// -------------------------------------------------------------------

class AchievementData : public ::google::protobuf::Message {
 public:
  AchievementData();
  virtual ~AchievementData();

  AchievementData(const AchievementData& from);

  inline AchievementData& operator=(const AchievementData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementData& default_instance();

  void Swap(AchievementData* other);

  // implements Message ----------------------------------------------

  AchievementData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AchievementData& from);
  void MergeFrom(const AchievementData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required uint32 cur_reward_level = 4;
  inline bool has_cur_reward_level() const;
  inline void clear_cur_reward_level();
  static const int kCurRewardLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 cur_reward_level() const;
  inline void set_cur_reward_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.AchievementData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_cur_reward_level();
  inline void clear_has_cur_reward_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 cur_reward_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static AchievementData* default_instance_;
};
// -------------------------------------------------------------------

class RoleAchievemntInfo : public ::google::protobuf::Message {
 public:
  RoleAchievemntInfo();
  virtual ~RoleAchievemntInfo();

  RoleAchievemntInfo(const RoleAchievemntInfo& from);

  inline RoleAchievemntInfo& operator=(const RoleAchievemntInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleAchievemntInfo& default_instance();

  void Swap(RoleAchievemntInfo* other);

  // implements Message ----------------------------------------------

  RoleAchievemntInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleAchievemntInfo& from);
  void MergeFrom(const RoleAchievemntInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.AchievementData achievement_list = 1;
  inline int achievement_list_size() const;
  inline void clear_achievement_list();
  static const int kAchievementListFieldNumber = 1;
  inline const ::PB::AchievementData& achievement_list(int index) const;
  inline ::PB::AchievementData* mutable_achievement_list(int index);
  inline ::PB::AchievementData* add_achievement_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::AchievementData >&
      achievement_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::AchievementData >*
      mutable_achievement_list();

  // @@protoc_insertion_point(class_scope:PB.RoleAchievemntInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::AchievementData > achievement_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleAchievemntInfo* default_instance_;
};
// -------------------------------------------------------------------

class DailyMission : public ::google::protobuf::Message {
 public:
  DailyMission();
  virtual ~DailyMission();

  DailyMission(const DailyMission& from);

  inline DailyMission& operator=(const DailyMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyMission& default_instance();

  void Swap(DailyMission* other);

  // implements Message ----------------------------------------------

  DailyMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyMission& from);
  void MergeFrom(const DailyMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 is_get_reward = 2;
  inline bool has_is_get_reward() const;
  inline void clear_is_get_reward();
  static const int kIsGetRewardFieldNumber = 2;
  inline ::google::protobuf::uint32 is_get_reward() const;
  inline void set_is_get_reward(::google::protobuf::uint32 value);

  // required uint32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.DailyMission)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_get_reward();
  inline void clear_has_is_get_reward();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 is_get_reward_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static DailyMission* default_instance_;
};
// -------------------------------------------------------------------

class RoleDailyMissionInfo : public ::google::protobuf::Message {
 public:
  RoleDailyMissionInfo();
  virtual ~RoleDailyMissionInfo();

  RoleDailyMissionInfo(const RoleDailyMissionInfo& from);

  inline RoleDailyMissionInfo& operator=(const RoleDailyMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDailyMissionInfo& default_instance();

  void Swap(RoleDailyMissionInfo* other);

  // implements Message ----------------------------------------------

  RoleDailyMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleDailyMissionInfo& from);
  void MergeFrom(const RoleDailyMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 point = 1;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 1;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // repeated uint32 point_reward_record = 2;
  inline int point_reward_record_size() const;
  inline void clear_point_reward_record();
  static const int kPointRewardRecordFieldNumber = 2;
  inline ::google::protobuf::uint32 point_reward_record(int index) const;
  inline void set_point_reward_record(int index, ::google::protobuf::uint32 value);
  inline void add_point_reward_record(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      point_reward_record() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_point_reward_record();

  // repeated .PB.DailyMission mission_list = 3;
  inline int mission_list_size() const;
  inline void clear_mission_list();
  static const int kMissionListFieldNumber = 3;
  inline const ::PB::DailyMission& mission_list(int index) const;
  inline ::PB::DailyMission* mutable_mission_list(int index);
  inline ::PB::DailyMission* add_mission_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::DailyMission >&
      mission_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::DailyMission >*
      mutable_mission_list();

  // @@protoc_insertion_point(class_scope:PB.RoleDailyMissionInfo)
 private:
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > point_reward_record_;
  ::google::protobuf::RepeatedPtrField< ::PB::DailyMission > mission_list_;
  ::google::protobuf::uint32 point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleDailyMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class SkillData : public ::google::protobuf::Message {
 public:
  SkillData();
  virtual ~SkillData();

  SkillData(const SkillData& from);

  inline SkillData& operator=(const SkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillData& default_instance();

  void Swap(SkillData* other);

  // implements Message ----------------------------------------------

  SkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillData& from);
  void MergeFrom(const SkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.SkillData)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static SkillData* default_instance_;
};
// -------------------------------------------------------------------

class RoleGuildSkillInfo : public ::google::protobuf::Message {
 public:
  RoleGuildSkillInfo();
  virtual ~RoleGuildSkillInfo();

  RoleGuildSkillInfo(const RoleGuildSkillInfo& from);

  inline RoleGuildSkillInfo& operator=(const RoleGuildSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleGuildSkillInfo& default_instance();

  void Swap(RoleGuildSkillInfo* other);

  // implements Message ----------------------------------------------

  RoleGuildSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleGuildSkillInfo& from);
  void MergeFrom(const RoleGuildSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.SkillData skill_list = 1;
  inline int skill_list_size() const;
  inline void clear_skill_list();
  static const int kSkillListFieldNumber = 1;
  inline const ::PB::SkillData& skill_list(int index) const;
  inline ::PB::SkillData* mutable_skill_list(int index);
  inline ::PB::SkillData* add_skill_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::SkillData >&
      skill_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::SkillData >*
      mutable_skill_list();

  // @@protoc_insertion_point(class_scope:PB.RoleGuildSkillInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::SkillData > skill_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleGuildSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleSignInData : public ::google::protobuf::Message {
 public:
  RoleSignInData();
  virtual ~RoleSignInData();

  RoleSignInData(const RoleSignInData& from);

  inline RoleSignInData& operator=(const RoleSignInData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleSignInData& default_instance();

  void Swap(RoleSignInData* other);

  // implements Message ----------------------------------------------

  RoleSignInData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleSignInData& from);
  void MergeFrom(const RoleSignInData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cur_sign_in_day = 1;
  inline bool has_cur_sign_in_day() const;
  inline void clear_cur_sign_in_day();
  static const int kCurSignInDayFieldNumber = 1;
  inline ::google::protobuf::uint32 cur_sign_in_day() const;
  inline void set_cur_sign_in_day(::google::protobuf::uint32 value);

  // required uint32 last_sign_in_time = 2;
  inline bool has_last_sign_in_time() const;
  inline void clear_last_sign_in_time();
  static const int kLastSignInTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 last_sign_in_time() const;
  inline void set_last_sign_in_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.RoleSignInData)
 private:
  inline void set_has_cur_sign_in_day();
  inline void clear_has_cur_sign_in_day();
  inline void set_has_last_sign_in_time();
  inline void clear_has_last_sign_in_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cur_sign_in_day_;
  ::google::protobuf::uint32 last_sign_in_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleSignInData* default_instance_;
};
// -------------------------------------------------------------------

class RewardData : public ::google::protobuf::Message {
 public:
  RewardData();
  virtual ~RewardData();

  RewardData(const RewardData& from);

  inline RewardData& operator=(const RewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardData& default_instance();

  void Swap(RewardData* other);

  // implements Message ----------------------------------------------

  RewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardData& from);
  void MergeFrom(const RewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reward_id = 1;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 reward_id() const;
  inline void set_reward_id(::google::protobuf::uint32 value);

  // optional uint32 reward_type = 2;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_type() const;
  inline void set_reward_type(::google::protobuf::uint32 value);

  // optional uint32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 value1 = 4;
  inline bool has_value1() const;
  inline void clear_value1();
  static const int kValue1FieldNumber = 4;
  inline ::google::protobuf::uint32 value1() const;
  inline void set_value1(::google::protobuf::uint32 value);

  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required string text = 6;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 6;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:PB.RewardData)
 private:
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_value1();
  inline void clear_has_value1();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reward_id_;
  ::google::protobuf::uint32 reward_type_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 value1_;
  ::std::string* text_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RewardData* default_instance_;
};
// -------------------------------------------------------------------

class RoleRewardData : public ::google::protobuf::Message {
 public:
  RoleRewardData();
  virtual ~RoleRewardData();

  RoleRewardData(const RoleRewardData& from);

  inline RoleRewardData& operator=(const RoleRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleRewardData& default_instance();

  void Swap(RoleRewardData* other);

  // implements Message ----------------------------------------------

  RoleRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleRewardData& from);
  void MergeFrom(const RoleRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PB.RewardData reward_list = 1;
  inline int reward_list_size() const;
  inline void clear_reward_list();
  static const int kRewardListFieldNumber = 1;
  inline const ::PB::RewardData& reward_list(int index) const;
  inline ::PB::RewardData* mutable_reward_list(int index);
  inline ::PB::RewardData* add_reward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::RewardData >&
      reward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::RewardData >*
      mutable_reward_list();

  // @@protoc_insertion_point(class_scope:PB.RoleRewardData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB::RewardData > reward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleRewardData* default_instance_;
};
// -------------------------------------------------------------------

class YCSData : public ::google::protobuf::Message {
 public:
  YCSData();
  virtual ~YCSData();

  YCSData(const YCSData& from);

  inline YCSData& operator=(const YCSData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YCSData& default_instance();

  void Swap(YCSData* other);

  // implements Message ----------------------------------------------

  YCSData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YCSData& from);
  void MergeFrom(const YCSData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 today_get_times = 1;
  inline bool has_today_get_times() const;
  inline void clear_today_get_times();
  static const int kTodayGetTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 today_get_times() const;
  inline void set_today_get_times(::google::protobuf::uint32 value);

  // optional uint32 total_get_times = 2;
  inline bool has_total_get_times() const;
  inline void clear_total_get_times();
  static const int kTotalGetTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 total_get_times() const;
  inline void set_total_get_times(::google::protobuf::uint32 value);

  // optional uint32 total_reward_value = 3;
  inline bool has_total_reward_value() const;
  inline void clear_total_reward_value();
  static const int kTotalRewardValueFieldNumber = 3;
  inline ::google::protobuf::uint32 total_reward_value() const;
  inline void set_total_reward_value(::google::protobuf::uint32 value);

  // optional uint32 last_get_time = 4;
  inline bool has_last_get_time() const;
  inline void clear_last_get_time();
  static const int kLastGetTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 last_get_time() const;
  inline void set_last_get_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.YCSData)
 private:
  inline void set_has_today_get_times();
  inline void clear_has_today_get_times();
  inline void set_has_total_get_times();
  inline void clear_has_total_get_times();
  inline void set_has_total_reward_value();
  inline void clear_has_total_reward_value();
  inline void set_has_last_get_time();
  inline void clear_has_last_get_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 today_get_times_;
  ::google::protobuf::uint32 total_get_times_;
  ::google::protobuf::uint32 total_reward_value_;
  ::google::protobuf::uint32 last_get_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static YCSData* default_instance_;
};
// -------------------------------------------------------------------

class TQTData : public ::google::protobuf::Message {
 public:
  TQTData();
  virtual ~TQTData();

  TQTData(const TQTData& from);

  inline TQTData& operator=(const TQTData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TQTData& default_instance();

  void Swap(TQTData* other);

  // implements Message ----------------------------------------------

  TQTData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TQTData& from);
  void MergeFrom(const TQTData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 last_get_time = 1;
  inline bool has_last_get_time() const;
  inline void clear_last_get_time();
  static const int kLastGetTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 last_get_time() const;
  inline void set_last_get_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.TQTData)
 private:
  inline void set_has_last_get_time();
  inline void clear_has_last_get_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 last_get_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static TQTData* default_instance_;
};
// -------------------------------------------------------------------

class SevenDayTargetData : public ::google::protobuf::Message {
 public:
  SevenDayTargetData();
  virtual ~SevenDayTargetData();

  SevenDayTargetData(const SevenDayTargetData& from);

  inline SevenDayTargetData& operator=(const SevenDayTargetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SevenDayTargetData& default_instance();

  void Swap(SevenDayTargetData* other);

  // implements Message ----------------------------------------------

  SevenDayTargetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SevenDayTargetData& from);
  void MergeFrom(const SevenDayTargetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_id = 1;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 is_get_reward = 3;
  inline bool has_is_get_reward() const;
  inline void clear_is_get_reward();
  static const int kIsGetRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 is_get_reward() const;
  inline void set_is_get_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB.SevenDayTargetData)
 private:
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_is_get_reward();
  inline void clear_has_is_get_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 target_id_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 is_get_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static SevenDayTargetData* default_instance_;
};
// -------------------------------------------------------------------

class RoleActivityData : public ::google::protobuf::Message {
 public:
  RoleActivityData();
  virtual ~RoleActivityData();

  RoleActivityData(const RoleActivityData& from);

  inline RoleActivityData& operator=(const RoleActivityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleActivityData& default_instance();

  void Swap(RoleActivityData* other);

  // implements Message ----------------------------------------------

  RoleActivityData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleActivityData& from);
  void MergeFrom(const RoleActivityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PB.TQTData tqt_data = 1;
  inline bool has_tqt_data() const;
  inline void clear_tqt_data();
  static const int kTqtDataFieldNumber = 1;
  inline const ::PB::TQTData& tqt_data() const;
  inline ::PB::TQTData* mutable_tqt_data();
  inline ::PB::TQTData* release_tqt_data();
  inline void set_allocated_tqt_data(::PB::TQTData* tqt_data);

  // optional .PB.YCSData ycs_data = 2;
  inline bool has_ycs_data() const;
  inline void clear_ycs_data();
  static const int kYcsDataFieldNumber = 2;
  inline const ::PB::YCSData& ycs_data() const;
  inline ::PB::YCSData* mutable_ycs_data();
  inline ::PB::YCSData* release_ycs_data();
  inline void set_allocated_ycs_data(::PB::YCSData* ycs_data);

  // repeated .PB.SevenDayTargetData seven_day_target_list = 3;
  inline int seven_day_target_list_size() const;
  inline void clear_seven_day_target_list();
  static const int kSevenDayTargetListFieldNumber = 3;
  inline const ::PB::SevenDayTargetData& seven_day_target_list(int index) const;
  inline ::PB::SevenDayTargetData* mutable_seven_day_target_list(int index);
  inline ::PB::SevenDayTargetData* add_seven_day_target_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB::SevenDayTargetData >&
      seven_day_target_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB::SevenDayTargetData >*
      mutable_seven_day_target_list();

  // repeated uint32 completion_reward_record_list = 4;
  inline int completion_reward_record_list_size() const;
  inline void clear_completion_reward_record_list();
  static const int kCompletionRewardRecordListFieldNumber = 4;
  inline ::google::protobuf::uint32 completion_reward_record_list(int index) const;
  inline void set_completion_reward_record_list(int index, ::google::protobuf::uint32 value);
  inline void add_completion_reward_record_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      completion_reward_record_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_completion_reward_record_list();

  // @@protoc_insertion_point(class_scope:PB.RoleActivityData)
 private:
  inline void set_has_tqt_data();
  inline void clear_has_tqt_data();
  inline void set_has_ycs_data();
  inline void clear_has_ycs_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PB::TQTData* tqt_data_;
  ::PB::YCSData* ycs_data_;
  ::google::protobuf::RepeatedPtrField< ::PB::SevenDayTargetData > seven_day_target_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > completion_reward_record_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fdefine_2eproto();
  friend void protobuf_AssignDesc_data_5fdefine_2eproto();
  friend void protobuf_ShutdownFile_data_5fdefine_2eproto();

  void InitAsDefaultInstance();
  static RoleActivityData* default_instance_;
};
// ===================================================================


// ===================================================================

// Item

// required uint32 item_id = 1;
inline bool Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 Item::item_id() const {
  return item_id_;
}
inline void Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 Item::item_num() const {
  return item_num_;
}
inline void Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// Equipment

// required uint32 uid = 1;
inline bool Equipment::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Equipment::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Equipment::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Equipment::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Equipment::uid() const {
  return uid_;
}
inline void Equipment::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 info_id = 2;
inline bool Equipment::has_info_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Equipment::set_has_info_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Equipment::clear_has_info_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Equipment::clear_info_id() {
  info_id_ = 0u;
  clear_has_info_id();
}
inline ::google::protobuf::uint32 Equipment::info_id() const {
  return info_id_;
}
inline void Equipment::set_info_id(::google::protobuf::uint32 value) {
  set_has_info_id();
  info_id_ = value;
}

// required uint32 enhance_level = 3;
inline bool Equipment::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Equipment::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Equipment::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Equipment::clear_enhance_level() {
  enhance_level_ = 0u;
  clear_has_enhance_level();
}
inline ::google::protobuf::uint32 Equipment::enhance_level() const {
  return enhance_level_;
}
inline void Equipment::set_enhance_level(::google::protobuf::uint32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
}

// required uint32 refine_level = 4;
inline bool Equipment::has_refine_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Equipment::set_has_refine_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Equipment::clear_has_refine_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Equipment::clear_refine_level() {
  refine_level_ = 0u;
  clear_has_refine_level();
}
inline ::google::protobuf::uint32 Equipment::refine_level() const {
  return refine_level_;
}
inline void Equipment::set_refine_level(::google::protobuf::uint32 value) {
  set_has_refine_level();
  refine_level_ = value;
}

// required uint32 refine_exp = 5;
inline bool Equipment::has_refine_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Equipment::set_has_refine_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Equipment::clear_has_refine_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Equipment::clear_refine_exp() {
  refine_exp_ = 0u;
  clear_has_refine_exp();
}
inline ::google::protobuf::uint32 Equipment::refine_exp() const {
  return refine_exp_;
}
inline void Equipment::set_refine_exp(::google::protobuf::uint32 value) {
  set_has_refine_exp();
  refine_exp_ = value;
}

// required uint32 enhance_cost_gold = 6;
inline bool Equipment::has_enhance_cost_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Equipment::set_has_enhance_cost_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Equipment::clear_has_enhance_cost_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Equipment::clear_enhance_cost_gold() {
  enhance_cost_gold_ = 0u;
  clear_has_enhance_cost_gold();
}
inline ::google::protobuf::uint32 Equipment::enhance_cost_gold() const {
  return enhance_cost_gold_;
}
inline void Equipment::set_enhance_cost_gold(::google::protobuf::uint32 value) {
  set_has_enhance_cost_gold();
  enhance_cost_gold_ = value;
}

// repeated .PB.Item refine_cost_item_list = 7;
inline int Equipment::refine_cost_item_list_size() const {
  return refine_cost_item_list_.size();
}
inline void Equipment::clear_refine_cost_item_list() {
  refine_cost_item_list_.Clear();
}
inline const ::PB::Item& Equipment::refine_cost_item_list(int index) const {
  return refine_cost_item_list_.Get(index);
}
inline ::PB::Item* Equipment::mutable_refine_cost_item_list(int index) {
  return refine_cost_item_list_.Mutable(index);
}
inline ::PB::Item* Equipment::add_refine_cost_item_list() {
  return refine_cost_item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Item >&
Equipment::refine_cost_item_list() const {
  return refine_cost_item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Item >*
Equipment::mutable_refine_cost_item_list() {
  return &refine_cost_item_list_;
}

// -------------------------------------------------------------------

// Treasure

// required uint32 uid = 1;
inline bool Treasure::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Treasure::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Treasure::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Treasure::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Treasure::uid() const {
  return uid_;
}
inline void Treasure::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 info_id = 2;
inline bool Treasure::has_info_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Treasure::set_has_info_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Treasure::clear_has_info_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Treasure::clear_info_id() {
  info_id_ = 0u;
  clear_has_info_id();
}
inline ::google::protobuf::uint32 Treasure::info_id() const {
  return info_id_;
}
inline void Treasure::set_info_id(::google::protobuf::uint32 value) {
  set_has_info_id();
  info_id_ = value;
}

// required uint32 enhance_level = 3;
inline bool Treasure::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Treasure::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Treasure::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Treasure::clear_enhance_level() {
  enhance_level_ = 0u;
  clear_has_enhance_level();
}
inline ::google::protobuf::uint32 Treasure::enhance_level() const {
  return enhance_level_;
}
inline void Treasure::set_enhance_level(::google::protobuf::uint32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
}

// required uint32 enhance_exp = 4;
inline bool Treasure::has_enhance_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Treasure::set_has_enhance_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Treasure::clear_has_enhance_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Treasure::clear_enhance_exp() {
  enhance_exp_ = 0u;
  clear_has_enhance_exp();
}
inline ::google::protobuf::uint32 Treasure::enhance_exp() const {
  return enhance_exp_;
}
inline void Treasure::set_enhance_exp(::google::protobuf::uint32 value) {
  set_has_enhance_exp();
  enhance_exp_ = value;
}

// required uint32 refine_level = 5;
inline bool Treasure::has_refine_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Treasure::set_has_refine_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Treasure::clear_has_refine_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Treasure::clear_refine_level() {
  refine_level_ = 0u;
  clear_has_refine_level();
}
inline ::google::protobuf::uint32 Treasure::refine_level() const {
  return refine_level_;
}
inline void Treasure::set_refine_level(::google::protobuf::uint32 value) {
  set_has_refine_level();
  refine_level_ = value;
}

// -------------------------------------------------------------------

// fairy

// required uint32 uid = 1;
inline bool fairy::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fairy::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fairy::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fairy::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 fairy::uid() const {
  return uid_;
}
inline void fairy::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 info_id = 2;
inline bool fairy::has_info_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fairy::set_has_info_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fairy::clear_has_info_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fairy::clear_info_id() {
  info_id_ = 0u;
  clear_has_info_id();
}
inline ::google::protobuf::uint32 fairy::info_id() const {
  return info_id_;
}
inline void fairy::set_info_id(::google::protobuf::uint32 value) {
  set_has_info_id();
  info_id_ = value;
}

// required uint32 level = 3;
inline bool fairy::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fairy::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void fairy::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void fairy::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 fairy::level() const {
  return level_;
}
inline void fairy::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 exp = 4;
inline bool fairy::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void fairy::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void fairy::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void fairy::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 fairy::exp() const {
  return exp_;
}
inline void fairy::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 break_level = 5;
inline bool fairy::has_break_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void fairy::set_has_break_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void fairy::clear_has_break_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void fairy::clear_break_level() {
  break_level_ = 0u;
  clear_has_break_level();
}
inline ::google::protobuf::uint32 fairy::break_level() const {
  return break_level_;
}
inline void fairy::set_break_level(::google::protobuf::uint32 value) {
  set_has_break_level();
  break_level_ = value;
}

// -------------------------------------------------------------------

// HeroTrainData

// required uint32 pro_type = 1;
inline bool HeroTrainData::has_pro_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroTrainData::set_has_pro_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroTrainData::clear_has_pro_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroTrainData::clear_pro_type() {
  pro_type_ = 0u;
  clear_has_pro_type();
}
inline ::google::protobuf::uint32 HeroTrainData::pro_type() const {
  return pro_type_;
}
inline void HeroTrainData::set_pro_type(::google::protobuf::uint32 value) {
  set_has_pro_type();
  pro_type_ = value;
}

// required uint32 pro_value = 2;
inline bool HeroTrainData::has_pro_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroTrainData::set_has_pro_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroTrainData::clear_has_pro_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroTrainData::clear_pro_value() {
  pro_value_ = 0u;
  clear_has_pro_value();
}
inline ::google::protobuf::uint32 HeroTrainData::pro_value() const {
  return pro_value_;
}
inline void HeroTrainData::set_pro_value(::google::protobuf::uint32 value) {
  set_has_pro_value();
  pro_value_ = value;
}

// required uint32 pro_level = 3;
inline bool HeroTrainData::has_pro_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroTrainData::set_has_pro_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroTrainData::clear_has_pro_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroTrainData::clear_pro_level() {
  pro_level_ = 0u;
  clear_has_pro_level();
}
inline ::google::protobuf::uint32 HeroTrainData::pro_level() const {
  return pro_level_;
}
inline void HeroTrainData::set_pro_level(::google::protobuf::uint32 value) {
  set_has_pro_level();
  pro_level_ = value;
}

// required uint32 tmp_pro_value = 4;
inline bool HeroTrainData::has_tmp_pro_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroTrainData::set_has_tmp_pro_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroTrainData::clear_has_tmp_pro_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroTrainData::clear_tmp_pro_value() {
  tmp_pro_value_ = 0u;
  clear_has_tmp_pro_value();
}
inline ::google::protobuf::uint32 HeroTrainData::tmp_pro_value() const {
  return tmp_pro_value_;
}
inline void HeroTrainData::set_tmp_pro_value(::google::protobuf::uint32 value) {
  set_has_tmp_pro_value();
  tmp_pro_value_ = value;
}

// required uint32 reward_flag = 5;
inline bool HeroTrainData::has_reward_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroTrainData::set_has_reward_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroTrainData::clear_has_reward_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroTrainData::clear_reward_flag() {
  reward_flag_ = 0u;
  clear_has_reward_flag();
}
inline ::google::protobuf::uint32 HeroTrainData::reward_flag() const {
  return reward_flag_;
}
inline void HeroTrainData::set_reward_flag(::google::protobuf::uint32 value) {
  set_has_reward_flag();
  reward_flag_ = value;
}

// -------------------------------------------------------------------

// Hero

// required uint32 uid = 1;
inline bool Hero::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hero::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hero::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hero::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 Hero::uid() const {
  return uid_;
}
inline void Hero::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 info_id = 2;
inline bool Hero::has_info_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Hero::set_has_info_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Hero::clear_has_info_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Hero::clear_info_id() {
  info_id_ = 0u;
  clear_has_info_id();
}
inline ::google::protobuf::uint32 Hero::info_id() const {
  return info_id_;
}
inline void Hero::set_info_id(::google::protobuf::uint32 value) {
  set_has_info_id();
  info_id_ = value;
}

// required uint32 level = 3;
inline bool Hero::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Hero::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Hero::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Hero::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Hero::level() const {
  return level_;
}
inline void Hero::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 exp = 4;
inline bool Hero::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Hero::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Hero::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Hero::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 Hero::exp() const {
  return exp_;
}
inline void Hero::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 quality = 5;
inline bool Hero::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Hero::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Hero::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Hero::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 Hero::quality() const {
  return quality_;
}
inline void Hero::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// required uint32 break_level = 6;
inline bool Hero::has_break_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Hero::set_has_break_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Hero::clear_has_break_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Hero::clear_break_level() {
  break_level_ = 0u;
  clear_has_break_level();
}
inline ::google::protobuf::uint32 Hero::break_level() const {
  return break_level_;
}
inline void Hero::set_break_level(::google::protobuf::uint32 value) {
  set_has_break_level();
  break_level_ = value;
}

// required uint32 destiny_level = 7;
inline bool Hero::has_destiny_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Hero::set_has_destiny_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Hero::clear_has_destiny_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Hero::clear_destiny_level() {
  destiny_level_ = 0u;
  clear_has_destiny_level();
}
inline ::google::protobuf::uint32 Hero::destiny_level() const {
  return destiny_level_;
}
inline void Hero::set_destiny_level(::google::protobuf::uint32 value) {
  set_has_destiny_level();
  destiny_level_ = value;
}

// required uint32 destiny_exp = 8;
inline bool Hero::has_destiny_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Hero::set_has_destiny_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Hero::clear_has_destiny_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Hero::clear_destiny_exp() {
  destiny_exp_ = 0u;
  clear_has_destiny_exp();
}
inline ::google::protobuf::uint32 Hero::destiny_exp() const {
  return destiny_exp_;
}
inline void Hero::set_destiny_exp(::google::protobuf::uint32 value) {
  set_has_destiny_exp();
  destiny_exp_ = value;
}

// required uint32 awaken_star = 9;
inline bool Hero::has_awaken_star() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Hero::set_has_awaken_star() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Hero::clear_has_awaken_star() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Hero::clear_awaken_star() {
  awaken_star_ = 0u;
  clear_has_awaken_star();
}
inline ::google::protobuf::uint32 Hero::awaken_star() const {
  return awaken_star_;
}
inline void Hero::set_awaken_star(::google::protobuf::uint32 value) {
  set_has_awaken_star();
  awaken_star_ = value;
}

// required uint32 awaken_level = 10;
inline bool Hero::has_awaken_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Hero::set_has_awaken_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Hero::clear_has_awaken_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Hero::clear_awaken_level() {
  awaken_level_ = 0u;
  clear_has_awaken_level();
}
inline ::google::protobuf::uint32 Hero::awaken_level() const {
  return awaken_level_;
}
inline void Hero::set_awaken_level(::google::protobuf::uint32 value) {
  set_has_awaken_level();
  awaken_level_ = value;
}

// repeated uint32 awaken_item_list = 11;
inline int Hero::awaken_item_list_size() const {
  return awaken_item_list_.size();
}
inline void Hero::clear_awaken_item_list() {
  awaken_item_list_.Clear();
}
inline ::google::protobuf::uint32 Hero::awaken_item_list(int index) const {
  return awaken_item_list_.Get(index);
}
inline void Hero::set_awaken_item_list(int index, ::google::protobuf::uint32 value) {
  awaken_item_list_.Set(index, value);
}
inline void Hero::add_awaken_item_list(::google::protobuf::uint32 value) {
  awaken_item_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Hero::awaken_item_list() const {
  return awaken_item_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Hero::mutable_awaken_item_list() {
  return &awaken_item_list_;
}

// repeated .PB.HeroTrainData train_data_list = 12;
inline int Hero::train_data_list_size() const {
  return train_data_list_.size();
}
inline void Hero::clear_train_data_list() {
  train_data_list_.Clear();
}
inline const ::PB::HeroTrainData& Hero::train_data_list(int index) const {
  return train_data_list_.Get(index);
}
inline ::PB::HeroTrainData* Hero::mutable_train_data_list(int index) {
  return train_data_list_.Mutable(index);
}
inline ::PB::HeroTrainData* Hero::add_train_data_list() {
  return train_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::HeroTrainData >&
Hero::train_data_list() const {
  return train_data_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::HeroTrainData >*
Hero::mutable_train_data_list() {
  return &train_data_list_;
}

// required uint32 train_cost_item_num = 13;
inline bool Hero::has_train_cost_item_num() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Hero::set_has_train_cost_item_num() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Hero::clear_has_train_cost_item_num() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Hero::clear_train_cost_item_num() {
  train_cost_item_num_ = 0u;
  clear_has_train_cost_item_num();
}
inline ::google::protobuf::uint32 Hero::train_cost_item_num() const {
  return train_cost_item_num_;
}
inline void Hero::set_train_cost_item_num(::google::protobuf::uint32 value) {
  set_has_train_cost_item_num();
  train_cost_item_num_ = value;
}

// required uint32 destiny_cost_item_num = 14;
inline bool Hero::has_destiny_cost_item_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Hero::set_has_destiny_cost_item_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Hero::clear_has_destiny_cost_item_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Hero::clear_destiny_cost_item_num() {
  destiny_cost_item_num_ = 0u;
  clear_has_destiny_cost_item_num();
}
inline ::google::protobuf::uint32 Hero::destiny_cost_item_num() const {
  return destiny_cost_item_num_;
}
inline void Hero::set_destiny_cost_item_num(::google::protobuf::uint32 value) {
  set_has_destiny_cost_item_num();
  destiny_cost_item_num_ = value;
}

// required uint32 train_cost_diamond = 15;
inline bool Hero::has_train_cost_diamond() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Hero::set_has_train_cost_diamond() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Hero::clear_has_train_cost_diamond() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Hero::clear_train_cost_diamond() {
  train_cost_diamond_ = 0u;
  clear_has_train_cost_diamond();
}
inline ::google::protobuf::uint32 Hero::train_cost_diamond() const {
  return train_cost_diamond_;
}
inline void Hero::set_train_cost_diamond(::google::protobuf::uint32 value) {
  set_has_train_cost_diamond();
  train_cost_diamond_ = value;
}

// required uint32 train_cost_gold = 16;
inline bool Hero::has_train_cost_gold() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Hero::set_has_train_cost_gold() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Hero::clear_has_train_cost_gold() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Hero::clear_train_cost_gold() {
  train_cost_gold_ = 0u;
  clear_has_train_cost_gold();
}
inline ::google::protobuf::uint32 Hero::train_cost_gold() const {
  return train_cost_gold_;
}
inline void Hero::set_train_cost_gold(::google::protobuf::uint32 value) {
  set_has_train_cost_gold();
  train_cost_gold_ = value;
}

// -------------------------------------------------------------------

// MonsterData

// required uint32 idx = 1;
inline bool MonsterData::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonsterData::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonsterData::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonsterData::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 MonsterData::idx() const {
  return idx_;
}
inline void MonsterData::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// required uint32 damage = 2;
inline bool MonsterData::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonsterData::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonsterData::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonsterData::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 MonsterData::damage() const {
  return damage_;
}
inline void MonsterData::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
}

// required uint32 total_hp = 3;
inline bool MonsterData::has_total_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonsterData::set_has_total_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonsterData::clear_has_total_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonsterData::clear_total_hp() {
  total_hp_ = 0u;
  clear_has_total_hp();
}
inline ::google::protobuf::uint32 MonsterData::total_hp() const {
  return total_hp_;
}
inline void MonsterData::set_total_hp(::google::protobuf::uint32 value) {
  set_has_total_hp();
  total_hp_ = value;
}

// -------------------------------------------------------------------

// ArenaRankData

// required uint32 role_id = 1;
inline bool ArenaRankData::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaRankData::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaRankData::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaRankData::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 ArenaRankData::role_id() const {
  return role_id_;
}
inline void ArenaRankData::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 cur_rank = 2;
inline bool ArenaRankData::has_cur_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaRankData::set_has_cur_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaRankData::clear_has_cur_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaRankData::clear_cur_rank() {
  cur_rank_ = 0u;
  clear_has_cur_rank();
}
inline ::google::protobuf::uint32 ArenaRankData::cur_rank() const {
  return cur_rank_;
}
inline void ArenaRankData::set_cur_rank(::google::protobuf::uint32 value) {
  set_has_cur_rank();
  cur_rank_ = value;
}

// required uint32 history_rank = 3;
inline bool ArenaRankData::has_history_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaRankData::set_has_history_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaRankData::clear_has_history_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaRankData::clear_history_rank() {
  history_rank_ = 0u;
  clear_has_history_rank();
}
inline ::google::protobuf::uint32 ArenaRankData::history_rank() const {
  return history_rank_;
}
inline void ArenaRankData::set_history_rank(::google::protobuf::uint32 value) {
  set_has_history_rank();
  history_rank_ = value;
}

// -------------------------------------------------------------------

// ArenaRankDataList

// repeated .PB.ArenaRankData rank_list = 1;
inline int ArenaRankDataList::rank_list_size() const {
  return rank_list_.size();
}
inline void ArenaRankDataList::clear_rank_list() {
  rank_list_.Clear();
}
inline const ::PB::ArenaRankData& ArenaRankDataList::rank_list(int index) const {
  return rank_list_.Get(index);
}
inline ::PB::ArenaRankData* ArenaRankDataList::mutable_rank_list(int index) {
  return rank_list_.Mutable(index);
}
inline ::PB::ArenaRankData* ArenaRankDataList::add_rank_list() {
  return rank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ArenaRankData >&
ArenaRankDataList::rank_list() const {
  return rank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ArenaRankData >*
ArenaRankDataList::mutable_rank_list() {
  return &rank_list_;
}

// -------------------------------------------------------------------

// role_rank_data

// required uint32 role_id = 1;
inline bool role_rank_data::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void role_rank_data::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void role_rank_data::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void role_rank_data::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 role_rank_data::role_id() const {
  return role_id_;
}
inline void role_rank_data::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 level = 2;
inline bool role_rank_data::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void role_rank_data::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void role_rank_data::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void role_rank_data::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 role_rank_data::level() const {
  return level_;
}
inline void role_rank_data::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 rank = 3;
inline bool role_rank_data::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void role_rank_data::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void role_rank_data::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void role_rank_data::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 role_rank_data::rank() const {
  return rank_;
}
inline void role_rank_data::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 value = 4;
inline bool role_rank_data::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void role_rank_data::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void role_rank_data::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void role_rank_data::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 role_rank_data::value() const {
  return value_;
}
inline void role_rank_data::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// required uint32 value_ex = 5;
inline bool role_rank_data::has_value_ex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void role_rank_data::set_has_value_ex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void role_rank_data::clear_has_value_ex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void role_rank_data::clear_value_ex() {
  value_ex_ = 0u;
  clear_has_value_ex();
}
inline ::google::protobuf::uint32 role_rank_data::value_ex() const {
  return value_ex_;
}
inline void role_rank_data::set_value_ex(::google::protobuf::uint32 value) {
  set_has_value_ex();
  value_ex_ = value;
}

// required uint32 update_time = 6;
inline bool role_rank_data::has_update_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void role_rank_data::set_has_update_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void role_rank_data::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void role_rank_data::clear_update_time() {
  update_time_ = 0u;
  clear_has_update_time();
}
inline ::google::protobuf::uint32 role_rank_data::update_time() const {
  return update_time_;
}
inline void role_rank_data::set_update_time(::google::protobuf::uint32 value) {
  set_has_update_time();
  update_time_ = value;
}

// -------------------------------------------------------------------

// role_rank_list

// required uint32 server_id = 1;
inline bool role_rank_list::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void role_rank_list::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void role_rank_list::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void role_rank_list::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 role_rank_list::server_id() const {
  return server_id_;
}
inline void role_rank_list::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
}

// repeated .PB.role_rank_data rank_list = 2;
inline int role_rank_list::rank_list_size() const {
  return rank_list_.size();
}
inline void role_rank_list::clear_rank_list() {
  rank_list_.Clear();
}
inline const ::PB::role_rank_data& role_rank_list::rank_list(int index) const {
  return rank_list_.Get(index);
}
inline ::PB::role_rank_data* role_rank_list::mutable_rank_list(int index) {
  return rank_list_.Mutable(index);
}
inline ::PB::role_rank_data* role_rank_list::add_rank_list() {
  return rank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::role_rank_data >&
role_rank_list::rank_list() const {
  return rank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::role_rank_data >*
role_rank_list::mutable_rank_list() {
  return &rank_list_;
}

// -------------------------------------------------------------------

// all_server_role_rank_list

// required uint32 rank_type = 1;
inline bool all_server_role_rank_list::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void all_server_role_rank_list::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void all_server_role_rank_list::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void all_server_role_rank_list::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 all_server_role_rank_list::rank_type() const {
  return rank_type_;
}
inline void all_server_role_rank_list::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// repeated .PB.role_rank_list all_rank_list = 2;
inline int all_server_role_rank_list::all_rank_list_size() const {
  return all_rank_list_.size();
}
inline void all_server_role_rank_list::clear_all_rank_list() {
  all_rank_list_.Clear();
}
inline const ::PB::role_rank_list& all_server_role_rank_list::all_rank_list(int index) const {
  return all_rank_list_.Get(index);
}
inline ::PB::role_rank_list* all_server_role_rank_list::mutable_all_rank_list(int index) {
  return all_rank_list_.Mutable(index);
}
inline ::PB::role_rank_list* all_server_role_rank_list::add_all_rank_list() {
  return all_rank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::role_rank_list >&
all_server_role_rank_list::all_rank_list() const {
  return all_rank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::role_rank_list >*
all_server_role_rank_list::mutable_all_rank_list() {
  return &all_rank_list_;
}

// -------------------------------------------------------------------

// GuildRankData

// required uint32 guild_id = 1;
inline bool GuildRankData::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRankData::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRankData::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRankData::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 GuildRankData::guild_id() const {
  return guild_id_;
}
inline void GuildRankData::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// required uint32 rank = 2;
inline bool GuildRankData::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRankData::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRankData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRankData::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 GuildRankData::rank() const {
  return rank_;
}
inline void GuildRankData::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 value = 3;
inline bool GuildRankData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildRankData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildRankData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildRankData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 GuildRankData::value() const {
  return value_;
}
inline void GuildRankData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// required uint32 update_time = 4;
inline bool GuildRankData::has_update_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildRankData::set_has_update_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildRankData::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildRankData::clear_update_time() {
  update_time_ = 0u;
  clear_has_update_time();
}
inline ::google::protobuf::uint32 GuildRankData::update_time() const {
  return update_time_;
}
inline void GuildRankData::set_update_time(::google::protobuf::uint32 value) {
  set_has_update_time();
  update_time_ = value;
}

// -------------------------------------------------------------------

// Property

// required uint32 type = 1;
inline bool Property::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Property::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Property::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Property::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Property::type() const {
  return type_;
}
inline void Property::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 value = 2;
inline bool Property::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Property::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Property::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Property::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 Property::value() const {
  return value_;
}
inline void Property::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// FormationProperty

// required uint32 slot = 1;
inline bool FormationProperty::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FormationProperty::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FormationProperty::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FormationProperty::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 FormationProperty::slot() const {
  return slot_;
}
inline void FormationProperty::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
}

// repeated .PB.Property pro_list = 2;
inline int FormationProperty::pro_list_size() const {
  return pro_list_.size();
}
inline void FormationProperty::clear_pro_list() {
  pro_list_.Clear();
}
inline const ::PB::Property& FormationProperty::pro_list(int index) const {
  return pro_list_.Get(index);
}
inline ::PB::Property* FormationProperty::mutable_pro_list(int index) {
  return pro_list_.Mutable(index);
}
inline ::PB::Property* FormationProperty::add_pro_list() {
  return pro_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Property >&
FormationProperty::pro_list() const {
  return pro_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Property >*
FormationProperty::mutable_pro_list() {
  return &pro_list_;
}

// -------------------------------------------------------------------

// GuideData

// optional uint32 key = 1;
inline bool GuideData::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideData::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideData::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideData::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 GuideData::key() const {
  return key_;
}
inline void GuideData::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional uint32 value = 2;
inline bool GuideData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 GuideData::value() const {
  return value_;
}
inline void GuideData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// RoleBaseInfo

// optional uint32 role_id = 1;
inline bool RoleBaseInfo::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleBaseInfo::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleBaseInfo::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleBaseInfo::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 RoleBaseInfo::role_id() const {
  return role_id_;
}
inline void RoleBaseInfo::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required string role_name = 2;
inline bool RoleBaseInfo::has_role_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleBaseInfo::set_has_role_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleBaseInfo::clear_has_role_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleBaseInfo::clear_role_name() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    role_name_->clear();
  }
  clear_has_role_name();
}
inline const ::std::string& RoleBaseInfo::role_name() const {
  return *role_name_;
}
inline void RoleBaseInfo::set_role_name(const ::std::string& value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void RoleBaseInfo::set_role_name(const char* value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void RoleBaseInfo::set_role_name(const char* value, size_t size) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleBaseInfo::mutable_role_name() {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}
inline ::std::string* RoleBaseInfo::release_role_name() {
  clear_has_role_name();
  if (role_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = role_name_;
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleBaseInfo::set_allocated_role_name(::std::string* role_name) {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (role_name) {
    set_has_role_name();
    role_name_ = role_name;
  } else {
    clear_has_role_name();
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string account = 3;
inline bool RoleBaseInfo::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleBaseInfo::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleBaseInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleBaseInfo::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& RoleBaseInfo::account() const {
  return *account_;
}
inline void RoleBaseInfo::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void RoleBaseInfo::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void RoleBaseInfo::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleBaseInfo::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* RoleBaseInfo::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleBaseInfo::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 stamina = 4;
inline bool RoleBaseInfo::has_stamina() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleBaseInfo::set_has_stamina() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleBaseInfo::clear_has_stamina() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleBaseInfo::clear_stamina() {
  stamina_ = 0u;
  clear_has_stamina();
}
inline ::google::protobuf::uint32 RoleBaseInfo::stamina() const {
  return stamina_;
}
inline void RoleBaseInfo::set_stamina(::google::protobuf::uint32 value) {
  set_has_stamina();
  stamina_ = value;
}

// optional uint32 energy = 5;
inline bool RoleBaseInfo::has_energy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleBaseInfo::set_has_energy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleBaseInfo::clear_has_energy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleBaseInfo::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 RoleBaseInfo::energy() const {
  return energy_;
}
inline void RoleBaseInfo::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
}

// optional uint32 sex = 6;
inline bool RoleBaseInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleBaseInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleBaseInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleBaseInfo::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 RoleBaseInfo::sex() const {
  return sex_;
}
inline void RoleBaseInfo::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
}

// optional uint32 level = 7;
inline bool RoleBaseInfo::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleBaseInfo::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleBaseInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleBaseInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleBaseInfo::level() const {
  return level_;
}
inline void RoleBaseInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 daily_init_level = 8;
inline bool RoleBaseInfo::has_daily_init_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleBaseInfo::set_has_daily_init_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleBaseInfo::clear_has_daily_init_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleBaseInfo::clear_daily_init_level() {
  daily_init_level_ = 0u;
  clear_has_daily_init_level();
}
inline ::google::protobuf::uint32 RoleBaseInfo::daily_init_level() const {
  return daily_init_level_;
}
inline void RoleBaseInfo::set_daily_init_level(::google::protobuf::uint32 value) {
  set_has_daily_init_level();
  daily_init_level_ = value;
}

// optional uint32 exp = 9;
inline bool RoleBaseInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleBaseInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleBaseInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleBaseInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 RoleBaseInfo::exp() const {
  return exp_;
}
inline void RoleBaseInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 gold = 10;
inline bool RoleBaseInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleBaseInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleBaseInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleBaseInfo::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 RoleBaseInfo::gold() const {
  return gold_;
}
inline void RoleBaseInfo::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 diamond = 11;
inline bool RoleBaseInfo::has_diamond() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleBaseInfo::set_has_diamond() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleBaseInfo::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleBaseInfo::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 RoleBaseInfo::diamond() const {
  return diamond_;
}
inline void RoleBaseInfo::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint32 head_image_id = 12;
inline bool RoleBaseInfo::has_head_image_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleBaseInfo::set_has_head_image_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleBaseInfo::clear_has_head_image_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleBaseInfo::clear_head_image_id() {
  head_image_id_ = 0u;
  clear_has_head_image_id();
}
inline ::google::protobuf::uint32 RoleBaseInfo::head_image_id() const {
  return head_image_id_;
}
inline void RoleBaseInfo::set_head_image_id(::google::protobuf::uint32 value) {
  set_has_head_image_id();
  head_image_id_ = value;
}

// optional uint32 vip_level = 13;
inline bool RoleBaseInfo::has_vip_level() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleBaseInfo::set_has_vip_level() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleBaseInfo::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleBaseInfo::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 RoleBaseInfo::vip_level() const {
  return vip_level_;
}
inline void RoleBaseInfo::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint32 vip_exp = 14;
inline bool RoleBaseInfo::has_vip_exp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleBaseInfo::set_has_vip_exp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleBaseInfo::clear_has_vip_exp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleBaseInfo::clear_vip_exp() {
  vip_exp_ = 0u;
  clear_has_vip_exp();
}
inline ::google::protobuf::uint32 RoleBaseInfo::vip_exp() const {
  return vip_exp_;
}
inline void RoleBaseInfo::set_vip_exp(::google::protobuf::uint32 value) {
  set_has_vip_exp();
  vip_exp_ = value;
}

// optional uint32 riot_suppress_times = 15;
inline bool RoleBaseInfo::has_riot_suppress_times() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RoleBaseInfo::set_has_riot_suppress_times() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RoleBaseInfo::clear_has_riot_suppress_times() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RoleBaseInfo::clear_riot_suppress_times() {
  riot_suppress_times_ = 0u;
  clear_has_riot_suppress_times();
}
inline ::google::protobuf::uint32 RoleBaseInfo::riot_suppress_times() const {
  return riot_suppress_times_;
}
inline void RoleBaseInfo::set_riot_suppress_times(::google::protobuf::uint32 value) {
  set_has_riot_suppress_times();
  riot_suppress_times_ = value;
}

// optional uint32 hero_soul = 16;
inline bool RoleBaseInfo::has_hero_soul() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RoleBaseInfo::set_has_hero_soul() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RoleBaseInfo::clear_has_hero_soul() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RoleBaseInfo::clear_hero_soul() {
  hero_soul_ = 0u;
  clear_has_hero_soul();
}
inline ::google::protobuf::uint32 RoleBaseInfo::hero_soul() const {
  return hero_soul_;
}
inline void RoleBaseInfo::set_hero_soul(::google::protobuf::uint32 value) {
  set_has_hero_soul();
  hero_soul_ = value;
}

// optional uint32 god_soul = 17;
inline bool RoleBaseInfo::has_god_soul() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleBaseInfo::set_has_god_soul() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleBaseInfo::clear_has_god_soul() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleBaseInfo::clear_god_soul() {
  god_soul_ = 0u;
  clear_has_god_soul();
}
inline ::google::protobuf::uint32 RoleBaseInfo::god_soul() const {
  return god_soul_;
}
inline void RoleBaseInfo::set_god_soul(::google::protobuf::uint32 value) {
  set_has_god_soul();
  god_soul_ = value;
}

// optional uint32 fairy_soul = 18;
inline bool RoleBaseInfo::has_fairy_soul() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RoleBaseInfo::set_has_fairy_soul() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RoleBaseInfo::clear_has_fairy_soul() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RoleBaseInfo::clear_fairy_soul() {
  fairy_soul_ = 0u;
  clear_has_fairy_soul();
}
inline ::google::protobuf::uint32 RoleBaseInfo::fairy_soul() const {
  return fairy_soul_;
}
inline void RoleBaseInfo::set_fairy_soul(::google::protobuf::uint32 value) {
  set_has_fairy_soul();
  fairy_soul_ = value;
}

// optional uint32 arena_prestige = 19;
inline bool RoleBaseInfo::has_arena_prestige() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RoleBaseInfo::set_has_arena_prestige() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RoleBaseInfo::clear_has_arena_prestige() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RoleBaseInfo::clear_arena_prestige() {
  arena_prestige_ = 0u;
  clear_has_arena_prestige();
}
inline ::google::protobuf::uint32 RoleBaseInfo::arena_prestige() const {
  return arena_prestige_;
}
inline void RoleBaseInfo::set_arena_prestige(::google::protobuf::uint32 value) {
  set_has_arena_prestige();
  arena_prestige_ = value;
}

// optional uint32 tower_prestige = 20;
inline bool RoleBaseInfo::has_tower_prestige() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RoleBaseInfo::set_has_tower_prestige() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RoleBaseInfo::clear_has_tower_prestige() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RoleBaseInfo::clear_tower_prestige() {
  tower_prestige_ = 0u;
  clear_has_tower_prestige();
}
inline ::google::protobuf::uint32 RoleBaseInfo::tower_prestige() const {
  return tower_prestige_;
}
inline void RoleBaseInfo::set_tower_prestige(::google::protobuf::uint32 value) {
  set_has_tower_prestige();
  tower_prestige_ = value;
}

// optional uint32 fighting_power = 21;
inline bool RoleBaseInfo::has_fighting_power() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void RoleBaseInfo::set_has_fighting_power() {
  _has_bits_[0] |= 0x00100000u;
}
inline void RoleBaseInfo::clear_has_fighting_power() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void RoleBaseInfo::clear_fighting_power() {
  fighting_power_ = 0u;
  clear_has_fighting_power();
}
inline ::google::protobuf::uint32 RoleBaseInfo::fighting_power() const {
  return fighting_power_;
}
inline void RoleBaseInfo::set_fighting_power(::google::protobuf::uint32 value) {
  set_has_fighting_power();
  fighting_power_ = value;
}

// optional uint32 wanted = 22;
inline bool RoleBaseInfo::has_wanted() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void RoleBaseInfo::set_has_wanted() {
  _has_bits_[0] |= 0x00200000u;
}
inline void RoleBaseInfo::clear_has_wanted() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void RoleBaseInfo::clear_wanted() {
  wanted_ = 0u;
  clear_has_wanted();
}
inline ::google::protobuf::uint32 RoleBaseInfo::wanted() const {
  return wanted_;
}
inline void RoleBaseInfo::set_wanted(::google::protobuf::uint32 value) {
  set_has_wanted();
  wanted_ = value;
}

// optional uint32 rebel_value = 23;
inline bool RoleBaseInfo::has_rebel_value() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void RoleBaseInfo::set_has_rebel_value() {
  _has_bits_[0] |= 0x00400000u;
}
inline void RoleBaseInfo::clear_has_rebel_value() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void RoleBaseInfo::clear_rebel_value() {
  rebel_value_ = 0u;
  clear_has_rebel_value();
}
inline ::google::protobuf::uint32 RoleBaseInfo::rebel_value() const {
  return rebel_value_;
}
inline void RoleBaseInfo::set_rebel_value(::google::protobuf::uint32 value) {
  set_has_rebel_value();
  rebel_value_ = value;
}

// optional uint32 honor = 24;
inline bool RoleBaseInfo::has_honor() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void RoleBaseInfo::set_has_honor() {
  _has_bits_[0] |= 0x00800000u;
}
inline void RoleBaseInfo::clear_has_honor() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void RoleBaseInfo::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 RoleBaseInfo::honor() const {
  return honor_;
}
inline void RoleBaseInfo::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
}

// optional uint32 cur_contribution = 25;
inline bool RoleBaseInfo::has_cur_contribution() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void RoleBaseInfo::set_has_cur_contribution() {
  _has_bits_[0] |= 0x01000000u;
}
inline void RoleBaseInfo::clear_has_cur_contribution() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void RoleBaseInfo::clear_cur_contribution() {
  cur_contribution_ = 0u;
  clear_has_cur_contribution();
}
inline ::google::protobuf::uint32 RoleBaseInfo::cur_contribution() const {
  return cur_contribution_;
}
inline void RoleBaseInfo::set_cur_contribution(::google::protobuf::uint32 value) {
  set_has_cur_contribution();
  cur_contribution_ = value;
}

// optional uint32 world_boss_battle_times = 26;
inline bool RoleBaseInfo::has_world_boss_battle_times() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void RoleBaseInfo::set_has_world_boss_battle_times() {
  _has_bits_[0] |= 0x02000000u;
}
inline void RoleBaseInfo::clear_has_world_boss_battle_times() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void RoleBaseInfo::clear_world_boss_battle_times() {
  world_boss_battle_times_ = 0u;
  clear_has_world_boss_battle_times();
}
inline ::google::protobuf::uint32 RoleBaseInfo::world_boss_battle_times() const {
  return world_boss_battle_times_;
}
inline void RoleBaseInfo::set_world_boss_battle_times(::google::protobuf::uint32 value) {
  set_has_world_boss_battle_times();
  world_boss_battle_times_ = value;
}

// optional uint32 guild_fb_reward_chapter = 27;
inline bool RoleBaseInfo::has_guild_fb_reward_chapter() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void RoleBaseInfo::set_has_guild_fb_reward_chapter() {
  _has_bits_[0] |= 0x04000000u;
}
inline void RoleBaseInfo::clear_has_guild_fb_reward_chapter() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void RoleBaseInfo::clear_guild_fb_reward_chapter() {
  guild_fb_reward_chapter_ = 0u;
  clear_has_guild_fb_reward_chapter();
}
inline ::google::protobuf::uint32 RoleBaseInfo::guild_fb_reward_chapter() const {
  return guild_fb_reward_chapter_;
}
inline void RoleBaseInfo::set_guild_fb_reward_chapter(::google::protobuf::uint32 value) {
  set_has_guild_fb_reward_chapter();
  guild_fb_reward_chapter_ = value;
}

// optional string last_login_time = 28;
inline bool RoleBaseInfo::has_last_login_time() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void RoleBaseInfo::set_has_last_login_time() {
  _has_bits_[0] |= 0x08000000u;
}
inline void RoleBaseInfo::clear_has_last_login_time() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void RoleBaseInfo::clear_last_login_time() {
  if (last_login_time_ != &::google::protobuf::internal::kEmptyString) {
    last_login_time_->clear();
  }
  clear_has_last_login_time();
}
inline const ::std::string& RoleBaseInfo::last_login_time() const {
  return *last_login_time_;
}
inline void RoleBaseInfo::set_last_login_time(const ::std::string& value) {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::kEmptyString) {
    last_login_time_ = new ::std::string;
  }
  last_login_time_->assign(value);
}
inline void RoleBaseInfo::set_last_login_time(const char* value) {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::kEmptyString) {
    last_login_time_ = new ::std::string;
  }
  last_login_time_->assign(value);
}
inline void RoleBaseInfo::set_last_login_time(const char* value, size_t size) {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::kEmptyString) {
    last_login_time_ = new ::std::string;
  }
  last_login_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleBaseInfo::mutable_last_login_time() {
  set_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::kEmptyString) {
    last_login_time_ = new ::std::string;
  }
  return last_login_time_;
}
inline ::std::string* RoleBaseInfo::release_last_login_time() {
  clear_has_last_login_time();
  if (last_login_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = last_login_time_;
    last_login_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleBaseInfo::set_allocated_last_login_time(::std::string* last_login_time) {
  if (last_login_time_ != &::google::protobuf::internal::kEmptyString) {
    delete last_login_time_;
  }
  if (last_login_time) {
    set_has_last_login_time();
    last_login_time_ = last_login_time;
  } else {
    clear_has_last_login_time();
    last_login_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string last_logout_time = 29;
inline bool RoleBaseInfo::has_last_logout_time() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void RoleBaseInfo::set_has_last_logout_time() {
  _has_bits_[0] |= 0x10000000u;
}
inline void RoleBaseInfo::clear_has_last_logout_time() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void RoleBaseInfo::clear_last_logout_time() {
  if (last_logout_time_ != &::google::protobuf::internal::kEmptyString) {
    last_logout_time_->clear();
  }
  clear_has_last_logout_time();
}
inline const ::std::string& RoleBaseInfo::last_logout_time() const {
  return *last_logout_time_;
}
inline void RoleBaseInfo::set_last_logout_time(const ::std::string& value) {
  set_has_last_logout_time();
  if (last_logout_time_ == &::google::protobuf::internal::kEmptyString) {
    last_logout_time_ = new ::std::string;
  }
  last_logout_time_->assign(value);
}
inline void RoleBaseInfo::set_last_logout_time(const char* value) {
  set_has_last_logout_time();
  if (last_logout_time_ == &::google::protobuf::internal::kEmptyString) {
    last_logout_time_ = new ::std::string;
  }
  last_logout_time_->assign(value);
}
inline void RoleBaseInfo::set_last_logout_time(const char* value, size_t size) {
  set_has_last_logout_time();
  if (last_logout_time_ == &::google::protobuf::internal::kEmptyString) {
    last_logout_time_ = new ::std::string;
  }
  last_logout_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleBaseInfo::mutable_last_logout_time() {
  set_has_last_logout_time();
  if (last_logout_time_ == &::google::protobuf::internal::kEmptyString) {
    last_logout_time_ = new ::std::string;
  }
  return last_logout_time_;
}
inline ::std::string* RoleBaseInfo::release_last_logout_time() {
  clear_has_last_logout_time();
  if (last_logout_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = last_logout_time_;
    last_logout_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleBaseInfo::set_allocated_last_logout_time(::std::string* last_logout_time) {
  if (last_logout_time_ != &::google::protobuf::internal::kEmptyString) {
    delete last_logout_time_;
  }
  if (last_logout_time) {
    set_has_last_logout_time();
    last_logout_time_ = last_logout_time;
  } else {
    clear_has_last_logout_time();
    last_logout_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 total_online_time = 30;
inline bool RoleBaseInfo::has_total_online_time() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void RoleBaseInfo::set_has_total_online_time() {
  _has_bits_[0] |= 0x20000000u;
}
inline void RoleBaseInfo::clear_has_total_online_time() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void RoleBaseInfo::clear_total_online_time() {
  total_online_time_ = 0u;
  clear_has_total_online_time();
}
inline ::google::protobuf::uint32 RoleBaseInfo::total_online_time() const {
  return total_online_time_;
}
inline void RoleBaseInfo::set_total_online_time(::google::protobuf::uint32 value) {
  set_has_total_online_time();
  total_online_time_ = value;
}

// optional uint32 login_times = 31;
inline bool RoleBaseInfo::has_login_times() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void RoleBaseInfo::set_has_login_times() {
  _has_bits_[0] |= 0x40000000u;
}
inline void RoleBaseInfo::clear_has_login_times() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void RoleBaseInfo::clear_login_times() {
  login_times_ = 0u;
  clear_has_login_times();
}
inline ::google::protobuf::uint32 RoleBaseInfo::login_times() const {
  return login_times_;
}
inline void RoleBaseInfo::set_login_times(::google::protobuf::uint32 value) {
  set_has_login_times();
  login_times_ = value;
}

// optional uint32 last_stamina_recover_time = 32;
inline bool RoleBaseInfo::has_last_stamina_recover_time() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void RoleBaseInfo::set_has_last_stamina_recover_time() {
  _has_bits_[0] |= 0x80000000u;
}
inline void RoleBaseInfo::clear_has_last_stamina_recover_time() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void RoleBaseInfo::clear_last_stamina_recover_time() {
  last_stamina_recover_time_ = 0u;
  clear_has_last_stamina_recover_time();
}
inline ::google::protobuf::uint32 RoleBaseInfo::last_stamina_recover_time() const {
  return last_stamina_recover_time_;
}
inline void RoleBaseInfo::set_last_stamina_recover_time(::google::protobuf::uint32 value) {
  set_has_last_stamina_recover_time();
  last_stamina_recover_time_ = value;
}

// optional uint32 last_energy_recover_time = 33;
inline bool RoleBaseInfo::has_last_energy_recover_time() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void RoleBaseInfo::set_has_last_energy_recover_time() {
  _has_bits_[1] |= 0x00000001u;
}
inline void RoleBaseInfo::clear_has_last_energy_recover_time() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void RoleBaseInfo::clear_last_energy_recover_time() {
  last_energy_recover_time_ = 0u;
  clear_has_last_energy_recover_time();
}
inline ::google::protobuf::uint32 RoleBaseInfo::last_energy_recover_time() const {
  return last_energy_recover_time_;
}
inline void RoleBaseInfo::set_last_energy_recover_time(::google::protobuf::uint32 value) {
  set_has_last_energy_recover_time();
  last_energy_recover_time_ = value;
}

// optional uint32 last_wanted_recover_time = 34;
inline bool RoleBaseInfo::has_last_wanted_recover_time() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void RoleBaseInfo::set_has_last_wanted_recover_time() {
  _has_bits_[1] |= 0x00000002u;
}
inline void RoleBaseInfo::clear_has_last_wanted_recover_time() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void RoleBaseInfo::clear_last_wanted_recover_time() {
  last_wanted_recover_time_ = 0u;
  clear_has_last_wanted_recover_time();
}
inline ::google::protobuf::uint32 RoleBaseInfo::last_wanted_recover_time() const {
  return last_wanted_recover_time_;
}
inline void RoleBaseInfo::set_last_wanted_recover_time(::google::protobuf::uint32 value) {
  set_has_last_wanted_recover_time();
  last_wanted_recover_time_ = value;
}

// repeated .PB.FormationProperty formation_pro_list = 35;
inline int RoleBaseInfo::formation_pro_list_size() const {
  return formation_pro_list_.size();
}
inline void RoleBaseInfo::clear_formation_pro_list() {
  formation_pro_list_.Clear();
}
inline const ::PB::FormationProperty& RoleBaseInfo::formation_pro_list(int index) const {
  return formation_pro_list_.Get(index);
}
inline ::PB::FormationProperty* RoleBaseInfo::mutable_formation_pro_list(int index) {
  return formation_pro_list_.Mutable(index);
}
inline ::PB::FormationProperty* RoleBaseInfo::add_formation_pro_list() {
  return formation_pro_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::FormationProperty >&
RoleBaseInfo::formation_pro_list() const {
  return formation_pro_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::FormationProperty >*
RoleBaseInfo::mutable_formation_pro_list() {
  return &formation_pro_list_;
}

// optional uint32 once_flag_list = 36;
inline bool RoleBaseInfo::has_once_flag_list() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void RoleBaseInfo::set_has_once_flag_list() {
  _has_bits_[1] |= 0x00000008u;
}
inline void RoleBaseInfo::clear_has_once_flag_list() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void RoleBaseInfo::clear_once_flag_list() {
  once_flag_list_ = 0u;
  clear_has_once_flag_list();
}
inline ::google::protobuf::uint32 RoleBaseInfo::once_flag_list() const {
  return once_flag_list_;
}
inline void RoleBaseInfo::set_once_flag_list(::google::protobuf::uint32 value) {
  set_has_once_flag_list();
  once_flag_list_ = value;
}

// optional uint32 guide_x = 37;
inline bool RoleBaseInfo::has_guide_x() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void RoleBaseInfo::set_has_guide_x() {
  _has_bits_[1] |= 0x00000010u;
}
inline void RoleBaseInfo::clear_has_guide_x() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void RoleBaseInfo::clear_guide_x() {
  guide_x_ = 0u;
  clear_has_guide_x();
}
inline ::google::protobuf::uint32 RoleBaseInfo::guide_x() const {
  return guide_x_;
}
inline void RoleBaseInfo::set_guide_x(::google::protobuf::uint32 value) {
  set_has_guide_x();
  guide_x_ = value;
}

// optional uint32 guide_y = 38;
inline bool RoleBaseInfo::has_guide_y() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void RoleBaseInfo::set_has_guide_y() {
  _has_bits_[1] |= 0x00000020u;
}
inline void RoleBaseInfo::clear_has_guide_y() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void RoleBaseInfo::clear_guide_y() {
  guide_y_ = 0u;
  clear_has_guide_y();
}
inline ::google::protobuf::uint32 RoleBaseInfo::guide_y() const {
  return guide_y_;
}
inline void RoleBaseInfo::set_guide_y(::google::protobuf::uint32 value) {
  set_has_guide_y();
  guide_y_ = value;
}

// repeated .PB.GuideData guide_list = 39;
inline int RoleBaseInfo::guide_list_size() const {
  return guide_list_.size();
}
inline void RoleBaseInfo::clear_guide_list() {
  guide_list_.Clear();
}
inline const ::PB::GuideData& RoleBaseInfo::guide_list(int index) const {
  return guide_list_.Get(index);
}
inline ::PB::GuideData* RoleBaseInfo::mutable_guide_list(int index) {
  return guide_list_.Mutable(index);
}
inline ::PB::GuideData* RoleBaseInfo::add_guide_list() {
  return guide_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::GuideData >&
RoleBaseInfo::guide_list() const {
  return guide_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::GuideData >*
RoleBaseInfo::mutable_guide_list() {
  return &guide_list_;
}

// optional uint32 duobao_peace_over_time = 40;
inline bool RoleBaseInfo::has_duobao_peace_over_time() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void RoleBaseInfo::set_has_duobao_peace_over_time() {
  _has_bits_[1] |= 0x00000080u;
}
inline void RoleBaseInfo::clear_has_duobao_peace_over_time() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void RoleBaseInfo::clear_duobao_peace_over_time() {
  duobao_peace_over_time_ = 0u;
  clear_has_duobao_peace_over_time();
}
inline ::google::protobuf::uint32 RoleBaseInfo::duobao_peace_over_time() const {
  return duobao_peace_over_time_;
}
inline void RoleBaseInfo::set_duobao_peace_over_time(::google::protobuf::uint32 value) {
  set_has_duobao_peace_over_time();
  duobao_peace_over_time_ = value;
}

// -------------------------------------------------------------------

// RoleEquipmentInfo

// repeated .PB.Equipment equipment_list = 1;
inline int RoleEquipmentInfo::equipment_list_size() const {
  return equipment_list_.size();
}
inline void RoleEquipmentInfo::clear_equipment_list() {
  equipment_list_.Clear();
}
inline const ::PB::Equipment& RoleEquipmentInfo::equipment_list(int index) const {
  return equipment_list_.Get(index);
}
inline ::PB::Equipment* RoleEquipmentInfo::mutable_equipment_list(int index) {
  return equipment_list_.Mutable(index);
}
inline ::PB::Equipment* RoleEquipmentInfo::add_equipment_list() {
  return equipment_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Equipment >&
RoleEquipmentInfo::equipment_list() const {
  return equipment_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Equipment >*
RoleEquipmentInfo::mutable_equipment_list() {
  return &equipment_list_;
}

// -------------------------------------------------------------------

// Formation

// required uint32 hero_id = 1;
inline bool Formation::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Formation::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Formation::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Formation::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 Formation::hero_id() const {
  return hero_id_;
}
inline void Formation::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// repeated uint32 equipment_list = 2;
inline int Formation::equipment_list_size() const {
  return equipment_list_.size();
}
inline void Formation::clear_equipment_list() {
  equipment_list_.Clear();
}
inline ::google::protobuf::uint32 Formation::equipment_list(int index) const {
  return equipment_list_.Get(index);
}
inline void Formation::set_equipment_list(int index, ::google::protobuf::uint32 value) {
  equipment_list_.Set(index, value);
}
inline void Formation::add_equipment_list(::google::protobuf::uint32 value) {
  equipment_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Formation::equipment_list() const {
  return equipment_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Formation::mutable_equipment_list() {
  return &equipment_list_;
}

// repeated uint32 treasure_list = 3;
inline int Formation::treasure_list_size() const {
  return treasure_list_.size();
}
inline void Formation::clear_treasure_list() {
  treasure_list_.Clear();
}
inline ::google::protobuf::uint32 Formation::treasure_list(int index) const {
  return treasure_list_.Get(index);
}
inline void Formation::set_treasure_list(int index, ::google::protobuf::uint32 value) {
  treasure_list_.Set(index, value);
}
inline void Formation::add_treasure_list(::google::protobuf::uint32 value) {
  treasure_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Formation::treasure_list() const {
  return treasure_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Formation::mutable_treasure_list() {
  return &treasure_list_;
}

// -------------------------------------------------------------------

// RoleHeroInfo

// required uint32 normal_free_summon_times = 1;
inline bool RoleHeroInfo::has_normal_free_summon_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleHeroInfo::set_has_normal_free_summon_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleHeroInfo::clear_has_normal_free_summon_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleHeroInfo::clear_normal_free_summon_times() {
  normal_free_summon_times_ = 0u;
  clear_has_normal_free_summon_times();
}
inline ::google::protobuf::uint32 RoleHeroInfo::normal_free_summon_times() const {
  return normal_free_summon_times_;
}
inline void RoleHeroInfo::set_normal_free_summon_times(::google::protobuf::uint32 value) {
  set_has_normal_free_summon_times();
  normal_free_summon_times_ = value;
}

// required uint32 normal_free_summon_time = 2;
inline bool RoleHeroInfo::has_normal_free_summon_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleHeroInfo::set_has_normal_free_summon_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleHeroInfo::clear_has_normal_free_summon_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleHeroInfo::clear_normal_free_summon_time() {
  normal_free_summon_time_ = 0u;
  clear_has_normal_free_summon_time();
}
inline ::google::protobuf::uint32 RoleHeroInfo::normal_free_summon_time() const {
  return normal_free_summon_time_;
}
inline void RoleHeroInfo::set_normal_free_summon_time(::google::protobuf::uint32 value) {
  set_has_normal_free_summon_time();
  normal_free_summon_time_ = value;
}

// required uint32 high_free_summon_time = 3;
inline bool RoleHeroInfo::has_high_free_summon_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleHeroInfo::set_has_high_free_summon_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleHeroInfo::clear_has_high_free_summon_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleHeroInfo::clear_high_free_summon_time() {
  high_free_summon_time_ = 0u;
  clear_has_high_free_summon_time();
}
inline ::google::protobuf::uint32 RoleHeroInfo::high_free_summon_time() const {
  return high_free_summon_time_;
}
inline void RoleHeroInfo::set_high_free_summon_time(::google::protobuf::uint32 value) {
  set_has_high_free_summon_time();
  high_free_summon_time_ = value;
}

// required uint32 high_summon_times = 4;
inline bool RoleHeroInfo::has_high_summon_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleHeroInfo::set_has_high_summon_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleHeroInfo::clear_has_high_summon_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleHeroInfo::clear_high_summon_times() {
  high_summon_times_ = 0u;
  clear_has_high_summon_times();
}
inline ::google::protobuf::uint32 RoleHeroInfo::high_summon_times() const {
  return high_summon_times_;
}
inline void RoleHeroInfo::set_high_summon_times(::google::protobuf::uint32 value) {
  set_has_high_summon_times();
  high_summon_times_ = value;
}

// repeated .PB.Hero hero_list = 5;
inline int RoleHeroInfo::hero_list_size() const {
  return hero_list_.size();
}
inline void RoleHeroInfo::clear_hero_list() {
  hero_list_.Clear();
}
inline const ::PB::Hero& RoleHeroInfo::hero_list(int index) const {
  return hero_list_.Get(index);
}
inline ::PB::Hero* RoleHeroInfo::mutable_hero_list(int index) {
  return hero_list_.Mutable(index);
}
inline ::PB::Hero* RoleHeroInfo::add_hero_list() {
  return hero_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Hero >&
RoleHeroInfo::hero_list() const {
  return hero_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Hero >*
RoleHeroInfo::mutable_hero_list() {
  return &hero_list_;
}

// repeated uint32 collection_list = 6;
inline int RoleHeroInfo::collection_list_size() const {
  return collection_list_.size();
}
inline void RoleHeroInfo::clear_collection_list() {
  collection_list_.Clear();
}
inline ::google::protobuf::uint32 RoleHeroInfo::collection_list(int index) const {
  return collection_list_.Get(index);
}
inline void RoleHeroInfo::set_collection_list(int index, ::google::protobuf::uint32 value) {
  collection_list_.Set(index, value);
}
inline void RoleHeroInfo::add_collection_list(::google::protobuf::uint32 value) {
  collection_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleHeroInfo::collection_list() const {
  return collection_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleHeroInfo::mutable_collection_list() {
  return &collection_list_;
}

// repeated uint32 reinforcement_list = 7;
inline int RoleHeroInfo::reinforcement_list_size() const {
  return reinforcement_list_.size();
}
inline void RoleHeroInfo::clear_reinforcement_list() {
  reinforcement_list_.Clear();
}
inline ::google::protobuf::uint32 RoleHeroInfo::reinforcement_list(int index) const {
  return reinforcement_list_.Get(index);
}
inline void RoleHeroInfo::set_reinforcement_list(int index, ::google::protobuf::uint32 value) {
  reinforcement_list_.Set(index, value);
}
inline void RoleHeroInfo::add_reinforcement_list(::google::protobuf::uint32 value) {
  reinforcement_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleHeroInfo::reinforcement_list() const {
  return reinforcement_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleHeroInfo::mutable_reinforcement_list() {
  return &reinforcement_list_;
}

// repeated .PB.Formation formation_list = 8;
inline int RoleHeroInfo::formation_list_size() const {
  return formation_list_.size();
}
inline void RoleHeroInfo::clear_formation_list() {
  formation_list_.Clear();
}
inline const ::PB::Formation& RoleHeroInfo::formation_list(int index) const {
  return formation_list_.Get(index);
}
inline ::PB::Formation* RoleHeroInfo::mutable_formation_list(int index) {
  return formation_list_.Mutable(index);
}
inline ::PB::Formation* RoleHeroInfo::add_formation_list() {
  return formation_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Formation >&
RoleHeroInfo::formation_list() const {
  return formation_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Formation >*
RoleHeroInfo::mutable_formation_list() {
  return &formation_list_;
}

// optional uint32 train_times = 9;
inline bool RoleHeroInfo::has_train_times() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleHeroInfo::set_has_train_times() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleHeroInfo::clear_has_train_times() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleHeroInfo::clear_train_times() {
  train_times_ = 0u;
  clear_has_train_times();
}
inline ::google::protobuf::uint32 RoleHeroInfo::train_times() const {
  return train_times_;
}
inline void RoleHeroInfo::set_train_times(::google::protobuf::uint32 value) {
  set_has_train_times();
  train_times_ = value;
}

// -------------------------------------------------------------------

// RoleTreasureInfo

// repeated .PB.Treasure treasure_list = 1;
inline int RoleTreasureInfo::treasure_list_size() const {
  return treasure_list_.size();
}
inline void RoleTreasureInfo::clear_treasure_list() {
  treasure_list_.Clear();
}
inline const ::PB::Treasure& RoleTreasureInfo::treasure_list(int index) const {
  return treasure_list_.Get(index);
}
inline ::PB::Treasure* RoleTreasureInfo::mutable_treasure_list(int index) {
  return treasure_list_.Mutable(index);
}
inline ::PB::Treasure* RoleTreasureInfo::add_treasure_list() {
  return treasure_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Treasure >&
RoleTreasureInfo::treasure_list() const {
  return treasure_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Treasure >*
RoleTreasureInfo::mutable_treasure_list() {
  return &treasure_list_;
}

// -------------------------------------------------------------------

// RoleItemInfo

// repeated .PB.Item item_list = 1;
inline int RoleItemInfo::item_list_size() const {
  return item_list_.size();
}
inline void RoleItemInfo::clear_item_list() {
  item_list_.Clear();
}
inline const ::PB::Item& RoleItemInfo::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::PB::Item* RoleItemInfo::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::PB::Item* RoleItemInfo::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Item >&
RoleItemInfo::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Item >*
RoleItemInfo::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// EmailContext

// required uint32 type = 1;
inline bool EmailContext::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmailContext::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmailContext::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmailContext::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 EmailContext::type() const {
  return type_;
}
inline void EmailContext::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required string text = 2;
inline bool EmailContext::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmailContext::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmailContext::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmailContext::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& EmailContext::text() const {
  return *text_;
}
inline void EmailContext::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void EmailContext::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void EmailContext::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EmailContext::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* EmailContext::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EmailContext::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// EmailInfo

// required uint32 uid = 1;
inline bool EmailInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmailInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmailInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmailInfo::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 EmailInfo::uid() const {
  return uid_;
}
inline void EmailInfo::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 info_id = 2;
inline bool EmailInfo::has_info_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmailInfo::set_has_info_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmailInfo::clear_has_info_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmailInfo::clear_info_id() {
  info_id_ = 0u;
  clear_has_info_id();
}
inline ::google::protobuf::uint32 EmailInfo::info_id() const {
  return info_id_;
}
inline void EmailInfo::set_info_id(::google::protobuf::uint32 value) {
  set_has_info_id();
  info_id_ = value;
}

// required uint32 receive_time = 3;
inline bool EmailInfo::has_receive_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EmailInfo::set_has_receive_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EmailInfo::clear_has_receive_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EmailInfo::clear_receive_time() {
  receive_time_ = 0u;
  clear_has_receive_time();
}
inline ::google::protobuf::uint32 EmailInfo::receive_time() const {
  return receive_time_;
}
inline void EmailInfo::set_receive_time(::google::protobuf::uint32 value) {
  set_has_receive_time();
  receive_time_ = value;
}

// repeated .PB.EmailContext context_list = 4;
inline int EmailInfo::context_list_size() const {
  return context_list_.size();
}
inline void EmailInfo::clear_context_list() {
  context_list_.Clear();
}
inline const ::PB::EmailContext& EmailInfo::context_list(int index) const {
  return context_list_.Get(index);
}
inline ::PB::EmailContext* EmailInfo::mutable_context_list(int index) {
  return context_list_.Mutable(index);
}
inline ::PB::EmailContext* EmailInfo::add_context_list() {
  return context_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::EmailContext >&
EmailInfo::context_list() const {
  return context_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::EmailContext >*
EmailInfo::mutable_context_list() {
  return &context_list_;
}

// -------------------------------------------------------------------

// RoleEmailInfo

// repeated .PB.EmailInfo email_list = 1;
inline int RoleEmailInfo::email_list_size() const {
  return email_list_.size();
}
inline void RoleEmailInfo::clear_email_list() {
  email_list_.Clear();
}
inline const ::PB::EmailInfo& RoleEmailInfo::email_list(int index) const {
  return email_list_.Get(index);
}
inline ::PB::EmailInfo* RoleEmailInfo::mutable_email_list(int index) {
  return email_list_.Mutable(index);
}
inline ::PB::EmailInfo* RoleEmailInfo::add_email_list() {
  return email_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::EmailInfo >&
RoleEmailInfo::email_list() const {
  return email_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::EmailInfo >*
RoleEmailInfo::mutable_email_list() {
  return &email_list_;
}

// -------------------------------------------------------------------

// MapData

// required uint32 star = 1;
inline bool MapData::has_star() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MapData::set_has_star() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MapData::clear_has_star() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MapData::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 MapData::star() const {
  return star_;
}
inline void MapData::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// required uint32 battle_times = 2;
inline bool MapData::has_battle_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MapData::set_has_battle_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MapData::clear_has_battle_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MapData::clear_battle_times() {
  battle_times_ = 0u;
  clear_has_battle_times();
}
inline ::google::protobuf::uint32 MapData::battle_times() const {
  return battle_times_;
}
inline void MapData::set_battle_times(::google::protobuf::uint32 value) {
  set_has_battle_times();
  battle_times_ = value;
}

// required uint32 reset_times = 3;
inline bool MapData::has_reset_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MapData::set_has_reset_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MapData::clear_has_reset_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MapData::clear_reset_times() {
  reset_times_ = 0u;
  clear_has_reset_times();
}
inline ::google::protobuf::uint32 MapData::reset_times() const {
  return reset_times_;
}
inline void MapData::set_reset_times(::google::protobuf::uint32 value) {
  set_has_reset_times();
  reset_times_ = value;
}

// required uint32 is_get_reward = 4;
inline bool MapData::has_is_get_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MapData::set_has_is_get_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MapData::clear_has_is_get_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MapData::clear_is_get_reward() {
  is_get_reward_ = 0u;
  clear_has_is_get_reward();
}
inline ::google::protobuf::uint32 MapData::is_get_reward() const {
  return is_get_reward_;
}
inline void MapData::set_is_get_reward(::google::protobuf::uint32 value) {
  set_has_is_get_reward();
  is_get_reward_ = value;
}

// -------------------------------------------------------------------

// ChapterData

// repeated .PB.MapData map_list = 1;
inline int ChapterData::map_list_size() const {
  return map_list_.size();
}
inline void ChapterData::clear_map_list() {
  map_list_.Clear();
}
inline const ::PB::MapData& ChapterData::map_list(int index) const {
  return map_list_.Get(index);
}
inline ::PB::MapData* ChapterData::mutable_map_list(int index) {
  return map_list_.Mutable(index);
}
inline ::PB::MapData* ChapterData::add_map_list() {
  return map_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::MapData >&
ChapterData::map_list() const {
  return map_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::MapData >*
ChapterData::mutable_map_list() {
  return &map_list_;
}

// repeated uint32 star_reward_list = 2;
inline int ChapterData::star_reward_list_size() const {
  return star_reward_list_.size();
}
inline void ChapterData::clear_star_reward_list() {
  star_reward_list_.Clear();
}
inline ::google::protobuf::uint32 ChapterData::star_reward_list(int index) const {
  return star_reward_list_.Get(index);
}
inline void ChapterData::set_star_reward_list(int index, ::google::protobuf::uint32 value) {
  star_reward_list_.Set(index, value);
}
inline void ChapterData::add_star_reward_list(::google::protobuf::uint32 value) {
  star_reward_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChapterData::star_reward_list() const {
  return star_reward_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChapterData::mutable_star_reward_list() {
  return &star_reward_list_;
}

// -------------------------------------------------------------------

// MainFBData

// repeated .PB.ChapterData chapter_list = 1;
inline int MainFBData::chapter_list_size() const {
  return chapter_list_.size();
}
inline void MainFBData::clear_chapter_list() {
  chapter_list_.Clear();
}
inline const ::PB::ChapterData& MainFBData::chapter_list(int index) const {
  return chapter_list_.Get(index);
}
inline ::PB::ChapterData* MainFBData::mutable_chapter_list(int index) {
  return chapter_list_.Mutable(index);
}
inline ::PB::ChapterData* MainFBData::add_chapter_list() {
  return chapter_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ChapterData >&
MainFBData::chapter_list() const {
  return chapter_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ChapterData >*
MainFBData::mutable_chapter_list() {
  return &chapter_list_;
}

// -------------------------------------------------------------------

// HeroMapData

// required uint32 battle_times = 1;
inline bool HeroMapData::has_battle_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroMapData::set_has_battle_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroMapData::clear_has_battle_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroMapData::clear_battle_times() {
  battle_times_ = 0u;
  clear_has_battle_times();
}
inline ::google::protobuf::uint32 HeroMapData::battle_times() const {
  return battle_times_;
}
inline void HeroMapData::set_battle_times(::google::protobuf::uint32 value) {
  set_has_battle_times();
  battle_times_ = value;
}

// required uint32 is_get_reward = 2;
inline bool HeroMapData::has_is_get_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroMapData::set_has_is_get_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroMapData::clear_has_is_get_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroMapData::clear_is_get_reward() {
  is_get_reward_ = 0u;
  clear_has_is_get_reward();
}
inline ::google::protobuf::uint32 HeroMapData::is_get_reward() const {
  return is_get_reward_;
}
inline void HeroMapData::set_is_get_reward(::google::protobuf::uint32 value) {
  set_has_is_get_reward();
  is_get_reward_ = value;
}

// -------------------------------------------------------------------

// HeroFBChapter

// repeated .PB.HeroMapData map_list = 1;
inline int HeroFBChapter::map_list_size() const {
  return map_list_.size();
}
inline void HeroFBChapter::clear_map_list() {
  map_list_.Clear();
}
inline const ::PB::HeroMapData& HeroFBChapter::map_list(int index) const {
  return map_list_.Get(index);
}
inline ::PB::HeroMapData* HeroFBChapter::mutable_map_list(int index) {
  return map_list_.Mutable(index);
}
inline ::PB::HeroMapData* HeroFBChapter::add_map_list() {
  return map_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::HeroMapData >&
HeroFBChapter::map_list() const {
  return map_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::HeroMapData >*
HeroFBChapter::mutable_map_list() {
  return &map_list_;
}

// required uint32 is_pass_extra_map = 2;
inline bool HeroFBChapter::has_is_pass_extra_map() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroFBChapter::set_has_is_pass_extra_map() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroFBChapter::clear_has_is_pass_extra_map() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroFBChapter::clear_is_pass_extra_map() {
  is_pass_extra_map_ = 0u;
  clear_has_is_pass_extra_map();
}
inline ::google::protobuf::uint32 HeroFBChapter::is_pass_extra_map() const {
  return is_pass_extra_map_;
}
inline void HeroFBChapter::set_is_pass_extra_map(::google::protobuf::uint32 value) {
  set_has_is_pass_extra_map();
  is_pass_extra_map_ = value;
}

// -------------------------------------------------------------------

// HeroFBData

// repeated .PB.HeroFBChapter chapter_list = 1;
inline int HeroFBData::chapter_list_size() const {
  return chapter_list_.size();
}
inline void HeroFBData::clear_chapter_list() {
  chapter_list_.Clear();
}
inline const ::PB::HeroFBChapter& HeroFBData::chapter_list(int index) const {
  return chapter_list_.Get(index);
}
inline ::PB::HeroFBChapter* HeroFBData::mutable_chapter_list(int index) {
  return chapter_list_.Mutable(index);
}
inline ::PB::HeroFBChapter* HeroFBData::add_chapter_list() {
  return chapter_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::HeroFBChapter >&
HeroFBData::chapter_list() const {
  return chapter_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::HeroFBChapter >*
HeroFBData::mutable_chapter_list() {
  return &chapter_list_;
}

// required uint32 battle_times = 2;
inline bool HeroFBData::has_battle_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroFBData::set_has_battle_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroFBData::clear_has_battle_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroFBData::clear_battle_times() {
  battle_times_ = 0u;
  clear_has_battle_times();
}
inline ::google::protobuf::uint32 HeroFBData::battle_times() const {
  return battle_times_;
}
inline void HeroFBData::set_battle_times(::google::protobuf::uint32 value) {
  set_has_battle_times();
  battle_times_ = value;
}

// -------------------------------------------------------------------

// DailyFBData

// repeated uint32 chapter_list = 1;
inline int DailyFBData::chapter_list_size() const {
  return chapter_list_.size();
}
inline void DailyFBData::clear_chapter_list() {
  chapter_list_.Clear();
}
inline ::google::protobuf::uint32 DailyFBData::chapter_list(int index) const {
  return chapter_list_.Get(index);
}
inline void DailyFBData::set_chapter_list(int index, ::google::protobuf::uint32 value) {
  chapter_list_.Set(index, value);
}
inline void DailyFBData::add_chapter_list(::google::protobuf::uint32 value) {
  chapter_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DailyFBData::chapter_list() const {
  return chapter_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DailyFBData::mutable_chapter_list() {
  return &chapter_list_;
}

// -------------------------------------------------------------------

// EliteMapEnemyData

// required uint32 map_id = 1;
inline bool EliteMapEnemyData::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EliteMapEnemyData::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EliteMapEnemyData::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EliteMapEnemyData::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 EliteMapEnemyData::map_id() const {
  return map_id_;
}
inline void EliteMapEnemyData::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// repeated .PB.MonsterData monster_list = 2;
inline int EliteMapEnemyData::monster_list_size() const {
  return monster_list_.size();
}
inline void EliteMapEnemyData::clear_monster_list() {
  monster_list_.Clear();
}
inline const ::PB::MonsterData& EliteMapEnemyData::monster_list(int index) const {
  return monster_list_.Get(index);
}
inline ::PB::MonsterData* EliteMapEnemyData::mutable_monster_list(int index) {
  return monster_list_.Mutable(index);
}
inline ::PB::MonsterData* EliteMapEnemyData::add_monster_list() {
  return monster_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::MonsterData >&
EliteMapEnemyData::monster_list() const {
  return monster_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::MonsterData >*
EliteMapEnemyData::mutable_monster_list() {
  return &monster_list_;
}

// -------------------------------------------------------------------

// EliteFBChapter

// repeated .PB.MapData map_list = 1;
inline int EliteFBChapter::map_list_size() const {
  return map_list_.size();
}
inline void EliteFBChapter::clear_map_list() {
  map_list_.Clear();
}
inline const ::PB::MapData& EliteFBChapter::map_list(int index) const {
  return map_list_.Get(index);
}
inline ::PB::MapData* EliteFBChapter::mutable_map_list(int index) {
  return map_list_.Mutable(index);
}
inline ::PB::MapData* EliteFBChapter::add_map_list() {
  return map_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::MapData >&
EliteFBChapter::map_list() const {
  return map_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::MapData >*
EliteFBChapter::mutable_map_list() {
  return &map_list_;
}

// repeated uint32 star_reward_list = 2;
inline int EliteFBChapter::star_reward_list_size() const {
  return star_reward_list_.size();
}
inline void EliteFBChapter::clear_star_reward_list() {
  star_reward_list_.Clear();
}
inline ::google::protobuf::uint32 EliteFBChapter::star_reward_list(int index) const {
  return star_reward_list_.Get(index);
}
inline void EliteFBChapter::set_star_reward_list(int index, ::google::protobuf::uint32 value) {
  star_reward_list_.Set(index, value);
}
inline void EliteFBChapter::add_star_reward_list(::google::protobuf::uint32 value) {
  star_reward_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EliteFBChapter::star_reward_list() const {
  return star_reward_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EliteFBChapter::mutable_star_reward_list() {
  return &star_reward_list_;
}

// required .PB.EliteMapEnemyData enemy_data = 3;
inline bool EliteFBChapter::has_enemy_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EliteFBChapter::set_has_enemy_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EliteFBChapter::clear_has_enemy_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EliteFBChapter::clear_enemy_data() {
  if (enemy_data_ != NULL) enemy_data_->::PB::EliteMapEnemyData::Clear();
  clear_has_enemy_data();
}
inline const ::PB::EliteMapEnemyData& EliteFBChapter::enemy_data() const {
  return enemy_data_ != NULL ? *enemy_data_ : *default_instance_->enemy_data_;
}
inline ::PB::EliteMapEnemyData* EliteFBChapter::mutable_enemy_data() {
  set_has_enemy_data();
  if (enemy_data_ == NULL) enemy_data_ = new ::PB::EliteMapEnemyData;
  return enemy_data_;
}
inline ::PB::EliteMapEnemyData* EliteFBChapter::release_enemy_data() {
  clear_has_enemy_data();
  ::PB::EliteMapEnemyData* temp = enemy_data_;
  enemy_data_ = NULL;
  return temp;
}
inline void EliteFBChapter::set_allocated_enemy_data(::PB::EliteMapEnemyData* enemy_data) {
  delete enemy_data_;
  enemy_data_ = enemy_data;
  if (enemy_data) {
    set_has_enemy_data();
  } else {
    clear_has_enemy_data();
  }
}

// -------------------------------------------------------------------

// EliteFBData

// repeated .PB.EliteFBChapter chapter_list = 1;
inline int EliteFBData::chapter_list_size() const {
  return chapter_list_.size();
}
inline void EliteFBData::clear_chapter_list() {
  chapter_list_.Clear();
}
inline const ::PB::EliteFBChapter& EliteFBData::chapter_list(int index) const {
  return chapter_list_.Get(index);
}
inline ::PB::EliteFBChapter* EliteFBData::mutable_chapter_list(int index) {
  return chapter_list_.Mutable(index);
}
inline ::PB::EliteFBChapter* EliteFBData::add_chapter_list() {
  return chapter_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::EliteFBChapter >&
EliteFBData::chapter_list() const {
  return chapter_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::EliteFBChapter >*
EliteFBData::mutable_chapter_list() {
  return &chapter_list_;
}

// -------------------------------------------------------------------

// TowerFBData

// repeated uint32 map_star_list = 1;
inline int TowerFBData::map_star_list_size() const {
  return map_star_list_.size();
}
inline void TowerFBData::clear_map_star_list() {
  map_star_list_.Clear();
}
inline ::google::protobuf::uint32 TowerFBData::map_star_list(int index) const {
  return map_star_list_.Get(index);
}
inline void TowerFBData::set_map_star_list(int index, ::google::protobuf::uint32 value) {
  map_star_list_.Set(index, value);
}
inline void TowerFBData::add_map_star_list(::google::protobuf::uint32 value) {
  map_star_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerFBData::map_star_list() const {
  return map_star_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerFBData::mutable_map_star_list() {
  return &map_star_list_;
}

// required uint32 map_level_record = 2;
inline bool TowerFBData::has_map_level_record() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerFBData::set_has_map_level_record() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerFBData::clear_has_map_level_record() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerFBData::clear_map_level_record() {
  map_level_record_ = 0u;
  clear_has_map_level_record();
}
inline ::google::protobuf::uint32 TowerFBData::map_level_record() const {
  return map_level_record_;
}
inline void TowerFBData::set_map_level_record(::google::protobuf::uint32 value) {
  set_has_map_level_record();
  map_level_record_ = value;
}

// required uint32 keep_best_star_passed_record = 3;
inline bool TowerFBData::has_keep_best_star_passed_record() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TowerFBData::set_has_keep_best_star_passed_record() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TowerFBData::clear_has_keep_best_star_passed_record() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TowerFBData::clear_keep_best_star_passed_record() {
  keep_best_star_passed_record_ = 0u;
  clear_has_keep_best_star_passed_record();
}
inline ::google::protobuf::uint32 TowerFBData::keep_best_star_passed_record() const {
  return keep_best_star_passed_record_;
}
inline void TowerFBData::set_keep_best_star_passed_record(::google::protobuf::uint32 value) {
  set_has_keep_best_star_passed_record();
  keep_best_star_passed_record_ = value;
}

// repeated .PB.Property select_pro_list = 4;
inline int TowerFBData::select_pro_list_size() const {
  return select_pro_list_.size();
}
inline void TowerFBData::clear_select_pro_list() {
  select_pro_list_.Clear();
}
inline const ::PB::Property& TowerFBData::select_pro_list(int index) const {
  return select_pro_list_.Get(index);
}
inline ::PB::Property* TowerFBData::mutable_select_pro_list(int index) {
  return select_pro_list_.Mutable(index);
}
inline ::PB::Property* TowerFBData::add_select_pro_list() {
  return select_pro_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::Property >&
TowerFBData::select_pro_list() const {
  return select_pro_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::Property >*
TowerFBData::mutable_select_pro_list() {
  return &select_pro_list_;
}

// required uint32 is_buy_star_goods = 5;
inline bool TowerFBData::has_is_buy_star_goods() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TowerFBData::set_has_is_buy_star_goods() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TowerFBData::clear_has_is_buy_star_goods() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TowerFBData::clear_is_buy_star_goods() {
  is_buy_star_goods_ = 0u;
  clear_has_is_buy_star_goods();
}
inline ::google::protobuf::uint32 TowerFBData::is_buy_star_goods() const {
  return is_buy_star_goods_;
}
inline void TowerFBData::set_is_buy_star_goods(::google::protobuf::uint32 value) {
  set_has_is_buy_star_goods();
  is_buy_star_goods_ = value;
}

// required uint32 star_goods_idx = 6;
inline bool TowerFBData::has_star_goods_idx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TowerFBData::set_has_star_goods_idx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TowerFBData::clear_has_star_goods_idx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TowerFBData::clear_star_goods_idx() {
  star_goods_idx_ = 0u;
  clear_has_star_goods_idx();
}
inline ::google::protobuf::uint32 TowerFBData::star_goods_idx() const {
  return star_goods_idx_;
}
inline void TowerFBData::set_star_goods_idx(::google::protobuf::uint32 value) {
  set_has_star_goods_idx();
  star_goods_idx_ = value;
}

// required uint32 is_need_reset = 7;
inline bool TowerFBData::has_is_need_reset() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TowerFBData::set_has_is_need_reset() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TowerFBData::clear_has_is_need_reset() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TowerFBData::clear_is_need_reset() {
  is_need_reset_ = 0u;
  clear_has_is_need_reset();
}
inline ::google::protobuf::uint32 TowerFBData::is_need_reset() const {
  return is_need_reset_;
}
inline void TowerFBData::set_is_need_reset(::google::protobuf::uint32 value) {
  set_has_is_need_reset();
  is_need_reset_ = value;
}

// required uint32 today_reset_times = 8;
inline bool TowerFBData::has_today_reset_times() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TowerFBData::set_has_today_reset_times() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TowerFBData::clear_has_today_reset_times() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TowerFBData::clear_today_reset_times() {
  today_reset_times_ = 0u;
  clear_has_today_reset_times();
}
inline ::google::protobuf::uint32 TowerFBData::today_reset_times() const {
  return today_reset_times_;
}
inline void TowerFBData::set_today_reset_times(::google::protobuf::uint32 value) {
  set_has_today_reset_times();
  today_reset_times_ = value;
}

// required uint32 cur_star = 9;
inline bool TowerFBData::has_cur_star() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TowerFBData::set_has_cur_star() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TowerFBData::clear_has_cur_star() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TowerFBData::clear_cur_star() {
  cur_star_ = 0u;
  clear_has_cur_star();
}
inline ::google::protobuf::uint32 TowerFBData::cur_star() const {
  return cur_star_;
}
inline void TowerFBData::set_cur_star(::google::protobuf::uint32 value) {
  set_has_cur_star();
  cur_star_ = value;
}

// required uint32 star_max_record = 10;
inline bool TowerFBData::has_star_max_record() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TowerFBData::set_has_star_max_record() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TowerFBData::clear_has_star_max_record() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TowerFBData::clear_star_max_record() {
  star_max_record_ = 0u;
  clear_has_star_max_record();
}
inline ::google::protobuf::uint32 TowerFBData::star_max_record() const {
  return star_max_record_;
}
inline void TowerFBData::set_star_max_record(::google::protobuf::uint32 value) {
  set_has_star_max_record();
  star_max_record_ = value;
}

// required uint32 elite_map_level = 11;
inline bool TowerFBData::has_elite_map_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TowerFBData::set_has_elite_map_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TowerFBData::clear_has_elite_map_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TowerFBData::clear_elite_map_level() {
  elite_map_level_ = 0u;
  clear_has_elite_map_level();
}
inline ::google::protobuf::uint32 TowerFBData::elite_map_level() const {
  return elite_map_level_;
}
inline void TowerFBData::set_elite_map_level(::google::protobuf::uint32 value) {
  set_has_elite_map_level();
  elite_map_level_ = value;
}

// required uint32 elite_map_battle_times = 12;
inline bool TowerFBData::has_elite_map_battle_times() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TowerFBData::set_has_elite_map_battle_times() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TowerFBData::clear_has_elite_map_battle_times() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TowerFBData::clear_elite_map_battle_times() {
  elite_map_battle_times_ = 0u;
  clear_has_elite_map_battle_times();
}
inline ::google::protobuf::uint32 TowerFBData::elite_map_battle_times() const {
  return elite_map_battle_times_;
}
inline void TowerFBData::set_elite_map_battle_times(::google::protobuf::uint32 value) {
  set_has_elite_map_battle_times();
  elite_map_battle_times_ = value;
}

// required uint32 buy_elite_map_battle_times = 13;
inline bool TowerFBData::has_buy_elite_map_battle_times() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TowerFBData::set_has_buy_elite_map_battle_times() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TowerFBData::clear_has_buy_elite_map_battle_times() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TowerFBData::clear_buy_elite_map_battle_times() {
  buy_elite_map_battle_times_ = 0u;
  clear_has_buy_elite_map_battle_times();
}
inline ::google::protobuf::uint32 TowerFBData::buy_elite_map_battle_times() const {
  return buy_elite_map_battle_times_;
}
inline void TowerFBData::set_buy_elite_map_battle_times(::google::protobuf::uint32 value) {
  set_has_buy_elite_map_battle_times();
  buy_elite_map_battle_times_ = value;
}

// repeated uint32 rand_pro_idx_list = 14;
inline int TowerFBData::rand_pro_idx_list_size() const {
  return rand_pro_idx_list_.size();
}
inline void TowerFBData::clear_rand_pro_idx_list() {
  rand_pro_idx_list_.Clear();
}
inline ::google::protobuf::uint32 TowerFBData::rand_pro_idx_list(int index) const {
  return rand_pro_idx_list_.Get(index);
}
inline void TowerFBData::set_rand_pro_idx_list(int index, ::google::protobuf::uint32 value) {
  rand_pro_idx_list_.Set(index, value);
}
inline void TowerFBData::add_rand_pro_idx_list(::google::protobuf::uint32 value) {
  rand_pro_idx_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerFBData::rand_pro_idx_list() const {
  return rand_pro_idx_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerFBData::mutable_rand_pro_idx_list() {
  return &rand_pro_idx_list_;
}

// -------------------------------------------------------------------

// RoleFBInfo

// required .PB.MainFBData main_fb_data = 1;
inline bool RoleFBInfo::has_main_fb_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleFBInfo::set_has_main_fb_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleFBInfo::clear_has_main_fb_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleFBInfo::clear_main_fb_data() {
  if (main_fb_data_ != NULL) main_fb_data_->::PB::MainFBData::Clear();
  clear_has_main_fb_data();
}
inline const ::PB::MainFBData& RoleFBInfo::main_fb_data() const {
  return main_fb_data_ != NULL ? *main_fb_data_ : *default_instance_->main_fb_data_;
}
inline ::PB::MainFBData* RoleFBInfo::mutable_main_fb_data() {
  set_has_main_fb_data();
  if (main_fb_data_ == NULL) main_fb_data_ = new ::PB::MainFBData;
  return main_fb_data_;
}
inline ::PB::MainFBData* RoleFBInfo::release_main_fb_data() {
  clear_has_main_fb_data();
  ::PB::MainFBData* temp = main_fb_data_;
  main_fb_data_ = NULL;
  return temp;
}
inline void RoleFBInfo::set_allocated_main_fb_data(::PB::MainFBData* main_fb_data) {
  delete main_fb_data_;
  main_fb_data_ = main_fb_data;
  if (main_fb_data) {
    set_has_main_fb_data();
  } else {
    clear_has_main_fb_data();
  }
}

// required .PB.HeroFBData hero_fb_data = 2;
inline bool RoleFBInfo::has_hero_fb_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleFBInfo::set_has_hero_fb_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleFBInfo::clear_has_hero_fb_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleFBInfo::clear_hero_fb_data() {
  if (hero_fb_data_ != NULL) hero_fb_data_->::PB::HeroFBData::Clear();
  clear_has_hero_fb_data();
}
inline const ::PB::HeroFBData& RoleFBInfo::hero_fb_data() const {
  return hero_fb_data_ != NULL ? *hero_fb_data_ : *default_instance_->hero_fb_data_;
}
inline ::PB::HeroFBData* RoleFBInfo::mutable_hero_fb_data() {
  set_has_hero_fb_data();
  if (hero_fb_data_ == NULL) hero_fb_data_ = new ::PB::HeroFBData;
  return hero_fb_data_;
}
inline ::PB::HeroFBData* RoleFBInfo::release_hero_fb_data() {
  clear_has_hero_fb_data();
  ::PB::HeroFBData* temp = hero_fb_data_;
  hero_fb_data_ = NULL;
  return temp;
}
inline void RoleFBInfo::set_allocated_hero_fb_data(::PB::HeroFBData* hero_fb_data) {
  delete hero_fb_data_;
  hero_fb_data_ = hero_fb_data;
  if (hero_fb_data) {
    set_has_hero_fb_data();
  } else {
    clear_has_hero_fb_data();
  }
}

// required .PB.DailyFBData daily_fb_data = 3;
inline bool RoleFBInfo::has_daily_fb_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleFBInfo::set_has_daily_fb_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleFBInfo::clear_has_daily_fb_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleFBInfo::clear_daily_fb_data() {
  if (daily_fb_data_ != NULL) daily_fb_data_->::PB::DailyFBData::Clear();
  clear_has_daily_fb_data();
}
inline const ::PB::DailyFBData& RoleFBInfo::daily_fb_data() const {
  return daily_fb_data_ != NULL ? *daily_fb_data_ : *default_instance_->daily_fb_data_;
}
inline ::PB::DailyFBData* RoleFBInfo::mutable_daily_fb_data() {
  set_has_daily_fb_data();
  if (daily_fb_data_ == NULL) daily_fb_data_ = new ::PB::DailyFBData;
  return daily_fb_data_;
}
inline ::PB::DailyFBData* RoleFBInfo::release_daily_fb_data() {
  clear_has_daily_fb_data();
  ::PB::DailyFBData* temp = daily_fb_data_;
  daily_fb_data_ = NULL;
  return temp;
}
inline void RoleFBInfo::set_allocated_daily_fb_data(::PB::DailyFBData* daily_fb_data) {
  delete daily_fb_data_;
  daily_fb_data_ = daily_fb_data;
  if (daily_fb_data) {
    set_has_daily_fb_data();
  } else {
    clear_has_daily_fb_data();
  }
}

// required .PB.TowerFBData tower_fb_data = 4;
inline bool RoleFBInfo::has_tower_fb_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleFBInfo::set_has_tower_fb_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleFBInfo::clear_has_tower_fb_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleFBInfo::clear_tower_fb_data() {
  if (tower_fb_data_ != NULL) tower_fb_data_->::PB::TowerFBData::Clear();
  clear_has_tower_fb_data();
}
inline const ::PB::TowerFBData& RoleFBInfo::tower_fb_data() const {
  return tower_fb_data_ != NULL ? *tower_fb_data_ : *default_instance_->tower_fb_data_;
}
inline ::PB::TowerFBData* RoleFBInfo::mutable_tower_fb_data() {
  set_has_tower_fb_data();
  if (tower_fb_data_ == NULL) tower_fb_data_ = new ::PB::TowerFBData;
  return tower_fb_data_;
}
inline ::PB::TowerFBData* RoleFBInfo::release_tower_fb_data() {
  clear_has_tower_fb_data();
  ::PB::TowerFBData* temp = tower_fb_data_;
  tower_fb_data_ = NULL;
  return temp;
}
inline void RoleFBInfo::set_allocated_tower_fb_data(::PB::TowerFBData* tower_fb_data) {
  delete tower_fb_data_;
  tower_fb_data_ = tower_fb_data;
  if (tower_fb_data) {
    set_has_tower_fb_data();
  } else {
    clear_has_tower_fb_data();
  }
}

// required .PB.EliteFBData elite_fb_data = 5;
inline bool RoleFBInfo::has_elite_fb_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleFBInfo::set_has_elite_fb_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleFBInfo::clear_has_elite_fb_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleFBInfo::clear_elite_fb_data() {
  if (elite_fb_data_ != NULL) elite_fb_data_->::PB::EliteFBData::Clear();
  clear_has_elite_fb_data();
}
inline const ::PB::EliteFBData& RoleFBInfo::elite_fb_data() const {
  return elite_fb_data_ != NULL ? *elite_fb_data_ : *default_instance_->elite_fb_data_;
}
inline ::PB::EliteFBData* RoleFBInfo::mutable_elite_fb_data() {
  set_has_elite_fb_data();
  if (elite_fb_data_ == NULL) elite_fb_data_ = new ::PB::EliteFBData;
  return elite_fb_data_;
}
inline ::PB::EliteFBData* RoleFBInfo::release_elite_fb_data() {
  clear_has_elite_fb_data();
  ::PB::EliteFBData* temp = elite_fb_data_;
  elite_fb_data_ = NULL;
  return temp;
}
inline void RoleFBInfo::set_allocated_elite_fb_data(::PB::EliteFBData* elite_fb_data) {
  delete elite_fb_data_;
  elite_fb_data_ = elite_fb_data;
  if (elite_fb_data) {
    set_has_elite_fb_data();
  } else {
    clear_has_elite_fb_data();
  }
}

// -------------------------------------------------------------------

// ShopGoods

// required uint32 goods_id = 1;
inline bool ShopGoods::has_goods_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopGoods::set_has_goods_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopGoods::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopGoods::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 ShopGoods::goods_id() const {
  return goods_id_;
}
inline void ShopGoods::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// required uint32 goods_num = 2;
inline bool ShopGoods::has_goods_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopGoods::set_has_goods_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopGoods::clear_has_goods_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopGoods::clear_goods_num() {
  goods_num_ = 0u;
  clear_has_goods_num();
}
inline ::google::protobuf::uint32 ShopGoods::goods_num() const {
  return goods_num_;
}
inline void ShopGoods::set_goods_num(::google::protobuf::uint32 value) {
  set_has_goods_num();
  goods_num_ = value;
}

// -------------------------------------------------------------------

// HeroShopData

// repeated .PB.ShopGoods goods_list = 1;
inline int HeroShopData::goods_list_size() const {
  return goods_list_.size();
}
inline void HeroShopData::clear_goods_list() {
  goods_list_.Clear();
}
inline const ::PB::ShopGoods& HeroShopData::goods_list(int index) const {
  return goods_list_.Get(index);
}
inline ::PB::ShopGoods* HeroShopData::mutable_goods_list(int index) {
  return goods_list_.Mutable(index);
}
inline ::PB::ShopGoods* HeroShopData::add_goods_list() {
  return goods_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
HeroShopData::goods_list() const {
  return goods_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
HeroShopData::mutable_goods_list() {
  return &goods_list_;
}

// required uint32 last_recover_time = 2;
inline bool HeroShopData::has_last_recover_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroShopData::set_has_last_recover_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroShopData::clear_has_last_recover_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroShopData::clear_last_recover_time() {
  last_recover_time_ = 0u;
  clear_has_last_recover_time();
}
inline ::google::protobuf::uint32 HeroShopData::last_recover_time() const {
  return last_recover_time_;
}
inline void HeroShopData::set_last_recover_time(::google::protobuf::uint32 value) {
  set_has_last_recover_time();
  last_recover_time_ = value;
}

// required uint32 free_refresh_times = 3;
inline bool HeroShopData::has_free_refresh_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroShopData::set_has_free_refresh_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroShopData::clear_has_free_refresh_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroShopData::clear_free_refresh_times() {
  free_refresh_times_ = 0u;
  clear_has_free_refresh_times();
}
inline ::google::protobuf::uint32 HeroShopData::free_refresh_times() const {
  return free_refresh_times_;
}
inline void HeroShopData::set_free_refresh_times(::google::protobuf::uint32 value) {
  set_has_free_refresh_times();
  free_refresh_times_ = value;
}

// required uint32 cost_refresh_times = 4;
inline bool HeroShopData::has_cost_refresh_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroShopData::set_has_cost_refresh_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroShopData::clear_has_cost_refresh_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroShopData::clear_cost_refresh_times() {
  cost_refresh_times_ = 0u;
  clear_has_cost_refresh_times();
}
inline ::google::protobuf::uint32 HeroShopData::cost_refresh_times() const {
  return cost_refresh_times_;
}
inline void HeroShopData::set_cost_refresh_times(::google::protobuf::uint32 value) {
  set_has_cost_refresh_times();
  cost_refresh_times_ = value;
}

// -------------------------------------------------------------------

// GuildShopData

// repeated .PB.ShopGoods reward_goods_buy_record = 1;
inline int GuildShopData::reward_goods_buy_record_size() const {
  return reward_goods_buy_record_.size();
}
inline void GuildShopData::clear_reward_goods_buy_record() {
  reward_goods_buy_record_.Clear();
}
inline const ::PB::ShopGoods& GuildShopData::reward_goods_buy_record(int index) const {
  return reward_goods_buy_record_.Get(index);
}
inline ::PB::ShopGoods* GuildShopData::mutable_reward_goods_buy_record(int index) {
  return reward_goods_buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* GuildShopData::add_reward_goods_buy_record() {
  return reward_goods_buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
GuildShopData::reward_goods_buy_record() const {
  return reward_goods_buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
GuildShopData::mutable_reward_goods_buy_record() {
  return &reward_goods_buy_record_;
}

// repeated .PB.ShopGoods item_goods_buy_record = 2;
inline int GuildShopData::item_goods_buy_record_size() const {
  return item_goods_buy_record_.size();
}
inline void GuildShopData::clear_item_goods_buy_record() {
  item_goods_buy_record_.Clear();
}
inline const ::PB::ShopGoods& GuildShopData::item_goods_buy_record(int index) const {
  return item_goods_buy_record_.Get(index);
}
inline ::PB::ShopGoods* GuildShopData::mutable_item_goods_buy_record(int index) {
  return item_goods_buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* GuildShopData::add_item_goods_buy_record() {
  return item_goods_buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
GuildShopData::item_goods_buy_record() const {
  return item_goods_buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
GuildShopData::mutable_item_goods_buy_record() {
  return &item_goods_buy_record_;
}

// repeated .PB.ShopGoods limit_goods_buy_record = 3;
inline int GuildShopData::limit_goods_buy_record_size() const {
  return limit_goods_buy_record_.size();
}
inline void GuildShopData::clear_limit_goods_buy_record() {
  limit_goods_buy_record_.Clear();
}
inline const ::PB::ShopGoods& GuildShopData::limit_goods_buy_record(int index) const {
  return limit_goods_buy_record_.Get(index);
}
inline ::PB::ShopGoods* GuildShopData::mutable_limit_goods_buy_record(int index) {
  return limit_goods_buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* GuildShopData::add_limit_goods_buy_record() {
  return limit_goods_buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
GuildShopData::limit_goods_buy_record() const {
  return limit_goods_buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
GuildShopData::mutable_limit_goods_buy_record() {
  return &limit_goods_buy_record_;
}

// -------------------------------------------------------------------

// MallShopData

// repeated .PB.ShopGoods item_buy_record = 1;
inline int MallShopData::item_buy_record_size() const {
  return item_buy_record_.size();
}
inline void MallShopData::clear_item_buy_record() {
  item_buy_record_.Clear();
}
inline const ::PB::ShopGoods& MallShopData::item_buy_record(int index) const {
  return item_buy_record_.Get(index);
}
inline ::PB::ShopGoods* MallShopData::mutable_item_buy_record(int index) {
  return item_buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* MallShopData::add_item_buy_record() {
  return item_buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
MallShopData::item_buy_record() const {
  return item_buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
MallShopData::mutable_item_buy_record() {
  return &item_buy_record_;
}

// repeated .PB.ShopGoods gift_buy_record = 2;
inline int MallShopData::gift_buy_record_size() const {
  return gift_buy_record_.size();
}
inline void MallShopData::clear_gift_buy_record() {
  gift_buy_record_.Clear();
}
inline const ::PB::ShopGoods& MallShopData::gift_buy_record(int index) const {
  return gift_buy_record_.Get(index);
}
inline ::PB::ShopGoods* MallShopData::mutable_gift_buy_record(int index) {
  return gift_buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* MallShopData::add_gift_buy_record() {
  return gift_buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
MallShopData::gift_buy_record() const {
  return gift_buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
MallShopData::mutable_gift_buy_record() {
  return &gift_buy_record_;
}

// -------------------------------------------------------------------

// TowerShopData

// repeated .PB.ShopGoods buy_record = 1;
inline int TowerShopData::buy_record_size() const {
  return buy_record_.size();
}
inline void TowerShopData::clear_buy_record() {
  buy_record_.Clear();
}
inline const ::PB::ShopGoods& TowerShopData::buy_record(int index) const {
  return buy_record_.Get(index);
}
inline ::PB::ShopGoods* TowerShopData::mutable_buy_record(int index) {
  return buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* TowerShopData::add_buy_record() {
  return buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
TowerShopData::buy_record() const {
  return buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
TowerShopData::mutable_buy_record() {
  return &buy_record_;
}

// -------------------------------------------------------------------

// ArenaShopData

// repeated .PB.ShopGoods buy_record = 1;
inline int ArenaShopData::buy_record_size() const {
  return buy_record_.size();
}
inline void ArenaShopData::clear_buy_record() {
  buy_record_.Clear();
}
inline const ::PB::ShopGoods& ArenaShopData::buy_record(int index) const {
  return buy_record_.Get(index);
}
inline ::PB::ShopGoods* ArenaShopData::mutable_buy_record(int index) {
  return buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* ArenaShopData::add_buy_record() {
  return buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
ArenaShopData::buy_record() const {
  return buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
ArenaShopData::mutable_buy_record() {
  return &buy_record_;
}

// -------------------------------------------------------------------

// AwakenShopData

// repeated .PB.ShopGoods goods_list = 1;
inline int AwakenShopData::goods_list_size() const {
  return goods_list_.size();
}
inline void AwakenShopData::clear_goods_list() {
  goods_list_.Clear();
}
inline const ::PB::ShopGoods& AwakenShopData::goods_list(int index) const {
  return goods_list_.Get(index);
}
inline ::PB::ShopGoods* AwakenShopData::mutable_goods_list(int index) {
  return goods_list_.Mutable(index);
}
inline ::PB::ShopGoods* AwakenShopData::add_goods_list() {
  return goods_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
AwakenShopData::goods_list() const {
  return goods_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
AwakenShopData::mutable_goods_list() {
  return &goods_list_;
}

// required uint32 last_recover_time = 2;
inline bool AwakenShopData::has_last_recover_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AwakenShopData::set_has_last_recover_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AwakenShopData::clear_has_last_recover_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AwakenShopData::clear_last_recover_time() {
  last_recover_time_ = 0u;
  clear_has_last_recover_time();
}
inline ::google::protobuf::uint32 AwakenShopData::last_recover_time() const {
  return last_recover_time_;
}
inline void AwakenShopData::set_last_recover_time(::google::protobuf::uint32 value) {
  set_has_last_recover_time();
  last_recover_time_ = value;
}

// required uint32 free_refresh_times = 3;
inline bool AwakenShopData::has_free_refresh_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AwakenShopData::set_has_free_refresh_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AwakenShopData::clear_has_free_refresh_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AwakenShopData::clear_free_refresh_times() {
  free_refresh_times_ = 0u;
  clear_has_free_refresh_times();
}
inline ::google::protobuf::uint32 AwakenShopData::free_refresh_times() const {
  return free_refresh_times_;
}
inline void AwakenShopData::set_free_refresh_times(::google::protobuf::uint32 value) {
  set_has_free_refresh_times();
  free_refresh_times_ = value;
}

// required uint32 cost_refresh_times = 4;
inline bool AwakenShopData::has_cost_refresh_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AwakenShopData::set_has_cost_refresh_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AwakenShopData::clear_has_cost_refresh_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AwakenShopData::clear_cost_refresh_times() {
  cost_refresh_times_ = 0u;
  clear_has_cost_refresh_times();
}
inline ::google::protobuf::uint32 AwakenShopData::cost_refresh_times() const {
  return cost_refresh_times_;
}
inline void AwakenShopData::set_cost_refresh_times(::google::protobuf::uint32 value) {
  set_has_cost_refresh_times();
  cost_refresh_times_ = value;
}

// -------------------------------------------------------------------

// FairyShopData

// repeated .PB.ShopGoods goods_list = 1;
inline int FairyShopData::goods_list_size() const {
  return goods_list_.size();
}
inline void FairyShopData::clear_goods_list() {
  goods_list_.Clear();
}
inline const ::PB::ShopGoods& FairyShopData::goods_list(int index) const {
  return goods_list_.Get(index);
}
inline ::PB::ShopGoods* FairyShopData::mutable_goods_list(int index) {
  return goods_list_.Mutable(index);
}
inline ::PB::ShopGoods* FairyShopData::add_goods_list() {
  return goods_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
FairyShopData::goods_list() const {
  return goods_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
FairyShopData::mutable_goods_list() {
  return &goods_list_;
}

// required uint32 used_refresh_times = 2;
inline bool FairyShopData::has_used_refresh_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FairyShopData::set_has_used_refresh_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FairyShopData::clear_has_used_refresh_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FairyShopData::clear_used_refresh_times() {
  used_refresh_times_ = 0u;
  clear_has_used_refresh_times();
}
inline ::google::protobuf::uint32 FairyShopData::used_refresh_times() const {
  return used_refresh_times_;
}
inline void FairyShopData::set_used_refresh_times(::google::protobuf::uint32 value) {
  set_has_used_refresh_times();
  used_refresh_times_ = value;
}

// required uint32 last_auto_refresh_time = 3;
inline bool FairyShopData::has_last_auto_refresh_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FairyShopData::set_has_last_auto_refresh_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FairyShopData::clear_has_last_auto_refresh_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FairyShopData::clear_last_auto_refresh_time() {
  last_auto_refresh_time_ = 0u;
  clear_has_last_auto_refresh_time();
}
inline ::google::protobuf::uint32 FairyShopData::last_auto_refresh_time() const {
  return last_auto_refresh_time_;
}
inline void FairyShopData::set_last_auto_refresh_time(::google::protobuf::uint32 value) {
  set_has_last_auto_refresh_time();
  last_auto_refresh_time_ = value;
}

// -------------------------------------------------------------------

// ScoreMatchShopData

// repeated .PB.ShopGoods buy_record = 1;
inline int ScoreMatchShopData::buy_record_size() const {
  return buy_record_.size();
}
inline void ScoreMatchShopData::clear_buy_record() {
  buy_record_.Clear();
}
inline const ::PB::ShopGoods& ScoreMatchShopData::buy_record(int index) const {
  return buy_record_.Get(index);
}
inline ::PB::ShopGoods* ScoreMatchShopData::mutable_buy_record(int index) {
  return buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* ScoreMatchShopData::add_buy_record() {
  return buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
ScoreMatchShopData::buy_record() const {
  return buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
ScoreMatchShopData::mutable_buy_record() {
  return &buy_record_;
}

// -------------------------------------------------------------------

// SevenDayShopData

// repeated .PB.ShopGoods buy_record = 1;
inline int SevenDayShopData::buy_record_size() const {
  return buy_record_.size();
}
inline void SevenDayShopData::clear_buy_record() {
  buy_record_.Clear();
}
inline const ::PB::ShopGoods& SevenDayShopData::buy_record(int index) const {
  return buy_record_.Get(index);
}
inline ::PB::ShopGoods* SevenDayShopData::mutable_buy_record(int index) {
  return buy_record_.Mutable(index);
}
inline ::PB::ShopGoods* SevenDayShopData::add_buy_record() {
  return buy_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >&
SevenDayShopData::buy_record() const {
  return buy_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::ShopGoods >*
SevenDayShopData::mutable_buy_record() {
  return &buy_record_;
}

// -------------------------------------------------------------------

// RoleShopInfo

// required .PB.HeroShopData hero_shop = 1;
inline bool RoleShopInfo::has_hero_shop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleShopInfo::set_has_hero_shop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleShopInfo::clear_has_hero_shop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleShopInfo::clear_hero_shop() {
  if (hero_shop_ != NULL) hero_shop_->::PB::HeroShopData::Clear();
  clear_has_hero_shop();
}
inline const ::PB::HeroShopData& RoleShopInfo::hero_shop() const {
  return hero_shop_ != NULL ? *hero_shop_ : *default_instance_->hero_shop_;
}
inline ::PB::HeroShopData* RoleShopInfo::mutable_hero_shop() {
  set_has_hero_shop();
  if (hero_shop_ == NULL) hero_shop_ = new ::PB::HeroShopData;
  return hero_shop_;
}
inline ::PB::HeroShopData* RoleShopInfo::release_hero_shop() {
  clear_has_hero_shop();
  ::PB::HeroShopData* temp = hero_shop_;
  hero_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_hero_shop(::PB::HeroShopData* hero_shop) {
  delete hero_shop_;
  hero_shop_ = hero_shop;
  if (hero_shop) {
    set_has_hero_shop();
  } else {
    clear_has_hero_shop();
  }
}

// required .PB.GuildShopData guild_shop = 2;
inline bool RoleShopInfo::has_guild_shop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleShopInfo::set_has_guild_shop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleShopInfo::clear_has_guild_shop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleShopInfo::clear_guild_shop() {
  if (guild_shop_ != NULL) guild_shop_->::PB::GuildShopData::Clear();
  clear_has_guild_shop();
}
inline const ::PB::GuildShopData& RoleShopInfo::guild_shop() const {
  return guild_shop_ != NULL ? *guild_shop_ : *default_instance_->guild_shop_;
}
inline ::PB::GuildShopData* RoleShopInfo::mutable_guild_shop() {
  set_has_guild_shop();
  if (guild_shop_ == NULL) guild_shop_ = new ::PB::GuildShopData;
  return guild_shop_;
}
inline ::PB::GuildShopData* RoleShopInfo::release_guild_shop() {
  clear_has_guild_shop();
  ::PB::GuildShopData* temp = guild_shop_;
  guild_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_guild_shop(::PB::GuildShopData* guild_shop) {
  delete guild_shop_;
  guild_shop_ = guild_shop;
  if (guild_shop) {
    set_has_guild_shop();
  } else {
    clear_has_guild_shop();
  }
}

// required .PB.MallShopData mall_shop = 3;
inline bool RoleShopInfo::has_mall_shop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleShopInfo::set_has_mall_shop() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleShopInfo::clear_has_mall_shop() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleShopInfo::clear_mall_shop() {
  if (mall_shop_ != NULL) mall_shop_->::PB::MallShopData::Clear();
  clear_has_mall_shop();
}
inline const ::PB::MallShopData& RoleShopInfo::mall_shop() const {
  return mall_shop_ != NULL ? *mall_shop_ : *default_instance_->mall_shop_;
}
inline ::PB::MallShopData* RoleShopInfo::mutable_mall_shop() {
  set_has_mall_shop();
  if (mall_shop_ == NULL) mall_shop_ = new ::PB::MallShopData;
  return mall_shop_;
}
inline ::PB::MallShopData* RoleShopInfo::release_mall_shop() {
  clear_has_mall_shop();
  ::PB::MallShopData* temp = mall_shop_;
  mall_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_mall_shop(::PB::MallShopData* mall_shop) {
  delete mall_shop_;
  mall_shop_ = mall_shop;
  if (mall_shop) {
    set_has_mall_shop();
  } else {
    clear_has_mall_shop();
  }
}

// required .PB.TowerShopData tower_shop = 4;
inline bool RoleShopInfo::has_tower_shop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleShopInfo::set_has_tower_shop() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleShopInfo::clear_has_tower_shop() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleShopInfo::clear_tower_shop() {
  if (tower_shop_ != NULL) tower_shop_->::PB::TowerShopData::Clear();
  clear_has_tower_shop();
}
inline const ::PB::TowerShopData& RoleShopInfo::tower_shop() const {
  return tower_shop_ != NULL ? *tower_shop_ : *default_instance_->tower_shop_;
}
inline ::PB::TowerShopData* RoleShopInfo::mutable_tower_shop() {
  set_has_tower_shop();
  if (tower_shop_ == NULL) tower_shop_ = new ::PB::TowerShopData;
  return tower_shop_;
}
inline ::PB::TowerShopData* RoleShopInfo::release_tower_shop() {
  clear_has_tower_shop();
  ::PB::TowerShopData* temp = tower_shop_;
  tower_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_tower_shop(::PB::TowerShopData* tower_shop) {
  delete tower_shop_;
  tower_shop_ = tower_shop;
  if (tower_shop) {
    set_has_tower_shop();
  } else {
    clear_has_tower_shop();
  }
}

// required .PB.ArenaShopData arena_shop = 5;
inline bool RoleShopInfo::has_arena_shop() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleShopInfo::set_has_arena_shop() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleShopInfo::clear_has_arena_shop() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleShopInfo::clear_arena_shop() {
  if (arena_shop_ != NULL) arena_shop_->::PB::ArenaShopData::Clear();
  clear_has_arena_shop();
}
inline const ::PB::ArenaShopData& RoleShopInfo::arena_shop() const {
  return arena_shop_ != NULL ? *arena_shop_ : *default_instance_->arena_shop_;
}
inline ::PB::ArenaShopData* RoleShopInfo::mutable_arena_shop() {
  set_has_arena_shop();
  if (arena_shop_ == NULL) arena_shop_ = new ::PB::ArenaShopData;
  return arena_shop_;
}
inline ::PB::ArenaShopData* RoleShopInfo::release_arena_shop() {
  clear_has_arena_shop();
  ::PB::ArenaShopData* temp = arena_shop_;
  arena_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_arena_shop(::PB::ArenaShopData* arena_shop) {
  delete arena_shop_;
  arena_shop_ = arena_shop;
  if (arena_shop) {
    set_has_arena_shop();
  } else {
    clear_has_arena_shop();
  }
}

// required .PB.AwakenShopData awaken_shop = 6;
inline bool RoleShopInfo::has_awaken_shop() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleShopInfo::set_has_awaken_shop() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleShopInfo::clear_has_awaken_shop() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleShopInfo::clear_awaken_shop() {
  if (awaken_shop_ != NULL) awaken_shop_->::PB::AwakenShopData::Clear();
  clear_has_awaken_shop();
}
inline const ::PB::AwakenShopData& RoleShopInfo::awaken_shop() const {
  return awaken_shop_ != NULL ? *awaken_shop_ : *default_instance_->awaken_shop_;
}
inline ::PB::AwakenShopData* RoleShopInfo::mutable_awaken_shop() {
  set_has_awaken_shop();
  if (awaken_shop_ == NULL) awaken_shop_ = new ::PB::AwakenShopData;
  return awaken_shop_;
}
inline ::PB::AwakenShopData* RoleShopInfo::release_awaken_shop() {
  clear_has_awaken_shop();
  ::PB::AwakenShopData* temp = awaken_shop_;
  awaken_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_awaken_shop(::PB::AwakenShopData* awaken_shop) {
  delete awaken_shop_;
  awaken_shop_ = awaken_shop;
  if (awaken_shop) {
    set_has_awaken_shop();
  } else {
    clear_has_awaken_shop();
  }
}

// required .PB.FairyShopData fairy_shop = 7;
inline bool RoleShopInfo::has_fairy_shop() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleShopInfo::set_has_fairy_shop() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleShopInfo::clear_has_fairy_shop() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleShopInfo::clear_fairy_shop() {
  if (fairy_shop_ != NULL) fairy_shop_->::PB::FairyShopData::Clear();
  clear_has_fairy_shop();
}
inline const ::PB::FairyShopData& RoleShopInfo::fairy_shop() const {
  return fairy_shop_ != NULL ? *fairy_shop_ : *default_instance_->fairy_shop_;
}
inline ::PB::FairyShopData* RoleShopInfo::mutable_fairy_shop() {
  set_has_fairy_shop();
  if (fairy_shop_ == NULL) fairy_shop_ = new ::PB::FairyShopData;
  return fairy_shop_;
}
inline ::PB::FairyShopData* RoleShopInfo::release_fairy_shop() {
  clear_has_fairy_shop();
  ::PB::FairyShopData* temp = fairy_shop_;
  fairy_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_fairy_shop(::PB::FairyShopData* fairy_shop) {
  delete fairy_shop_;
  fairy_shop_ = fairy_shop;
  if (fairy_shop) {
    set_has_fairy_shop();
  } else {
    clear_has_fairy_shop();
  }
}

// required .PB.ScoreMatchShopData score_match_shop = 8;
inline bool RoleShopInfo::has_score_match_shop() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleShopInfo::set_has_score_match_shop() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleShopInfo::clear_has_score_match_shop() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleShopInfo::clear_score_match_shop() {
  if (score_match_shop_ != NULL) score_match_shop_->::PB::ScoreMatchShopData::Clear();
  clear_has_score_match_shop();
}
inline const ::PB::ScoreMatchShopData& RoleShopInfo::score_match_shop() const {
  return score_match_shop_ != NULL ? *score_match_shop_ : *default_instance_->score_match_shop_;
}
inline ::PB::ScoreMatchShopData* RoleShopInfo::mutable_score_match_shop() {
  set_has_score_match_shop();
  if (score_match_shop_ == NULL) score_match_shop_ = new ::PB::ScoreMatchShopData;
  return score_match_shop_;
}
inline ::PB::ScoreMatchShopData* RoleShopInfo::release_score_match_shop() {
  clear_has_score_match_shop();
  ::PB::ScoreMatchShopData* temp = score_match_shop_;
  score_match_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_score_match_shop(::PB::ScoreMatchShopData* score_match_shop) {
  delete score_match_shop_;
  score_match_shop_ = score_match_shop;
  if (score_match_shop) {
    set_has_score_match_shop();
  } else {
    clear_has_score_match_shop();
  }
}

// optional .PB.SevenDayShopData seven_day_shop = 9;
inline bool RoleShopInfo::has_seven_day_shop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleShopInfo::set_has_seven_day_shop() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleShopInfo::clear_has_seven_day_shop() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleShopInfo::clear_seven_day_shop() {
  if (seven_day_shop_ != NULL) seven_day_shop_->::PB::SevenDayShopData::Clear();
  clear_has_seven_day_shop();
}
inline const ::PB::SevenDayShopData& RoleShopInfo::seven_day_shop() const {
  return seven_day_shop_ != NULL ? *seven_day_shop_ : *default_instance_->seven_day_shop_;
}
inline ::PB::SevenDayShopData* RoleShopInfo::mutable_seven_day_shop() {
  set_has_seven_day_shop();
  if (seven_day_shop_ == NULL) seven_day_shop_ = new ::PB::SevenDayShopData;
  return seven_day_shop_;
}
inline ::PB::SevenDayShopData* RoleShopInfo::release_seven_day_shop() {
  clear_has_seven_day_shop();
  ::PB::SevenDayShopData* temp = seven_day_shop_;
  seven_day_shop_ = NULL;
  return temp;
}
inline void RoleShopInfo::set_allocated_seven_day_shop(::PB::SevenDayShopData* seven_day_shop) {
  delete seven_day_shop_;
  seven_day_shop_ = seven_day_shop;
  if (seven_day_shop) {
    set_has_seven_day_shop();
  } else {
    clear_has_seven_day_shop();
  }
}

// -------------------------------------------------------------------

// RoleSpiritInfo

// required uint32 stage = 1;
inline bool RoleSpiritInfo::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleSpiritInfo::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleSpiritInfo::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleSpiritInfo::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 RoleSpiritInfo::stage() const {
  return stage_;
}
inline void RoleSpiritInfo::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
}

// required uint32 level = 2;
inline bool RoleSpiritInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleSpiritInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleSpiritInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleSpiritInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleSpiritInfo::level() const {
  return level_;
}
inline void RoleSpiritInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// FriendData

// required uint32 role_id = 1;
inline bool FriendData::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendData::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendData::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendData::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 FriendData::role_id() const {
  return role_id_;
}
inline void FriendData::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 is_give_energy = 2;
inline bool FriendData::has_is_give_energy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendData::set_has_is_give_energy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendData::clear_has_is_give_energy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendData::clear_is_give_energy() {
  is_give_energy_ = 0u;
  clear_has_is_give_energy();
}
inline ::google::protobuf::uint32 FriendData::is_give_energy() const {
  return is_give_energy_;
}
inline void FriendData::set_is_give_energy(::google::protobuf::uint32 value) {
  set_has_is_give_energy();
  is_give_energy_ = value;
}

// required uint32 get_energy_state = 3;
inline bool FriendData::has_get_energy_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendData::set_has_get_energy_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendData::clear_has_get_energy_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendData::clear_get_energy_state() {
  get_energy_state_ = 0u;
  clear_has_get_energy_state();
}
inline ::google::protobuf::uint32 FriendData::get_energy_state() const {
  return get_energy_state_;
}
inline void FriendData::set_get_energy_state(::google::protobuf::uint32 value) {
  set_has_get_energy_state();
  get_energy_state_ = value;
}

// -------------------------------------------------------------------

// RoleFriendData

// repeated .PB.FriendData friend_list = 1;
inline int RoleFriendData::friend_list_size() const {
  return friend_list_.size();
}
inline void RoleFriendData::clear_friend_list() {
  friend_list_.Clear();
}
inline const ::PB::FriendData& RoleFriendData::friend_list(int index) const {
  return friend_list_.Get(index);
}
inline ::PB::FriendData* RoleFriendData::mutable_friend_list(int index) {
  return friend_list_.Mutable(index);
}
inline ::PB::FriendData* RoleFriendData::add_friend_list() {
  return friend_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::FriendData >&
RoleFriendData::friend_list() const {
  return friend_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::FriendData >*
RoleFriendData::mutable_friend_list() {
  return &friend_list_;
}

// repeated uint32 black_list = 2;
inline int RoleFriendData::black_list_size() const {
  return black_list_.size();
}
inline void RoleFriendData::clear_black_list() {
  black_list_.Clear();
}
inline ::google::protobuf::uint32 RoleFriendData::black_list(int index) const {
  return black_list_.Get(index);
}
inline void RoleFriendData::set_black_list(int index, ::google::protobuf::uint32 value) {
  black_list_.Set(index, value);
}
inline void RoleFriendData::add_black_list(::google::protobuf::uint32 value) {
  black_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleFriendData::black_list() const {
  return black_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleFriendData::mutable_black_list() {
  return &black_list_;
}

// repeated uint32 apply_list = 3;
inline int RoleFriendData::apply_list_size() const {
  return apply_list_.size();
}
inline void RoleFriendData::clear_apply_list() {
  apply_list_.Clear();
}
inline ::google::protobuf::uint32 RoleFriendData::apply_list(int index) const {
  return apply_list_.Get(index);
}
inline void RoleFriendData::set_apply_list(int index, ::google::protobuf::uint32 value) {
  apply_list_.Set(index, value);
}
inline void RoleFriendData::add_apply_list(::google::protobuf::uint32 value) {
  apply_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleFriendData::apply_list() const {
  return apply_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleFriendData::mutable_apply_list() {
  return &apply_list_;
}

// required uint32 get_energy_times = 4;
inline bool RoleFriendData::has_get_energy_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleFriendData::set_has_get_energy_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleFriendData::clear_has_get_energy_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleFriendData::clear_get_energy_times() {
  get_energy_times_ = 0u;
  clear_has_get_energy_times();
}
inline ::google::protobuf::uint32 RoleFriendData::get_energy_times() const {
  return get_energy_times_;
}
inline void RoleFriendData::set_get_energy_times(::google::protobuf::uint32 value) {
  set_has_get_energy_times();
  get_energy_times_ = value;
}

// -------------------------------------------------------------------

// RoleRebelInfo

// required uint32 rebel_level = 1;
inline bool RoleRebelInfo::has_rebel_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleRebelInfo::set_has_rebel_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleRebelInfo::clear_has_rebel_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleRebelInfo::clear_rebel_level() {
  rebel_level_ = 0u;
  clear_has_rebel_level();
}
inline ::google::protobuf::uint32 RoleRebelInfo::rebel_level() const {
  return rebel_level_;
}
inline void RoleRebelInfo::set_rebel_level(::google::protobuf::uint32 value) {
  set_has_rebel_level();
  rebel_level_ = value;
}

// required uint32 today_exploit = 2;
inline bool RoleRebelInfo::has_today_exploit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleRebelInfo::set_has_today_exploit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleRebelInfo::clear_has_today_exploit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleRebelInfo::clear_today_exploit() {
  today_exploit_ = 0u;
  clear_has_today_exploit();
}
inline ::google::protobuf::uint32 RoleRebelInfo::today_exploit() const {
  return today_exploit_;
}
inline void RoleRebelInfo::set_today_exploit(::google::protobuf::uint32 value) {
  set_has_today_exploit();
  today_exploit_ = value;
}

// required uint32 today_damage = 3;
inline bool RoleRebelInfo::has_today_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleRebelInfo::set_has_today_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleRebelInfo::clear_has_today_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleRebelInfo::clear_today_damage() {
  today_damage_ = 0u;
  clear_has_today_damage();
}
inline ::google::protobuf::uint32 RoleRebelInfo::today_damage() const {
  return today_damage_;
}
inline void RoleRebelInfo::set_today_damage(::google::protobuf::uint32 value) {
  set_has_today_damage();
  today_damage_ = value;
}

// repeated uint32 reward_get_record_list = 4;
inline int RoleRebelInfo::reward_get_record_list_size() const {
  return reward_get_record_list_.size();
}
inline void RoleRebelInfo::clear_reward_get_record_list() {
  reward_get_record_list_.Clear();
}
inline ::google::protobuf::uint32 RoleRebelInfo::reward_get_record_list(int index) const {
  return reward_get_record_list_.Get(index);
}
inline void RoleRebelInfo::set_reward_get_record_list(int index, ::google::protobuf::uint32 value) {
  reward_get_record_list_.Set(index, value);
}
inline void RoleRebelInfo::add_reward_get_record_list(::google::protobuf::uint32 value) {
  reward_get_record_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleRebelInfo::reward_get_record_list() const {
  return reward_get_record_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleRebelInfo::mutable_reward_get_record_list() {
  return &reward_get_record_list_;
}

// required uint32 is_already_share = 5;
inline bool RoleRebelInfo::has_is_already_share() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleRebelInfo::set_has_is_already_share() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleRebelInfo::clear_has_is_already_share() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleRebelInfo::clear_is_already_share() {
  is_already_share_ = 0u;
  clear_has_is_already_share();
}
inline ::google::protobuf::uint32 RoleRebelInfo::is_already_share() const {
  return is_already_share_;
}
inline void RoleRebelInfo::set_is_already_share(::google::protobuf::uint32 value) {
  set_has_is_already_share();
  is_already_share_ = value;
}

// -------------------------------------------------------------------

// AchievementData

// required uint32 id = 1;
inline bool AchievementData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AchievementData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AchievementData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AchievementData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AchievementData::id() const {
  return id_;
}
inline void AchievementData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool AchievementData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AchievementData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AchievementData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AchievementData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AchievementData::level() const {
  return level_;
}
inline void AchievementData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 value = 3;
inline bool AchievementData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AchievementData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AchievementData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AchievementData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 AchievementData::value() const {
  return value_;
}
inline void AchievementData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// required uint32 cur_reward_level = 4;
inline bool AchievementData::has_cur_reward_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AchievementData::set_has_cur_reward_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AchievementData::clear_has_cur_reward_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AchievementData::clear_cur_reward_level() {
  cur_reward_level_ = 0u;
  clear_has_cur_reward_level();
}
inline ::google::protobuf::uint32 AchievementData::cur_reward_level() const {
  return cur_reward_level_;
}
inline void AchievementData::set_cur_reward_level(::google::protobuf::uint32 value) {
  set_has_cur_reward_level();
  cur_reward_level_ = value;
}

// -------------------------------------------------------------------

// RoleAchievemntInfo

// repeated .PB.AchievementData achievement_list = 1;
inline int RoleAchievemntInfo::achievement_list_size() const {
  return achievement_list_.size();
}
inline void RoleAchievemntInfo::clear_achievement_list() {
  achievement_list_.Clear();
}
inline const ::PB::AchievementData& RoleAchievemntInfo::achievement_list(int index) const {
  return achievement_list_.Get(index);
}
inline ::PB::AchievementData* RoleAchievemntInfo::mutable_achievement_list(int index) {
  return achievement_list_.Mutable(index);
}
inline ::PB::AchievementData* RoleAchievemntInfo::add_achievement_list() {
  return achievement_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::AchievementData >&
RoleAchievemntInfo::achievement_list() const {
  return achievement_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::AchievementData >*
RoleAchievemntInfo::mutable_achievement_list() {
  return &achievement_list_;
}

// -------------------------------------------------------------------

// DailyMission

// required uint32 id = 1;
inline bool DailyMission::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyMission::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyMission::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyMission::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DailyMission::id() const {
  return id_;
}
inline void DailyMission::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 is_get_reward = 2;
inline bool DailyMission::has_is_get_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyMission::set_has_is_get_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyMission::clear_has_is_get_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyMission::clear_is_get_reward() {
  is_get_reward_ = 0u;
  clear_has_is_get_reward();
}
inline ::google::protobuf::uint32 DailyMission::is_get_reward() const {
  return is_get_reward_;
}
inline void DailyMission::set_is_get_reward(::google::protobuf::uint32 value) {
  set_has_is_get_reward();
  is_get_reward_ = value;
}

// required uint32 value = 3;
inline bool DailyMission::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyMission::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyMission::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyMission::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 DailyMission::value() const {
  return value_;
}
inline void DailyMission::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// RoleDailyMissionInfo

// required uint32 point = 1;
inline bool RoleDailyMissionInfo::has_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleDailyMissionInfo::set_has_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleDailyMissionInfo::clear_has_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleDailyMissionInfo::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 RoleDailyMissionInfo::point() const {
  return point_;
}
inline void RoleDailyMissionInfo::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
}

// repeated uint32 point_reward_record = 2;
inline int RoleDailyMissionInfo::point_reward_record_size() const {
  return point_reward_record_.size();
}
inline void RoleDailyMissionInfo::clear_point_reward_record() {
  point_reward_record_.Clear();
}
inline ::google::protobuf::uint32 RoleDailyMissionInfo::point_reward_record(int index) const {
  return point_reward_record_.Get(index);
}
inline void RoleDailyMissionInfo::set_point_reward_record(int index, ::google::protobuf::uint32 value) {
  point_reward_record_.Set(index, value);
}
inline void RoleDailyMissionInfo::add_point_reward_record(::google::protobuf::uint32 value) {
  point_reward_record_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleDailyMissionInfo::point_reward_record() const {
  return point_reward_record_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleDailyMissionInfo::mutable_point_reward_record() {
  return &point_reward_record_;
}

// repeated .PB.DailyMission mission_list = 3;
inline int RoleDailyMissionInfo::mission_list_size() const {
  return mission_list_.size();
}
inline void RoleDailyMissionInfo::clear_mission_list() {
  mission_list_.Clear();
}
inline const ::PB::DailyMission& RoleDailyMissionInfo::mission_list(int index) const {
  return mission_list_.Get(index);
}
inline ::PB::DailyMission* RoleDailyMissionInfo::mutable_mission_list(int index) {
  return mission_list_.Mutable(index);
}
inline ::PB::DailyMission* RoleDailyMissionInfo::add_mission_list() {
  return mission_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::DailyMission >&
RoleDailyMissionInfo::mission_list() const {
  return mission_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::DailyMission >*
RoleDailyMissionInfo::mutable_mission_list() {
  return &mission_list_;
}

// -------------------------------------------------------------------

// SkillData

// required uint32 skill_id = 1;
inline bool SkillData::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillData::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillData::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillData::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 SkillData::skill_id() const {
  return skill_id_;
}
inline void SkillData::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 level = 2;
inline bool SkillData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SkillData::level() const {
  return level_;
}
inline void SkillData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// RoleGuildSkillInfo

// repeated .PB.SkillData skill_list = 1;
inline int RoleGuildSkillInfo::skill_list_size() const {
  return skill_list_.size();
}
inline void RoleGuildSkillInfo::clear_skill_list() {
  skill_list_.Clear();
}
inline const ::PB::SkillData& RoleGuildSkillInfo::skill_list(int index) const {
  return skill_list_.Get(index);
}
inline ::PB::SkillData* RoleGuildSkillInfo::mutable_skill_list(int index) {
  return skill_list_.Mutable(index);
}
inline ::PB::SkillData* RoleGuildSkillInfo::add_skill_list() {
  return skill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::SkillData >&
RoleGuildSkillInfo::skill_list() const {
  return skill_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::SkillData >*
RoleGuildSkillInfo::mutable_skill_list() {
  return &skill_list_;
}

// -------------------------------------------------------------------

// RoleSignInData

// required uint32 cur_sign_in_day = 1;
inline bool RoleSignInData::has_cur_sign_in_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleSignInData::set_has_cur_sign_in_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleSignInData::clear_has_cur_sign_in_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleSignInData::clear_cur_sign_in_day() {
  cur_sign_in_day_ = 0u;
  clear_has_cur_sign_in_day();
}
inline ::google::protobuf::uint32 RoleSignInData::cur_sign_in_day() const {
  return cur_sign_in_day_;
}
inline void RoleSignInData::set_cur_sign_in_day(::google::protobuf::uint32 value) {
  set_has_cur_sign_in_day();
  cur_sign_in_day_ = value;
}

// required uint32 last_sign_in_time = 2;
inline bool RoleSignInData::has_last_sign_in_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleSignInData::set_has_last_sign_in_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleSignInData::clear_has_last_sign_in_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleSignInData::clear_last_sign_in_time() {
  last_sign_in_time_ = 0u;
  clear_has_last_sign_in_time();
}
inline ::google::protobuf::uint32 RoleSignInData::last_sign_in_time() const {
  return last_sign_in_time_;
}
inline void RoleSignInData::set_last_sign_in_time(::google::protobuf::uint32 value) {
  set_has_last_sign_in_time();
  last_sign_in_time_ = value;
}

// -------------------------------------------------------------------

// RewardData

// optional uint32 reward_id = 1;
inline bool RewardData::has_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardData::set_has_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardData::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardData::clear_reward_id() {
  reward_id_ = 0u;
  clear_has_reward_id();
}
inline ::google::protobuf::uint32 RewardData::reward_id() const {
  return reward_id_;
}
inline void RewardData::set_reward_id(::google::protobuf::uint32 value) {
  set_has_reward_id();
  reward_id_ = value;
}

// optional uint32 reward_type = 2;
inline bool RewardData::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardData::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardData::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardData::clear_reward_type() {
  reward_type_ = 0u;
  clear_has_reward_type();
}
inline ::google::protobuf::uint32 RewardData::reward_type() const {
  return reward_type_;
}
inline void RewardData::set_reward_type(::google::protobuf::uint32 value) {
  set_has_reward_type();
  reward_type_ = value;
}

// optional uint32 value = 3;
inline bool RewardData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RewardData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RewardData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RewardData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 RewardData::value() const {
  return value_;
}
inline void RewardData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint32 value1 = 4;
inline bool RewardData::has_value1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RewardData::set_has_value1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RewardData::clear_has_value1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RewardData::clear_value1() {
  value1_ = 0u;
  clear_has_value1();
}
inline ::google::protobuf::uint32 RewardData::value1() const {
  return value1_;
}
inline void RewardData::set_value1(::google::protobuf::uint32 value) {
  set_has_value1();
  value1_ = value;
}

// optional uint32 time = 5;
inline bool RewardData::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RewardData::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RewardData::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RewardData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 RewardData::time() const {
  return time_;
}
inline void RewardData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required string text = 6;
inline bool RewardData::has_text() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RewardData::set_has_text() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RewardData::clear_has_text() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RewardData::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& RewardData::text() const {
  return *text_;
}
inline void RewardData::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void RewardData::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void RewardData::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RewardData::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* RewardData::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RewardData::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RoleRewardData

// repeated .PB.RewardData reward_list = 1;
inline int RoleRewardData::reward_list_size() const {
  return reward_list_.size();
}
inline void RoleRewardData::clear_reward_list() {
  reward_list_.Clear();
}
inline const ::PB::RewardData& RoleRewardData::reward_list(int index) const {
  return reward_list_.Get(index);
}
inline ::PB::RewardData* RoleRewardData::mutable_reward_list(int index) {
  return reward_list_.Mutable(index);
}
inline ::PB::RewardData* RoleRewardData::add_reward_list() {
  return reward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::RewardData >&
RoleRewardData::reward_list() const {
  return reward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::RewardData >*
RoleRewardData::mutable_reward_list() {
  return &reward_list_;
}

// -------------------------------------------------------------------

// YCSData

// optional uint32 today_get_times = 1;
inline bool YCSData::has_today_get_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YCSData::set_has_today_get_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YCSData::clear_has_today_get_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YCSData::clear_today_get_times() {
  today_get_times_ = 0u;
  clear_has_today_get_times();
}
inline ::google::protobuf::uint32 YCSData::today_get_times() const {
  return today_get_times_;
}
inline void YCSData::set_today_get_times(::google::protobuf::uint32 value) {
  set_has_today_get_times();
  today_get_times_ = value;
}

// optional uint32 total_get_times = 2;
inline bool YCSData::has_total_get_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YCSData::set_has_total_get_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YCSData::clear_has_total_get_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YCSData::clear_total_get_times() {
  total_get_times_ = 0u;
  clear_has_total_get_times();
}
inline ::google::protobuf::uint32 YCSData::total_get_times() const {
  return total_get_times_;
}
inline void YCSData::set_total_get_times(::google::protobuf::uint32 value) {
  set_has_total_get_times();
  total_get_times_ = value;
}

// optional uint32 total_reward_value = 3;
inline bool YCSData::has_total_reward_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YCSData::set_has_total_reward_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YCSData::clear_has_total_reward_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YCSData::clear_total_reward_value() {
  total_reward_value_ = 0u;
  clear_has_total_reward_value();
}
inline ::google::protobuf::uint32 YCSData::total_reward_value() const {
  return total_reward_value_;
}
inline void YCSData::set_total_reward_value(::google::protobuf::uint32 value) {
  set_has_total_reward_value();
  total_reward_value_ = value;
}

// optional uint32 last_get_time = 4;
inline bool YCSData::has_last_get_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YCSData::set_has_last_get_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YCSData::clear_has_last_get_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YCSData::clear_last_get_time() {
  last_get_time_ = 0u;
  clear_has_last_get_time();
}
inline ::google::protobuf::uint32 YCSData::last_get_time() const {
  return last_get_time_;
}
inline void YCSData::set_last_get_time(::google::protobuf::uint32 value) {
  set_has_last_get_time();
  last_get_time_ = value;
}

// -------------------------------------------------------------------

// TQTData

// optional uint32 last_get_time = 1;
inline bool TQTData::has_last_get_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TQTData::set_has_last_get_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TQTData::clear_has_last_get_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TQTData::clear_last_get_time() {
  last_get_time_ = 0u;
  clear_has_last_get_time();
}
inline ::google::protobuf::uint32 TQTData::last_get_time() const {
  return last_get_time_;
}
inline void TQTData::set_last_get_time(::google::protobuf::uint32 value) {
  set_has_last_get_time();
  last_get_time_ = value;
}

// -------------------------------------------------------------------

// SevenDayTargetData

// optional uint32 target_id = 1;
inline bool SevenDayTargetData::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SevenDayTargetData::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SevenDayTargetData::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SevenDayTargetData::clear_target_id() {
  target_id_ = 0u;
  clear_has_target_id();
}
inline ::google::protobuf::uint32 SevenDayTargetData::target_id() const {
  return target_id_;
}
inline void SevenDayTargetData::set_target_id(::google::protobuf::uint32 value) {
  set_has_target_id();
  target_id_ = value;
}

// optional uint32 value = 2;
inline bool SevenDayTargetData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SevenDayTargetData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SevenDayTargetData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SevenDayTargetData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 SevenDayTargetData::value() const {
  return value_;
}
inline void SevenDayTargetData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint32 is_get_reward = 3;
inline bool SevenDayTargetData::has_is_get_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SevenDayTargetData::set_has_is_get_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SevenDayTargetData::clear_has_is_get_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SevenDayTargetData::clear_is_get_reward() {
  is_get_reward_ = 0u;
  clear_has_is_get_reward();
}
inline ::google::protobuf::uint32 SevenDayTargetData::is_get_reward() const {
  return is_get_reward_;
}
inline void SevenDayTargetData::set_is_get_reward(::google::protobuf::uint32 value) {
  set_has_is_get_reward();
  is_get_reward_ = value;
}

// -------------------------------------------------------------------

// RoleActivityData

// optional .PB.TQTData tqt_data = 1;
inline bool RoleActivityData::has_tqt_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleActivityData::set_has_tqt_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleActivityData::clear_has_tqt_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleActivityData::clear_tqt_data() {
  if (tqt_data_ != NULL) tqt_data_->::PB::TQTData::Clear();
  clear_has_tqt_data();
}
inline const ::PB::TQTData& RoleActivityData::tqt_data() const {
  return tqt_data_ != NULL ? *tqt_data_ : *default_instance_->tqt_data_;
}
inline ::PB::TQTData* RoleActivityData::mutable_tqt_data() {
  set_has_tqt_data();
  if (tqt_data_ == NULL) tqt_data_ = new ::PB::TQTData;
  return tqt_data_;
}
inline ::PB::TQTData* RoleActivityData::release_tqt_data() {
  clear_has_tqt_data();
  ::PB::TQTData* temp = tqt_data_;
  tqt_data_ = NULL;
  return temp;
}
inline void RoleActivityData::set_allocated_tqt_data(::PB::TQTData* tqt_data) {
  delete tqt_data_;
  tqt_data_ = tqt_data;
  if (tqt_data) {
    set_has_tqt_data();
  } else {
    clear_has_tqt_data();
  }
}

// optional .PB.YCSData ycs_data = 2;
inline bool RoleActivityData::has_ycs_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleActivityData::set_has_ycs_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleActivityData::clear_has_ycs_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleActivityData::clear_ycs_data() {
  if (ycs_data_ != NULL) ycs_data_->::PB::YCSData::Clear();
  clear_has_ycs_data();
}
inline const ::PB::YCSData& RoleActivityData::ycs_data() const {
  return ycs_data_ != NULL ? *ycs_data_ : *default_instance_->ycs_data_;
}
inline ::PB::YCSData* RoleActivityData::mutable_ycs_data() {
  set_has_ycs_data();
  if (ycs_data_ == NULL) ycs_data_ = new ::PB::YCSData;
  return ycs_data_;
}
inline ::PB::YCSData* RoleActivityData::release_ycs_data() {
  clear_has_ycs_data();
  ::PB::YCSData* temp = ycs_data_;
  ycs_data_ = NULL;
  return temp;
}
inline void RoleActivityData::set_allocated_ycs_data(::PB::YCSData* ycs_data) {
  delete ycs_data_;
  ycs_data_ = ycs_data;
  if (ycs_data) {
    set_has_ycs_data();
  } else {
    clear_has_ycs_data();
  }
}

// repeated .PB.SevenDayTargetData seven_day_target_list = 3;
inline int RoleActivityData::seven_day_target_list_size() const {
  return seven_day_target_list_.size();
}
inline void RoleActivityData::clear_seven_day_target_list() {
  seven_day_target_list_.Clear();
}
inline const ::PB::SevenDayTargetData& RoleActivityData::seven_day_target_list(int index) const {
  return seven_day_target_list_.Get(index);
}
inline ::PB::SevenDayTargetData* RoleActivityData::mutable_seven_day_target_list(int index) {
  return seven_day_target_list_.Mutable(index);
}
inline ::PB::SevenDayTargetData* RoleActivityData::add_seven_day_target_list() {
  return seven_day_target_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB::SevenDayTargetData >&
RoleActivityData::seven_day_target_list() const {
  return seven_day_target_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB::SevenDayTargetData >*
RoleActivityData::mutable_seven_day_target_list() {
  return &seven_day_target_list_;
}

// repeated uint32 completion_reward_record_list = 4;
inline int RoleActivityData::completion_reward_record_list_size() const {
  return completion_reward_record_list_.size();
}
inline void RoleActivityData::clear_completion_reward_record_list() {
  completion_reward_record_list_.Clear();
}
inline ::google::protobuf::uint32 RoleActivityData::completion_reward_record_list(int index) const {
  return completion_reward_record_list_.Get(index);
}
inline void RoleActivityData::set_completion_reward_record_list(int index, ::google::protobuf::uint32 value) {
  completion_reward_record_list_.Set(index, value);
}
inline void RoleActivityData::add_completion_reward_record_list(::google::protobuf::uint32 value) {
  completion_reward_record_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleActivityData::completion_reward_record_list() const {
  return completion_reward_record_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleActivityData::mutable_completion_reward_record_list() {
  return &completion_reward_record_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PB

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_data_5fdefine_2eproto__INCLUDED
