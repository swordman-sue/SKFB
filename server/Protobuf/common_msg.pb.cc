// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_msg.proto

#include "stdafx.h"
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CS {

namespace {

const ::google::protobuf::Descriptor* MapPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* OtherUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OtherUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_HeartBeat_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_HeartBeat_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_HeartBeat_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_HeartBeat_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_TargetServerInvalid_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_TargetServerInvalid_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OtherUserList_G2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OtherUserList_G2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserEnterScene_C2G_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserEnterScene_C2G_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserLeaveScene_C2G_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserLeaveScene_C2G_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserLeaveScene_G2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserLeaveScene_G2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Goto_C2G_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Goto_C2G_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Goto_G2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Goto_G2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Equipment_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Equipment_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Equipment_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Equipment_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_GM_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_GM_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserBaseInfoModify_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserBaseInfoModify_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserBaseInfoModify_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserBaseInfoModify_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserInfoModify_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserInfoModify_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserInfoModify_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserInfoModify_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_DesignProduct_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_DesignProduct_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_DesignProduct_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_DesignProduct_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserProductList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserProductList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserProductList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserProductList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserProductDetail_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserProductDetail_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_UserProductDetail_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_UserProductDetail_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ServerTime_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ServerTime_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ServerTime_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ServerTime_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_GoodsRecommend_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_GoodsRecommend_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_GoodsRecommend_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_GoodsRecommend_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_GoodsSearch_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_GoodsSearch_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_GoodsSearch_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_GoodsSearch_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Chat_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Chat_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Chat_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Chat_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Chat_Notify_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Chat_Notify_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CreateOrder_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CreateOrder_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CreateOrder_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CreateOrder_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_AddItemToShoppingCart_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_AddItemToShoppingCart_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_AddItemToShoppingCart_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_AddItemToShoppingCart_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ShoppingCartItemList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ShoppingCartItemList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ShoppingCartItemList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ShoppingCartItemList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Feedback_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Feedback_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Feedback_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Feedback_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_DesignerApply_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_DesignerApply_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_DesignerApply_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_DesignerApply_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ProductSketchUpload_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ProductSketchUpload_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ProductSketchUpload_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ProductSketchUpload_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_PointSourceList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_PointSourceList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_PointSourceList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_PointSourceList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_WithdrawMoney_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_WithdrawMoney_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_WithdrawMoney_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_WithdrawMoney_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_MyOriginalProductList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_MyOriginalProductList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_MyOriginalProductList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_MyOriginalProductList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_BindBankAccount_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_BindBankAccount_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_BindBankAccount_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_BindBankAccount_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_BindBankAccountList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_BindBankAccountList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_BindBankAccountList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_BindBankAccountList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductProfitList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductProfitList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetailList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductProfitDetailList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetailList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductProfitDetailList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetail_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductProfitDetail_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetail_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductProfitDetail_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductDetail_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductDetail_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductDetail_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductDetail_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductModify_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductModify_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_OriginalProductModify_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_OriginalProductModify_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ProfitList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ProfitList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ProfitList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ProfitList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Gold2Money_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Gold2Money_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_Gold2Money_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_Gold2Money_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CouponList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CouponList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CouponList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CouponList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_GlodPercent_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_GlodPercent_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_GlodPercent_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_GlodPercent_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_TradeDetailList_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_TradeDetailList_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_TradeDetailList_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_TradeDetailList_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_PrePayOrderCreate_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_PrePayOrderCreate_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_PrePayOrderCreate_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_PrePayOrderCreate_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ProductSpace_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ProductSpace_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_ProductSpace_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_ProductSpace_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Order_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Order_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderGoods_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderGoods_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderReceiver_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderReceiver_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderInvoice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderInvoice_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* query_all_order_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  query_all_order_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* query_all_order_res_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  query_all_order_res_reflection_ = NULL;
const ::google::protobuf::Descriptor* query_con_order_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  query_con_order_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* query_con_order_res_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  query_con_order_res_reflection_ = NULL;
const ::google::protobuf::Descriptor* query_single_order_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  query_single_order_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* query_single_order_res_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  query_single_order_res_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CooperationProductSpace_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CooperationProductSpace_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CooperationProductSpace_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CooperationProductSpace_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* PayReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PayReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PayResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PayResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateOrderReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateOrderReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateOrderReq_PayType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Goods_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Goods_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoodsPart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsPart_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateOrderRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateOrderRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoodsProductStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsProductStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoodsProductStatusRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsProductStatusRes_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GoodsProductStatusRes_ProductStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ChooseOrderPayWayReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChooseOrderPayWayReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ChooseOrderPayWayReq_PayType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ChooseOrderPayWayRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChooseOrderPayWayRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteOrderReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteOrderReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteOrderRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteOrderRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* CancelOrderReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CancelOrderReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CancelOrderRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CancelOrderRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfirmGrOrderReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfirmGrOrderReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfirmGrOrderRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfirmGrOrderRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* JudgeOrderReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JudgeOrderReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* JudgeOrderRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JudgeOrderRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* GoodsJudge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoodsJudge_reflection_ = NULL;
const ::google::protobuf::Descriptor* DelayOrderReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DelayOrderReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DelayOrderRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DelayOrderRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OwnOpusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OwnOpusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpusBo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpusBo_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpusCoopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpusCoopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PublishOpusCoopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PublishOpusCoopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddOpusCoopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddOpusCoopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpusCoopBo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpusCoopBo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaySyncResultReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaySyncResultReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaySyncResultResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaySyncResultResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserReceiver_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserReceiver_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryUserReceiverReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryUserReceiverReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryUserReceiverRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryUserReceiverRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* createUserReceiverReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  createUserReceiverReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* createUserReceiverRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  createUserReceiverRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* updateUserReceiverReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  updateUserReceiverReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* updateUserReceiverRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  updateUserReceiverRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* createDefaultUserReceiverReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  createDefaultUserReceiverReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* createDefaultUserReceiverRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  createDefaultUserReceiverRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* deleteUserReceiverReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  deleteUserReceiverReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* deleteUserReceiverRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  deleteUserReceiverRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Area_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Area_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryAreaFirstReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryAreaFirstReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryAreaFirstResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryAreaFirstResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryAreaSecondReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryAreaSecondReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryAreaSecondResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryAreaSecondResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryAreaThreeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryAreaThreeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* queryAreaThreeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  queryAreaThreeResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* OrderCmdResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ReceiverCmdResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AreaResult_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_5fmsg_2eproto() {
  protobuf_AddDesc_common_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common_msg.proto");
  GOOGLE_CHECK(file != NULL);
  MapPos_descriptor_ = file->message_type(0);
  static const int MapPos_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapPos, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapPos, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapPos, z_),
  };
  MapPos_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MapPos_descriptor_,
      MapPos::default_instance_,
      MapPos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapPos, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapPos, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MapPos));
  OtherUserInfo_descriptor_ = file->message_type(1);
  static const int OtherUserInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUserInfo, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUserInfo, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUserInfo, cur_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUserInfo, equipment_list_),
  };
  OtherUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OtherUserInfo_descriptor_,
      OtherUserInfo::default_instance_,
      OtherUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OtherUserInfo));
  Msg_HeartBeat_C2S_descriptor_ = file->message_type(2);
  static const int Msg_HeartBeat_C2S_offsets_[1] = {
  };
  Msg_HeartBeat_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_HeartBeat_C2S_descriptor_,
      Msg_HeartBeat_C2S::default_instance_,
      Msg_HeartBeat_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_HeartBeat_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_HeartBeat_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_HeartBeat_C2S));
  Msg_HeartBeat_S2C_descriptor_ = file->message_type(3);
  static const int Msg_HeartBeat_S2C_offsets_[1] = {
  };
  Msg_HeartBeat_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_HeartBeat_S2C_descriptor_,
      Msg_HeartBeat_S2C::default_instance_,
      Msg_HeartBeat_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_HeartBeat_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_HeartBeat_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_HeartBeat_S2C));
  Msg_TargetServerInvalid_S2C_descriptor_ = file->message_type(4);
  static const int Msg_TargetServerInvalid_S2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TargetServerInvalid_S2C, url_desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TargetServerInvalid_S2C, url_),
  };
  Msg_TargetServerInvalid_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_TargetServerInvalid_S2C_descriptor_,
      Msg_TargetServerInvalid_S2C::default_instance_,
      Msg_TargetServerInvalid_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TargetServerInvalid_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TargetServerInvalid_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_TargetServerInvalid_S2C));
  Msg_OtherUserList_G2C_descriptor_ = file->message_type(5);
  static const int Msg_OtherUserList_G2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OtherUserList_G2C, user_list_),
  };
  Msg_OtherUserList_G2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OtherUserList_G2C_descriptor_,
      Msg_OtherUserList_G2C::default_instance_,
      Msg_OtherUserList_G2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OtherUserList_G2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OtherUserList_G2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OtherUserList_G2C));
  Msg_UserEnterScene_C2G_descriptor_ = file->message_type(6);
  static const int Msg_UserEnterScene_C2G_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserEnterScene_C2G, user_id_),
  };
  Msg_UserEnterScene_C2G_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserEnterScene_C2G_descriptor_,
      Msg_UserEnterScene_C2G::default_instance_,
      Msg_UserEnterScene_C2G_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserEnterScene_C2G, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserEnterScene_C2G, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserEnterScene_C2G));
  Msg_UserLeaveScene_C2G_descriptor_ = file->message_type(7);
  static const int Msg_UserLeaveScene_C2G_offsets_[1] = {
  };
  Msg_UserLeaveScene_C2G_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserLeaveScene_C2G_descriptor_,
      Msg_UserLeaveScene_C2G::default_instance_,
      Msg_UserLeaveScene_C2G_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserLeaveScene_C2G, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserLeaveScene_C2G, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserLeaveScene_C2G));
  Msg_UserLeaveScene_G2C_descriptor_ = file->message_type(8);
  static const int Msg_UserLeaveScene_G2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserLeaveScene_G2C, user_id_),
  };
  Msg_UserLeaveScene_G2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserLeaveScene_G2C_descriptor_,
      Msg_UserLeaveScene_G2C::default_instance_,
      Msg_UserLeaveScene_G2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserLeaveScene_G2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserLeaveScene_G2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserLeaveScene_G2C));
  Msg_Goto_C2G_descriptor_ = file->message_type(9);
  static const int Msg_Goto_C2G_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_C2G, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_C2G, to_),
  };
  Msg_Goto_C2G_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Goto_C2G_descriptor_,
      Msg_Goto_C2G::default_instance_,
      Msg_Goto_C2G_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_C2G, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_C2G, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Goto_C2G));
  Msg_Goto_G2C_descriptor_ = file->message_type(10);
  static const int Msg_Goto_G2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_G2C, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_G2C, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_G2C, to_),
  };
  Msg_Goto_G2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Goto_G2C_descriptor_,
      Msg_Goto_G2C::default_instance_,
      Msg_Goto_G2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_G2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Goto_G2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Goto_G2C));
  Msg_Equipment_C2S_descriptor_ = file->message_type(11);
  static const int Msg_Equipment_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Equipment_C2S, equipment_list_),
  };
  Msg_Equipment_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Equipment_C2S_descriptor_,
      Msg_Equipment_C2S::default_instance_,
      Msg_Equipment_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Equipment_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Equipment_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Equipment_C2S));
  Msg_Equipment_S2C_descriptor_ = file->message_type(12);
  static const int Msg_Equipment_S2C_offsets_[1] = {
  };
  Msg_Equipment_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Equipment_S2C_descriptor_,
      Msg_Equipment_S2C::default_instance_,
      Msg_Equipment_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Equipment_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Equipment_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Equipment_S2C));
  Msg_GM_C2S_descriptor_ = file->message_type(13);
  static const int Msg_GM_C2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GM_C2S, gm_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GM_C2S, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GM_C2S, param2_),
  };
  Msg_GM_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_GM_C2S_descriptor_,
      Msg_GM_C2S::default_instance_,
      Msg_GM_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GM_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GM_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_GM_C2S));
  Msg_UserBaseInfoModify_C2S_descriptor_ = file->message_type(14);
  static const int Msg_UserBaseInfoModify_C2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_C2S, head_img_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_C2S, nick_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_C2S, sign_),
  };
  Msg_UserBaseInfoModify_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserBaseInfoModify_C2S_descriptor_,
      Msg_UserBaseInfoModify_C2S::default_instance_,
      Msg_UserBaseInfoModify_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserBaseInfoModify_C2S));
  Msg_UserBaseInfoModify_S2C_descriptor_ = file->message_type(15);
  static const int Msg_UserBaseInfoModify_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_S2C, error_code_),
  };
  Msg_UserBaseInfoModify_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserBaseInfoModify_S2C_descriptor_,
      Msg_UserBaseInfoModify_S2C::default_instance_,
      Msg_UserBaseInfoModify_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserBaseInfoModify_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserBaseInfoModify_S2C));
  Msg_UserInfoModify_C2S_descriptor_ = file->message_type(16);
  static const int Msg_UserInfoModify_C2S_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, hobby_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, skin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, date_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, brand_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, dressed_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, head_img_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, zodiac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, nick_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, sign_),
  };
  Msg_UserInfoModify_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserInfoModify_C2S_descriptor_,
      Msg_UserInfoModify_C2S::default_instance_,
      Msg_UserInfoModify_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserInfoModify_C2S));
  Msg_UserInfoModify_S2C_descriptor_ = file->message_type(17);
  static const int Msg_UserInfoModify_S2C_offsets_[1] = {
  };
  Msg_UserInfoModify_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserInfoModify_S2C_descriptor_,
      Msg_UserInfoModify_S2C::default_instance_,
      Msg_UserInfoModify_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserInfoModify_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserInfoModify_S2C));
  Msg_DesignProduct_C2S_descriptor_ = file->message_type(18);
  static const int Msg_DesignProduct_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignProduct_C2S, product_),
  };
  Msg_DesignProduct_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_DesignProduct_C2S_descriptor_,
      Msg_DesignProduct_C2S::default_instance_,
      Msg_DesignProduct_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignProduct_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignProduct_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_DesignProduct_C2S));
  Msg_DesignProduct_S2C_descriptor_ = file->message_type(19);
  static const int Msg_DesignProduct_S2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignProduct_S2C, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignProduct_S2C, error_code_),
  };
  Msg_DesignProduct_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_DesignProduct_S2C_descriptor_,
      Msg_DesignProduct_S2C::default_instance_,
      Msg_DesignProduct_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignProduct_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignProduct_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_DesignProduct_S2C));
  Msg_UserProductList_C2S_descriptor_ = file->message_type(20);
  static const int Msg_UserProductList_C2S_offsets_[1] = {
  };
  Msg_UserProductList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserProductList_C2S_descriptor_,
      Msg_UserProductList_C2S::default_instance_,
      Msg_UserProductList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserProductList_C2S));
  Msg_UserProductList_S2C_descriptor_ = file->message_type(21);
  static const int Msg_UserProductList_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductList_S2C, product_list_),
  };
  Msg_UserProductList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserProductList_S2C_descriptor_,
      Msg_UserProductList_S2C::default_instance_,
      Msg_UserProductList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserProductList_S2C));
  Msg_UserProductDetail_C2S_descriptor_ = file->message_type(22);
  static const int Msg_UserProductDetail_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductDetail_C2S, id_),
  };
  Msg_UserProductDetail_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserProductDetail_C2S_descriptor_,
      Msg_UserProductDetail_C2S::default_instance_,
      Msg_UserProductDetail_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductDetail_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductDetail_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserProductDetail_C2S));
  Msg_UserProductDetail_S2C_descriptor_ = file->message_type(23);
  static const int Msg_UserProductDetail_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductDetail_S2C, detail_),
  };
  Msg_UserProductDetail_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_UserProductDetail_S2C_descriptor_,
      Msg_UserProductDetail_S2C::default_instance_,
      Msg_UserProductDetail_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductDetail_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_UserProductDetail_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_UserProductDetail_S2C));
  Msg_ServerTime_C2S_descriptor_ = file->message_type(24);
  static const int Msg_ServerTime_C2S_offsets_[1] = {
  };
  Msg_ServerTime_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ServerTime_C2S_descriptor_,
      Msg_ServerTime_C2S::default_instance_,
      Msg_ServerTime_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ServerTime_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ServerTime_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ServerTime_C2S));
  Msg_ServerTime_S2C_descriptor_ = file->message_type(25);
  static const int Msg_ServerTime_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ServerTime_S2C, server_time_),
  };
  Msg_ServerTime_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ServerTime_S2C_descriptor_,
      Msg_ServerTime_S2C::default_instance_,
      Msg_ServerTime_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ServerTime_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ServerTime_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ServerTime_S2C));
  Msg_GoodsRecommend_C2S_descriptor_ = file->message_type(26);
  static const int Msg_GoodsRecommend_C2S_offsets_[1] = {
  };
  Msg_GoodsRecommend_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_GoodsRecommend_C2S_descriptor_,
      Msg_GoodsRecommend_C2S::default_instance_,
      Msg_GoodsRecommend_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsRecommend_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsRecommend_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_GoodsRecommend_C2S));
  Msg_GoodsRecommend_S2C_descriptor_ = file->message_type(27);
  static const int Msg_GoodsRecommend_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsRecommend_S2C, goods_list_),
  };
  Msg_GoodsRecommend_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_GoodsRecommend_S2C_descriptor_,
      Msg_GoodsRecommend_S2C::default_instance_,
      Msg_GoodsRecommend_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsRecommend_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsRecommend_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_GoodsRecommend_S2C));
  Msg_GoodsSearch_C2S_descriptor_ = file->message_type(28);
  static const int Msg_GoodsSearch_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsSearch_C2S, type_),
  };
  Msg_GoodsSearch_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_GoodsSearch_C2S_descriptor_,
      Msg_GoodsSearch_C2S::default_instance_,
      Msg_GoodsSearch_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsSearch_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsSearch_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_GoodsSearch_C2S));
  Msg_GoodsSearch_S2C_descriptor_ = file->message_type(29);
  static const int Msg_GoodsSearch_S2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsSearch_S2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsSearch_S2C, goods_list_),
  };
  Msg_GoodsSearch_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_GoodsSearch_S2C_descriptor_,
      Msg_GoodsSearch_S2C::default_instance_,
      Msg_GoodsSearch_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsSearch_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GoodsSearch_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_GoodsSearch_S2C));
  Msg_Chat_C2S_descriptor_ = file->message_type(30);
  static const int Msg_Chat_C2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_C2S, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_C2S, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_C2S, target_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_C2S, text_),
  };
  Msg_Chat_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Chat_C2S_descriptor_,
      Msg_Chat_C2S::default_instance_,
      Msg_Chat_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Chat_C2S));
  Msg_Chat_S2C_descriptor_ = file->message_type(31);
  static const int Msg_Chat_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_S2C, error_code_),
  };
  Msg_Chat_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Chat_S2C_descriptor_,
      Msg_Chat_S2C::default_instance_,
      Msg_Chat_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Chat_S2C));
  Msg_Chat_Notify_S2C_descriptor_ = file->message_type(32);
  static const int Msg_Chat_Notify_S2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, sender_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, sender_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, target_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, text_),
  };
  Msg_Chat_Notify_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Chat_Notify_S2C_descriptor_,
      Msg_Chat_Notify_S2C::default_instance_,
      Msg_Chat_Notify_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Chat_Notify_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Chat_Notify_S2C));
  Msg_CreateOrder_C2S_descriptor_ = file->message_type(33);
  static const int Msg_CreateOrder_C2S_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, adress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, is_invoice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, invoice_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, tephone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, receive_name_),
  };
  Msg_CreateOrder_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_CreateOrder_C2S_descriptor_,
      Msg_CreateOrder_C2S::default_instance_,
      Msg_CreateOrder_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_CreateOrder_C2S));
  Msg_CreateOrder_S2C_descriptor_ = file->message_type(34);
  static const int Msg_CreateOrder_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_S2C, error_code_),
  };
  Msg_CreateOrder_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_CreateOrder_S2C_descriptor_,
      Msg_CreateOrder_S2C::default_instance_,
      Msg_CreateOrder_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateOrder_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_CreateOrder_S2C));
  Msg_AddItemToShoppingCart_C2S_descriptor_ = file->message_type(35);
  static const int Msg_AddItemToShoppingCart_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_AddItemToShoppingCart_C2S, itme_id_),
  };
  Msg_AddItemToShoppingCart_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_AddItemToShoppingCart_C2S_descriptor_,
      Msg_AddItemToShoppingCart_C2S::default_instance_,
      Msg_AddItemToShoppingCart_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_AddItemToShoppingCart_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_AddItemToShoppingCart_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_AddItemToShoppingCart_C2S));
  Msg_AddItemToShoppingCart_S2C_descriptor_ = file->message_type(36);
  static const int Msg_AddItemToShoppingCart_S2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_AddItemToShoppingCart_S2C, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_AddItemToShoppingCart_S2C, itme_id_),
  };
  Msg_AddItemToShoppingCart_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_AddItemToShoppingCart_S2C_descriptor_,
      Msg_AddItemToShoppingCart_S2C::default_instance_,
      Msg_AddItemToShoppingCart_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_AddItemToShoppingCart_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_AddItemToShoppingCart_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_AddItemToShoppingCart_S2C));
  Msg_ShoppingCartItemList_C2S_descriptor_ = file->message_type(37);
  static const int Msg_ShoppingCartItemList_C2S_offsets_[1] = {
  };
  Msg_ShoppingCartItemList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ShoppingCartItemList_C2S_descriptor_,
      Msg_ShoppingCartItemList_C2S::default_instance_,
      Msg_ShoppingCartItemList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ShoppingCartItemList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ShoppingCartItemList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ShoppingCartItemList_C2S));
  Msg_ShoppingCartItemList_S2C_descriptor_ = file->message_type(38);
  static const int Msg_ShoppingCartItemList_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ShoppingCartItemList_S2C, item_list_),
  };
  Msg_ShoppingCartItemList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ShoppingCartItemList_S2C_descriptor_,
      Msg_ShoppingCartItemList_S2C::default_instance_,
      Msg_ShoppingCartItemList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ShoppingCartItemList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ShoppingCartItemList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ShoppingCartItemList_S2C));
  Msg_Feedback_C2S_descriptor_ = file->message_type(39);
  static const int Msg_Feedback_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Feedback_C2S, desc_),
  };
  Msg_Feedback_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Feedback_C2S_descriptor_,
      Msg_Feedback_C2S::default_instance_,
      Msg_Feedback_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Feedback_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Feedback_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Feedback_C2S));
  Msg_Feedback_S2C_descriptor_ = file->message_type(40);
  static const int Msg_Feedback_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Feedback_S2C, error_code_),
  };
  Msg_Feedback_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Feedback_S2C_descriptor_,
      Msg_Feedback_S2C::default_instance_,
      Msg_Feedback_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Feedback_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Feedback_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Feedback_S2C));
  Msg_DesignerApply_C2S_descriptor_ = file->message_type(41);
  static const int Msg_DesignerApply_C2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_C2S, designer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_C2S, exp_desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_C2S, certificate_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_C2S, sketch_info_),
  };
  Msg_DesignerApply_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_DesignerApply_C2S_descriptor_,
      Msg_DesignerApply_C2S::default_instance_,
      Msg_DesignerApply_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_DesignerApply_C2S));
  Msg_DesignerApply_S2C_descriptor_ = file->message_type(42);
  static const int Msg_DesignerApply_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_S2C, error_code_),
  };
  Msg_DesignerApply_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_DesignerApply_S2C_descriptor_,
      Msg_DesignerApply_S2C::default_instance_,
      Msg_DesignerApply_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DesignerApply_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_DesignerApply_S2C));
  Msg_ProductSketchUpload_C2S_descriptor_ = file->message_type(43);
  static const int Msg_ProductSketchUpload_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSketchUpload_C2S, sketch_info_),
  };
  Msg_ProductSketchUpload_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ProductSketchUpload_C2S_descriptor_,
      Msg_ProductSketchUpload_C2S::default_instance_,
      Msg_ProductSketchUpload_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSketchUpload_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSketchUpload_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ProductSketchUpload_C2S));
  Msg_ProductSketchUpload_S2C_descriptor_ = file->message_type(44);
  static const int Msg_ProductSketchUpload_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSketchUpload_S2C, error_code_),
  };
  Msg_ProductSketchUpload_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ProductSketchUpload_S2C_descriptor_,
      Msg_ProductSketchUpload_S2C::default_instance_,
      Msg_ProductSketchUpload_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSketchUpload_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSketchUpload_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ProductSketchUpload_S2C));
  Msg_PointSourceList_C2S_descriptor_ = file->message_type(45);
  static const int Msg_PointSourceList_C2S_offsets_[1] = {
  };
  Msg_PointSourceList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_PointSourceList_C2S_descriptor_,
      Msg_PointSourceList_C2S::default_instance_,
      Msg_PointSourceList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PointSourceList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PointSourceList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_PointSourceList_C2S));
  Msg_PointSourceList_S2C_descriptor_ = file->message_type(46);
  static const int Msg_PointSourceList_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PointSourceList_S2C, point_list_),
  };
  Msg_PointSourceList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_PointSourceList_S2C_descriptor_,
      Msg_PointSourceList_S2C::default_instance_,
      Msg_PointSourceList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PointSourceList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PointSourceList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_PointSourceList_S2C));
  Msg_WithdrawMoney_C2S_descriptor_ = file->message_type(47);
  static const int Msg_WithdrawMoney_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_WithdrawMoney_C2S, money_),
  };
  Msg_WithdrawMoney_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_WithdrawMoney_C2S_descriptor_,
      Msg_WithdrawMoney_C2S::default_instance_,
      Msg_WithdrawMoney_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_WithdrawMoney_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_WithdrawMoney_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_WithdrawMoney_C2S));
  Msg_WithdrawMoney_S2C_descriptor_ = file->message_type(48);
  static const int Msg_WithdrawMoney_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_WithdrawMoney_S2C, error_code_),
  };
  Msg_WithdrawMoney_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_WithdrawMoney_S2C_descriptor_,
      Msg_WithdrawMoney_S2C::default_instance_,
      Msg_WithdrawMoney_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_WithdrawMoney_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_WithdrawMoney_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_WithdrawMoney_S2C));
  Msg_MyOriginalProductList_C2S_descriptor_ = file->message_type(49);
  static const int Msg_MyOriginalProductList_C2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_C2S, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_C2S, index_),
  };
  Msg_MyOriginalProductList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_MyOriginalProductList_C2S_descriptor_,
      Msg_MyOriginalProductList_C2S::default_instance_,
      Msg_MyOriginalProductList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_MyOriginalProductList_C2S));
  Msg_MyOriginalProductList_S2C_descriptor_ = file->message_type(50);
  static const int Msg_MyOriginalProductList_S2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_S2C, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_S2C, cur_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_S2C, total_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_S2C, product_list_),
  };
  Msg_MyOriginalProductList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_MyOriginalProductList_S2C_descriptor_,
      Msg_MyOriginalProductList_S2C::default_instance_,
      Msg_MyOriginalProductList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_MyOriginalProductList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_MyOriginalProductList_S2C));
  Msg_BindBankAccount_C2S_descriptor_ = file->message_type(51);
  static const int Msg_BindBankAccount_C2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccount_C2S, account_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccount_C2S, card_number_),
  };
  Msg_BindBankAccount_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_BindBankAccount_C2S_descriptor_,
      Msg_BindBankAccount_C2S::default_instance_,
      Msg_BindBankAccount_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccount_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccount_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_BindBankAccount_C2S));
  Msg_BindBankAccount_S2C_descriptor_ = file->message_type(52);
  static const int Msg_BindBankAccount_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccount_S2C, error_code_),
  };
  Msg_BindBankAccount_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_BindBankAccount_S2C_descriptor_,
      Msg_BindBankAccount_S2C::default_instance_,
      Msg_BindBankAccount_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccount_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccount_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_BindBankAccount_S2C));
  Msg_BindBankAccountList_C2S_descriptor_ = file->message_type(53);
  static const int Msg_BindBankAccountList_C2S_offsets_[1] = {
  };
  Msg_BindBankAccountList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_BindBankAccountList_C2S_descriptor_,
      Msg_BindBankAccountList_C2S::default_instance_,
      Msg_BindBankAccountList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccountList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccountList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_BindBankAccountList_C2S));
  Msg_BindBankAccountList_S2C_descriptor_ = file->message_type(54);
  static const int Msg_BindBankAccountList_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccountList_S2C, bank_list_),
  };
  Msg_BindBankAccountList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_BindBankAccountList_S2C_descriptor_,
      Msg_BindBankAccountList_S2C::default_instance_,
      Msg_BindBankAccountList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccountList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BindBankAccountList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_BindBankAccountList_S2C));
  Msg_OriginalProductProfitList_C2S_descriptor_ = file->message_type(55);
  static const int Msg_OriginalProductProfitList_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_C2S, index_),
  };
  Msg_OriginalProductProfitList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductProfitList_C2S_descriptor_,
      Msg_OriginalProductProfitList_C2S::default_instance_,
      Msg_OriginalProductProfitList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductProfitList_C2S));
  Msg_OriginalProductProfitList_S2C_descriptor_ = file->message_type(56);
  static const int Msg_OriginalProductProfitList_S2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_S2C, total_profit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_S2C, total_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_S2C, cur_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_S2C, total_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_S2C, profit_list_),
  };
  Msg_OriginalProductProfitList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductProfitList_S2C_descriptor_,
      Msg_OriginalProductProfitList_S2C::default_instance_,
      Msg_OriginalProductProfitList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductProfitList_S2C));
  Msg_OriginalProductProfitDetailList_C2S_descriptor_ = file->message_type(57);
  static const int Msg_OriginalProductProfitDetailList_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_C2S, index_),
  };
  Msg_OriginalProductProfitDetailList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductProfitDetailList_C2S_descriptor_,
      Msg_OriginalProductProfitDetailList_C2S::default_instance_,
      Msg_OriginalProductProfitDetailList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductProfitDetailList_C2S));
  Msg_OriginalProductProfitDetailList_S2C_descriptor_ = file->message_type(58);
  static const int Msg_OriginalProductProfitDetailList_S2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_S2C, total_profit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_S2C, cur_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_S2C, total_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_S2C, profit_list_),
  };
  Msg_OriginalProductProfitDetailList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductProfitDetailList_S2C_descriptor_,
      Msg_OriginalProductProfitDetailList_S2C::default_instance_,
      Msg_OriginalProductProfitDetailList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetailList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductProfitDetailList_S2C));
  Msg_OriginalProductProfitDetail_C2S_descriptor_ = file->message_type(59);
  static const int Msg_OriginalProductProfitDetail_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_C2S, id_),
  };
  Msg_OriginalProductProfitDetail_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductProfitDetail_C2S_descriptor_,
      Msg_OriginalProductProfitDetail_C2S::default_instance_,
      Msg_OriginalProductProfitDetail_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductProfitDetail_C2S));
  Msg_OriginalProductProfitDetail_S2C_descriptor_ = file->message_type(60);
  static const int Msg_OriginalProductProfitDetail_S2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_S2C, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_S2C, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_S2C, total_profit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_S2C, total_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_S2C, profit_base_list_),
  };
  Msg_OriginalProductProfitDetail_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductProfitDetail_S2C_descriptor_,
      Msg_OriginalProductProfitDetail_S2C::default_instance_,
      Msg_OriginalProductProfitDetail_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductProfitDetail_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductProfitDetail_S2C));
  Msg_OriginalProductDetail_C2S_descriptor_ = file->message_type(61);
  static const int Msg_OriginalProductDetail_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductDetail_C2S, id_),
  };
  Msg_OriginalProductDetail_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductDetail_C2S_descriptor_,
      Msg_OriginalProductDetail_C2S::default_instance_,
      Msg_OriginalProductDetail_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductDetail_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductDetail_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductDetail_C2S));
  Msg_OriginalProductDetail_S2C_descriptor_ = file->message_type(62);
  static const int Msg_OriginalProductDetail_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductDetail_S2C, product_detail_),
  };
  Msg_OriginalProductDetail_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductDetail_S2C_descriptor_,
      Msg_OriginalProductDetail_S2C::default_instance_,
      Msg_OriginalProductDetail_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductDetail_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductDetail_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductDetail_S2C));
  Msg_OriginalProductModify_C2S_descriptor_ = file->message_type(63);
  static const int Msg_OriginalProductModify_C2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_C2S, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_C2S, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_C2S, product_),
  };
  Msg_OriginalProductModify_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductModify_C2S_descriptor_,
      Msg_OriginalProductModify_C2S::default_instance_,
      Msg_OriginalProductModify_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductModify_C2S));
  Msg_OriginalProductModify_S2C_descriptor_ = file->message_type(64);
  static const int Msg_OriginalProductModify_S2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_S2C, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_S2C, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_S2C, id_),
  };
  Msg_OriginalProductModify_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_OriginalProductModify_S2C_descriptor_,
      Msg_OriginalProductModify_S2C::default_instance_,
      Msg_OriginalProductModify_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_OriginalProductModify_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_OriginalProductModify_S2C));
  Msg_ProfitList_C2S_descriptor_ = file->message_type(65);
  static const int Msg_ProfitList_C2S_offsets_[1] = {
  };
  Msg_ProfitList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ProfitList_C2S_descriptor_,
      Msg_ProfitList_C2S::default_instance_,
      Msg_ProfitList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ProfitList_C2S));
  Msg_ProfitList_S2C_descriptor_ = file->message_type(66);
  static const int Msg_ProfitList_S2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_S2C, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_S2C, total_profit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_S2C, total_withdraw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_S2C, profit_list_),
  };
  Msg_ProfitList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ProfitList_S2C_descriptor_,
      Msg_ProfitList_S2C::default_instance_,
      Msg_ProfitList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProfitList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ProfitList_S2C));
  Msg_Gold2Money_C2S_descriptor_ = file->message_type(67);
  static const int Msg_Gold2Money_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Gold2Money_C2S, gold_),
  };
  Msg_Gold2Money_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Gold2Money_C2S_descriptor_,
      Msg_Gold2Money_C2S::default_instance_,
      Msg_Gold2Money_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Gold2Money_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Gold2Money_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Gold2Money_C2S));
  Msg_Gold2Money_S2C_descriptor_ = file->message_type(68);
  static const int Msg_Gold2Money_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Gold2Money_S2C, error_code_),
  };
  Msg_Gold2Money_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_Gold2Money_S2C_descriptor_,
      Msg_Gold2Money_S2C::default_instance_,
      Msg_Gold2Money_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Gold2Money_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_Gold2Money_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_Gold2Money_S2C));
  Msg_CouponList_C2S_descriptor_ = file->message_type(69);
  static const int Msg_CouponList_C2S_offsets_[1] = {
  };
  Msg_CouponList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_CouponList_C2S_descriptor_,
      Msg_CouponList_C2S::default_instance_,
      Msg_CouponList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CouponList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CouponList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_CouponList_C2S));
  Msg_CouponList_S2C_descriptor_ = file->message_type(70);
  static const int Msg_CouponList_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CouponList_S2C, coupon_list_),
  };
  Msg_CouponList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_CouponList_S2C_descriptor_,
      Msg_CouponList_S2C::default_instance_,
      Msg_CouponList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CouponList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CouponList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_CouponList_S2C));
  Msg_GlodPercent_C2S_descriptor_ = file->message_type(71);
  static const int Msg_GlodPercent_C2S_offsets_[1] = {
  };
  Msg_GlodPercent_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_GlodPercent_C2S_descriptor_,
      Msg_GlodPercent_C2S::default_instance_,
      Msg_GlodPercent_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GlodPercent_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GlodPercent_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_GlodPercent_C2S));
  Msg_GlodPercent_S2C_descriptor_ = file->message_type(72);
  static const int Msg_GlodPercent_S2C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GlodPercent_S2C, pecent_),
  };
  Msg_GlodPercent_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_GlodPercent_S2C_descriptor_,
      Msg_GlodPercent_S2C::default_instance_,
      Msg_GlodPercent_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GlodPercent_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_GlodPercent_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_GlodPercent_S2C));
  Msg_TradeDetailList_C2S_descriptor_ = file->message_type(73);
  static const int Msg_TradeDetailList_C2S_offsets_[1] = {
  };
  Msg_TradeDetailList_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_TradeDetailList_C2S_descriptor_,
      Msg_TradeDetailList_C2S::default_instance_,
      Msg_TradeDetailList_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TradeDetailList_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TradeDetailList_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_TradeDetailList_C2S));
  Msg_TradeDetailList_S2C_descriptor_ = file->message_type(74);
  static const int Msg_TradeDetailList_S2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TradeDetailList_S2C, pop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TradeDetailList_S2C, push_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TradeDetailList_S2C, trade_list_),
  };
  Msg_TradeDetailList_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_TradeDetailList_S2C_descriptor_,
      Msg_TradeDetailList_S2C::default_instance_,
      Msg_TradeDetailList_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TradeDetailList_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_TradeDetailList_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_TradeDetailList_S2C));
  Msg_PrePayOrderCreate_C2S_descriptor_ = file->message_type(75);
  static const int Msg_PrePayOrderCreate_C2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_C2S, total_fee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_C2S, platform_),
  };
  Msg_PrePayOrderCreate_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_PrePayOrderCreate_C2S_descriptor_,
      Msg_PrePayOrderCreate_C2S::default_instance_,
      Msg_PrePayOrderCreate_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_PrePayOrderCreate_C2S));
  Msg_PrePayOrderCreate_S2C_descriptor_ = file->message_type(76);
  static const int Msg_PrePayOrderCreate_S2C_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, return_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, prepay_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, nonce_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, mch_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, platform_),
  };
  Msg_PrePayOrderCreate_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_PrePayOrderCreate_S2C_descriptor_,
      Msg_PrePayOrderCreate_S2C::default_instance_,
      Msg_PrePayOrderCreate_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_PrePayOrderCreate_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_PrePayOrderCreate_S2C));
  Msg_ProductSpace_C2S_descriptor_ = file->message_type(77);
  static const int Msg_ProductSpace_C2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSpace_C2S, category_list_),
  };
  Msg_ProductSpace_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ProductSpace_C2S_descriptor_,
      Msg_ProductSpace_C2S::default_instance_,
      Msg_ProductSpace_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSpace_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSpace_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ProductSpace_C2S));
  Msg_ProductSpace_S2C_descriptor_ = file->message_type(78);
  static const int Msg_ProductSpace_S2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSpace_S2C, return_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSpace_S2C, product_list_),
  };
  Msg_ProductSpace_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_ProductSpace_S2C_descriptor_,
      Msg_ProductSpace_S2C::default_instance_,
      Msg_ProductSpace_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSpace_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_ProductSpace_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_ProductSpace_S2C));
  OrderInfo_descriptor_ = file->message_type(79);
  static const int OrderInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, order_receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, has_invoice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, order_invoice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, order_log_),
  };
  OrderInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderInfo_descriptor_,
      OrderInfo::default_instance_,
      OrderInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderInfo));
  Order_descriptor_ = file->message_type(80);
  static const int Order_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, order_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, goods_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, total_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, total_num_),
  };
  Order_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Order_descriptor_,
      Order::default_instance_,
      Order_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Order));
  OrderGoods_descriptor_ = file->message_type(81);
  static const int OrderGoods_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, image_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, product_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, opus_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, ware_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, goods_part_list_),
  };
  OrderGoods_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderGoods_descriptor_,
      OrderGoods::default_instance_,
      OrderGoods_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderGoods, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderGoods));
  OrderReceiver_descriptor_ = file->message_type(82);
  static const int OrderReceiver_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReceiver, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReceiver, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReceiver, address_),
  };
  OrderReceiver_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderReceiver_descriptor_,
      OrderReceiver::default_instance_,
      OrderReceiver_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReceiver, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReceiver, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderReceiver));
  OrderInvoice_descriptor_ = file->message_type(83);
  static const int OrderInvoice_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInvoice, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInvoice, content_),
  };
  OrderInvoice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderInvoice_descriptor_,
      OrderInvoice::default_instance_,
      OrderInvoice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInvoice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInvoice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderInvoice));
  OrderLog_descriptor_ = file->message_type(84);
  static const int OrderLog_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderLog, create_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderLog, content_),
  };
  OrderLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderLog_descriptor_,
      OrderLog::default_instance_,
      OrderLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderLog, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderLog));
  OrderQuery_descriptor_ = file->message_type(85);
  static const int OrderQuery_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderQuery, status_),
  };
  OrderQuery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderQuery_descriptor_,
      OrderQuery::default_instance_,
      OrderQuery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderQuery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderQuery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderQuery));
  query_all_order_req_descriptor_ = file->message_type(86);
  static const int query_all_order_req_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_req, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_req, page_size_),
  };
  query_all_order_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      query_all_order_req_descriptor_,
      query_all_order_req::default_instance_,
      query_all_order_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(query_all_order_req));
  query_all_order_res_descriptor_ = file->message_type(87);
  static const int query_all_order_res_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_res, order_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_res, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_res, result_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_res, result_des_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_res, total_num_),
  };
  query_all_order_res_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      query_all_order_res_descriptor_,
      query_all_order_res::default_instance_,
      query_all_order_res_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_res, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_all_order_res, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(query_all_order_res));
  query_con_order_req_descriptor_ = file->message_type(88);
  static const int query_con_order_req_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_req, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_req, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_req, order_query_),
  };
  query_con_order_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      query_con_order_req_descriptor_,
      query_con_order_req::default_instance_,
      query_con_order_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(query_con_order_req));
  query_con_order_res_descriptor_ = file->message_type(89);
  static const int query_con_order_res_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_res, order_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_res, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_res, result_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_res, result_des_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_res, total_num_),
  };
  query_con_order_res_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      query_con_order_res_descriptor_,
      query_con_order_res::default_instance_,
      query_con_order_res_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_res, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_con_order_res, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(query_con_order_res));
  query_single_order_req_descriptor_ = file->message_type(90);
  static const int query_single_order_req_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_req, order_code_),
  };
  query_single_order_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      query_single_order_req_descriptor_,
      query_single_order_req::default_instance_,
      query_single_order_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(query_single_order_req));
  query_single_order_res_descriptor_ = file->message_type(91);
  static const int query_single_order_res_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_res, orderinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_res, result_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_res, result_des_),
  };
  query_single_order_res_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      query_single_order_res_descriptor_,
      query_single_order_res::default_instance_,
      query_single_order_res_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_res, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(query_single_order_res, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(query_single_order_res));
  Msg_CooperationProductSpace_C2S_descriptor_ = file->message_type(92);
  static const int Msg_CooperationProductSpace_C2S_offsets_[1] = {
  };
  Msg_CooperationProductSpace_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_CooperationProductSpace_C2S_descriptor_,
      Msg_CooperationProductSpace_C2S::default_instance_,
      Msg_CooperationProductSpace_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CooperationProductSpace_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CooperationProductSpace_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_CooperationProductSpace_C2S));
  Msg_CooperationProductSpace_S2C_descriptor_ = file->message_type(93);
  static const int Msg_CooperationProductSpace_S2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CooperationProductSpace_S2C, return_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CooperationProductSpace_S2C, product_list_),
  };
  Msg_CooperationProductSpace_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Msg_CooperationProductSpace_S2C_descriptor_,
      Msg_CooperationProductSpace_S2C::default_instance_,
      Msg_CooperationProductSpace_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CooperationProductSpace_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CooperationProductSpace_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Msg_CooperationProductSpace_S2C));
  PayReq_descriptor_ = file->message_type(94);
  static const int PayReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, totalfee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, appenv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, outcontext_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, ordersn_),
  };
  PayReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PayReq_descriptor_,
      PayReq::default_instance_,
      PayReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PayReq));
  PayResp_descriptor_ = file->message_type(95);
  static const int PayResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayResp, data_),
  };
  PayResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PayResp_descriptor_,
      PayResp::default_instance_,
      PayResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PayResp));
  CreateOrderReq_descriptor_ = file->message_type(96);
  static const int CreateOrderReq_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, order_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, receiver_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, receiver_phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, receiver_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, has_invoice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, invoice_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, invoice_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, pay_way_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, goods_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, zip_code_),
  };
  CreateOrderReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateOrderReq_descriptor_,
      CreateOrderReq::default_instance_,
      CreateOrderReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateOrderReq));
  CreateOrderReq_PayType_descriptor_ = CreateOrderReq_descriptor_->enum_type(0);
  Goods_descriptor_ = file->message_type(97);
  static const int Goods_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, image_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, product_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, opus_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, ware_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, goods_part_list_),
  };
  Goods_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Goods_descriptor_,
      Goods::default_instance_,
      Goods_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goods, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Goods));
  GoodsPart_descriptor_ = file->message_type(98);
  static const int GoodsPart_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsPart, part_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsPart, mat_id_),
  };
  GoodsPart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GoodsPart_descriptor_,
      GoodsPart::default_instance_,
      GoodsPart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsPart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsPart, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GoodsPart));
  CreateOrderRes_descriptor_ = file->message_type(99);
  static const int CreateOrderRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderRes, order_code_),
  };
  CreateOrderRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateOrderRes_descriptor_,
      CreateOrderRes::default_instance_,
      CreateOrderRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateOrderRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateOrderRes));
  GoodsProductStatusReq_descriptor_ = file->message_type(100);
  static const int GoodsProductStatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsProductStatusReq, goods_id_),
  };
  GoodsProductStatusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GoodsProductStatusReq_descriptor_,
      GoodsProductStatusReq::default_instance_,
      GoodsProductStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsProductStatusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsProductStatusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GoodsProductStatusReq));
  GoodsProductStatusRes_descriptor_ = file->message_type(101);
  static const int GoodsProductStatusRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsProductStatusRes, goods_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsProductStatusRes, goods_status_),
  };
  GoodsProductStatusRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GoodsProductStatusRes_descriptor_,
      GoodsProductStatusRes::default_instance_,
      GoodsProductStatusRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsProductStatusRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsProductStatusRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GoodsProductStatusRes));
  GoodsProductStatusRes_ProductStatus_descriptor_ = GoodsProductStatusRes_descriptor_->enum_type(0);
  ChooseOrderPayWayReq_descriptor_ = file->message_type(102);
  static const int ChooseOrderPayWayReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseOrderPayWayReq, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseOrderPayWayReq, pay_way_),
  };
  ChooseOrderPayWayReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChooseOrderPayWayReq_descriptor_,
      ChooseOrderPayWayReq::default_instance_,
      ChooseOrderPayWayReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseOrderPayWayReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseOrderPayWayReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChooseOrderPayWayReq));
  ChooseOrderPayWayReq_PayType_descriptor_ = ChooseOrderPayWayReq_descriptor_->enum_type(0);
  ChooseOrderPayWayRes_descriptor_ = file->message_type(103);
  static const int ChooseOrderPayWayRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseOrderPayWayRes, order_code_),
  };
  ChooseOrderPayWayRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChooseOrderPayWayRes_descriptor_,
      ChooseOrderPayWayRes::default_instance_,
      ChooseOrderPayWayRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseOrderPayWayRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChooseOrderPayWayRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChooseOrderPayWayRes));
  DeleteOrderReq_descriptor_ = file->message_type(104);
  static const int DeleteOrderReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOrderReq, order_code_),
  };
  DeleteOrderReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteOrderReq_descriptor_,
      DeleteOrderReq::default_instance_,
      DeleteOrderReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOrderReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOrderReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteOrderReq));
  DeleteOrderRes_descriptor_ = file->message_type(105);
  static const int DeleteOrderRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOrderRes, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOrderRes, result_),
  };
  DeleteOrderRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteOrderRes_descriptor_,
      DeleteOrderRes::default_instance_,
      DeleteOrderRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOrderRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOrderRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteOrderRes));
  CancelOrderReq_descriptor_ = file->message_type(106);
  static const int CancelOrderReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderReq, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderReq, cancel_reason_),
  };
  CancelOrderReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CancelOrderReq_descriptor_,
      CancelOrderReq::default_instance_,
      CancelOrderReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CancelOrderReq));
  CancelOrderRes_descriptor_ = file->message_type(107);
  static const int CancelOrderRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderRes, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderRes, result_),
  };
  CancelOrderRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CancelOrderRes_descriptor_,
      CancelOrderRes::default_instance_,
      CancelOrderRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CancelOrderRes));
  ConfirmGrOrderReq_descriptor_ = file->message_type(108);
  static const int ConfirmGrOrderReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGrOrderReq, order_code_),
  };
  ConfirmGrOrderReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConfirmGrOrderReq_descriptor_,
      ConfirmGrOrderReq::default_instance_,
      ConfirmGrOrderReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGrOrderReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGrOrderReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConfirmGrOrderReq));
  ConfirmGrOrderRes_descriptor_ = file->message_type(109);
  static const int ConfirmGrOrderRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGrOrderRes, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGrOrderRes, result_),
  };
  ConfirmGrOrderRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConfirmGrOrderRes_descriptor_,
      ConfirmGrOrderRes::default_instance_,
      ConfirmGrOrderRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGrOrderRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGrOrderRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConfirmGrOrderRes));
  JudgeOrderReq_descriptor_ = file->message_type(110);
  static const int JudgeOrderReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderReq, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderReq, judge_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderReq, goods_judge_list_),
  };
  JudgeOrderReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JudgeOrderReq_descriptor_,
      JudgeOrderReq::default_instance_,
      JudgeOrderReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JudgeOrderReq));
  JudgeOrderRes_descriptor_ = file->message_type(111);
  static const int JudgeOrderRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderRes, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderRes, result_),
  };
  JudgeOrderRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JudgeOrderRes_descriptor_,
      JudgeOrderRes::default_instance_,
      JudgeOrderRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeOrderRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JudgeOrderRes));
  GoodsJudge_descriptor_ = file->message_type(112);
  static const int GoodsJudge_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsJudge, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsJudge, judge_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsJudge, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsJudge, goods_id_),
  };
  GoodsJudge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GoodsJudge_descriptor_,
      GoodsJudge::default_instance_,
      GoodsJudge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsJudge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsJudge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GoodsJudge));
  DelayOrderReq_descriptor_ = file->message_type(113);
  static const int DelayOrderReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderReq, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderReq, reason_),
  };
  DelayOrderReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DelayOrderReq_descriptor_,
      DelayOrderReq::default_instance_,
      DelayOrderReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DelayOrderReq));
  DelayOrderRes_descriptor_ = file->message_type(114);
  static const int DelayOrderRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderRes, order_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderRes, result_),
  };
  DelayOrderRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DelayOrderRes_descriptor_,
      DelayOrderRes::default_instance_,
      DelayOrderRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelayOrderRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DelayOrderRes));
  OpusReq_descriptor_ = file->message_type(115);
  static const int OpusReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusReq, opusid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusReq, retcode_),
  };
  OpusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpusReq_descriptor_,
      OpusReq::default_instance_,
      OpusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpusReq));
  OwnOpusReq_descriptor_ = file->message_type(116);
  static const int OwnOpusReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OwnOpusReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OwnOpusReq, retcode_),
  };
  OwnOpusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OwnOpusReq_descriptor_,
      OwnOpusReq::default_instance_,
      OwnOpusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OwnOpusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OwnOpusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OwnOpusReq));
  OpusBo_descriptor_ = file->message_type(117);
  static const int OpusBo_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, style_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, isrecommend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, partattribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, isgoods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, opusshot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, createdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, remark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, opuslist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, retcode_),
  };
  OpusBo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpusBo_descriptor_,
      OpusBo::default_instance_,
      OpusBo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusBo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpusBo));
  OpusCoopReq_descriptor_ = file->message_type(118);
  static const int OpusCoopReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopReq, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopReq, categoryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopReq, style_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopReq, retcode_),
  };
  OpusCoopReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpusCoopReq_descriptor_,
      OpusCoopReq::default_instance_,
      OpusCoopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpusCoopReq));
  PublishOpusCoopReq_descriptor_ = file->message_type(119);
  static const int PublishOpusCoopReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishOpusCoopReq, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishOpusCoopReq, opusid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishOpusCoopReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishOpusCoopReq, remark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishOpusCoopReq, retcode_),
  };
  PublishOpusCoopReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PublishOpusCoopReq_descriptor_,
      PublishOpusCoopReq::default_instance_,
      PublishOpusCoopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishOpusCoopReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishOpusCoopReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PublishOpusCoopReq));
  AddOpusCoopReq_descriptor_ = file->message_type(120);
  static const int AddOpusCoopReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOpusCoopReq, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOpusCoopReq, opusid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOpusCoopReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOpusCoopReq, retcode_),
  };
  AddOpusCoopReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddOpusCoopReq_descriptor_,
      AddOpusCoopReq::default_instance_,
      AddOpusCoopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOpusCoopReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOpusCoopReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddOpusCoopReq));
  OpusCoopBo_descriptor_ = file->message_type(121);
  static const int OpusCoopBo_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, opusid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, opusshot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, coopuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, coopusername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, remark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, createdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, updatedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, opuscooplist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, retcode_),
  };
  OpusCoopBo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OpusCoopBo_descriptor_,
      OpusCoopBo::default_instance_,
      OpusCoopBo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpusCoopBo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OpusCoopBo));
  PaySyncResultReq_descriptor_ = file->message_type(122);
  static const int PaySyncResultReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaySyncResultReq, resultstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaySyncResultReq, result_),
  };
  PaySyncResultReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PaySyncResultReq_descriptor_,
      PaySyncResultReq::default_instance_,
      PaySyncResultReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaySyncResultReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaySyncResultReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PaySyncResultReq));
  PaySyncResultResp_descriptor_ = file->message_type(123);
  static const int PaySyncResultResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaySyncResultResp, data_),
  };
  PaySyncResultResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PaySyncResultResp_descriptor_,
      PaySyncResultResp::default_instance_,
      PaySyncResultResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaySyncResultResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaySyncResultResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PaySyncResultResp));
  UserReceiver_descriptor_ = file->message_type(124);
  static const int UserReceiver_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, zip_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, area_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, area_store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, is_default_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, street_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, address_detail_),
  };
  UserReceiver_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserReceiver_descriptor_,
      UserReceiver::default_instance_,
      UserReceiver_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserReceiver, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserReceiver));
  queryUserReceiverReq_descriptor_ = file->message_type(125);
  static const int queryUserReceiverReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryUserReceiverReq, account_id_),
  };
  queryUserReceiverReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryUserReceiverReq_descriptor_,
      queryUserReceiverReq::default_instance_,
      queryUserReceiverReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryUserReceiverReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryUserReceiverReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryUserReceiverReq));
  queryUserReceiverRes_descriptor_ = file->message_type(126);
  static const int queryUserReceiverRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryUserReceiverRes, receiver_list_),
  };
  queryUserReceiverRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryUserReceiverRes_descriptor_,
      queryUserReceiverRes::default_instance_,
      queryUserReceiverRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryUserReceiverRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryUserReceiverRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryUserReceiverRes));
  createUserReceiverReq_descriptor_ = file->message_type(127);
  static const int createUserReceiverReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createUserReceiverReq, user_receiver_),
  };
  createUserReceiverReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      createUserReceiverReq_descriptor_,
      createUserReceiverReq::default_instance_,
      createUserReceiverReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createUserReceiverReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createUserReceiverReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(createUserReceiverReq));
  createUserReceiverRes_descriptor_ = file->message_type(128);
  static const int createUserReceiverRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createUserReceiverRes, result_),
  };
  createUserReceiverRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      createUserReceiverRes_descriptor_,
      createUserReceiverRes::default_instance_,
      createUserReceiverRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createUserReceiverRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createUserReceiverRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(createUserReceiverRes));
  updateUserReceiverReq_descriptor_ = file->message_type(129);
  static const int updateUserReceiverReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(updateUserReceiverReq, user_receiver_),
  };
  updateUserReceiverReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      updateUserReceiverReq_descriptor_,
      updateUserReceiverReq::default_instance_,
      updateUserReceiverReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(updateUserReceiverReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(updateUserReceiverReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(updateUserReceiverReq));
  updateUserReceiverRes_descriptor_ = file->message_type(130);
  static const int updateUserReceiverRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(updateUserReceiverRes, result_),
  };
  updateUserReceiverRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      updateUserReceiverRes_descriptor_,
      updateUserReceiverRes::default_instance_,
      updateUserReceiverRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(updateUserReceiverRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(updateUserReceiverRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(updateUserReceiverRes));
  createDefaultUserReceiverReq_descriptor_ = file->message_type(131);
  static const int createDefaultUserReceiverReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createDefaultUserReceiverReq, id_),
  };
  createDefaultUserReceiverReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      createDefaultUserReceiverReq_descriptor_,
      createDefaultUserReceiverReq::default_instance_,
      createDefaultUserReceiverReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createDefaultUserReceiverReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createDefaultUserReceiverReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(createDefaultUserReceiverReq));
  createDefaultUserReceiverRes_descriptor_ = file->message_type(132);
  static const int createDefaultUserReceiverRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createDefaultUserReceiverRes, result_),
  };
  createDefaultUserReceiverRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      createDefaultUserReceiverRes_descriptor_,
      createDefaultUserReceiverRes::default_instance_,
      createDefaultUserReceiverRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createDefaultUserReceiverRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(createDefaultUserReceiverRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(createDefaultUserReceiverRes));
  deleteUserReceiverReq_descriptor_ = file->message_type(133);
  static const int deleteUserReceiverReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deleteUserReceiverReq, id_),
  };
  deleteUserReceiverReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      deleteUserReceiverReq_descriptor_,
      deleteUserReceiverReq::default_instance_,
      deleteUserReceiverReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deleteUserReceiverReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deleteUserReceiverReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(deleteUserReceiverReq));
  deleteUserReceiverRes_descriptor_ = file->message_type(134);
  static const int deleteUserReceiverRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deleteUserReceiverRes, result_),
  };
  deleteUserReceiverRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      deleteUserReceiverRes_descriptor_,
      deleteUserReceiverRes::default_instance_,
      deleteUserReceiverRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deleteUserReceiverRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deleteUserReceiverRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(deleteUserReceiverRes));
  Area_descriptor_ = file->message_type(135);
  static const int Area_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Area, area_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Area, area_name_),
  };
  Area_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Area_descriptor_,
      Area::default_instance_,
      Area_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Area, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Area, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Area));
  queryAreaFirstReq_descriptor_ = file->message_type(136);
  static const int queryAreaFirstReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaFirstReq, account_id_),
  };
  queryAreaFirstReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryAreaFirstReq_descriptor_,
      queryAreaFirstReq::default_instance_,
      queryAreaFirstReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaFirstReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaFirstReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryAreaFirstReq));
  queryAreaFirstResp_descriptor_ = file->message_type(137);
  static const int queryAreaFirstResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaFirstResp, area_),
  };
  queryAreaFirstResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryAreaFirstResp_descriptor_,
      queryAreaFirstResp::default_instance_,
      queryAreaFirstResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaFirstResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaFirstResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryAreaFirstResp));
  queryAreaSecondReq_descriptor_ = file->message_type(138);
  static const int queryAreaSecondReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaSecondReq, area_no_),
  };
  queryAreaSecondReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryAreaSecondReq_descriptor_,
      queryAreaSecondReq::default_instance_,
      queryAreaSecondReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaSecondReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaSecondReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryAreaSecondReq));
  queryAreaSecondResp_descriptor_ = file->message_type(139);
  static const int queryAreaSecondResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaSecondResp, area_list_),
  };
  queryAreaSecondResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryAreaSecondResp_descriptor_,
      queryAreaSecondResp::default_instance_,
      queryAreaSecondResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaSecondResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaSecondResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryAreaSecondResp));
  queryAreaThreeReq_descriptor_ = file->message_type(140);
  static const int queryAreaThreeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaThreeReq, area_no_),
  };
  queryAreaThreeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryAreaThreeReq_descriptor_,
      queryAreaThreeReq::default_instance_,
      queryAreaThreeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaThreeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaThreeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryAreaThreeReq));
  queryAreaThreeResp_descriptor_ = file->message_type(141);
  static const int queryAreaThreeResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaThreeResp, area_list_),
  };
  queryAreaThreeResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      queryAreaThreeResp_descriptor_,
      queryAreaThreeResp::default_instance_,
      queryAreaThreeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaThreeResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(queryAreaThreeResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(queryAreaThreeResp));
  OrderCmdResult_descriptor_ = file->enum_type(0);
  ReceiverCmdResult_descriptor_ = file->enum_type(1);
  AreaResult_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MapPos_descriptor_, &MapPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OtherUserInfo_descriptor_, &OtherUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_HeartBeat_C2S_descriptor_, &Msg_HeartBeat_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_HeartBeat_S2C_descriptor_, &Msg_HeartBeat_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_TargetServerInvalid_S2C_descriptor_, &Msg_TargetServerInvalid_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OtherUserList_G2C_descriptor_, &Msg_OtherUserList_G2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserEnterScene_C2G_descriptor_, &Msg_UserEnterScene_C2G::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserLeaveScene_C2G_descriptor_, &Msg_UserLeaveScene_C2G::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserLeaveScene_G2C_descriptor_, &Msg_UserLeaveScene_G2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Goto_C2G_descriptor_, &Msg_Goto_C2G::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Goto_G2C_descriptor_, &Msg_Goto_G2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Equipment_C2S_descriptor_, &Msg_Equipment_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Equipment_S2C_descriptor_, &Msg_Equipment_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_GM_C2S_descriptor_, &Msg_GM_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserBaseInfoModify_C2S_descriptor_, &Msg_UserBaseInfoModify_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserBaseInfoModify_S2C_descriptor_, &Msg_UserBaseInfoModify_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserInfoModify_C2S_descriptor_, &Msg_UserInfoModify_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserInfoModify_S2C_descriptor_, &Msg_UserInfoModify_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_DesignProduct_C2S_descriptor_, &Msg_DesignProduct_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_DesignProduct_S2C_descriptor_, &Msg_DesignProduct_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserProductList_C2S_descriptor_, &Msg_UserProductList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserProductList_S2C_descriptor_, &Msg_UserProductList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserProductDetail_C2S_descriptor_, &Msg_UserProductDetail_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_UserProductDetail_S2C_descriptor_, &Msg_UserProductDetail_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ServerTime_C2S_descriptor_, &Msg_ServerTime_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ServerTime_S2C_descriptor_, &Msg_ServerTime_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_GoodsRecommend_C2S_descriptor_, &Msg_GoodsRecommend_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_GoodsRecommend_S2C_descriptor_, &Msg_GoodsRecommend_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_GoodsSearch_C2S_descriptor_, &Msg_GoodsSearch_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_GoodsSearch_S2C_descriptor_, &Msg_GoodsSearch_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Chat_C2S_descriptor_, &Msg_Chat_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Chat_S2C_descriptor_, &Msg_Chat_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Chat_Notify_S2C_descriptor_, &Msg_Chat_Notify_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_CreateOrder_C2S_descriptor_, &Msg_CreateOrder_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_CreateOrder_S2C_descriptor_, &Msg_CreateOrder_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_AddItemToShoppingCart_C2S_descriptor_, &Msg_AddItemToShoppingCart_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_AddItemToShoppingCart_S2C_descriptor_, &Msg_AddItemToShoppingCart_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ShoppingCartItemList_C2S_descriptor_, &Msg_ShoppingCartItemList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ShoppingCartItemList_S2C_descriptor_, &Msg_ShoppingCartItemList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Feedback_C2S_descriptor_, &Msg_Feedback_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Feedback_S2C_descriptor_, &Msg_Feedback_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_DesignerApply_C2S_descriptor_, &Msg_DesignerApply_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_DesignerApply_S2C_descriptor_, &Msg_DesignerApply_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ProductSketchUpload_C2S_descriptor_, &Msg_ProductSketchUpload_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ProductSketchUpload_S2C_descriptor_, &Msg_ProductSketchUpload_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_PointSourceList_C2S_descriptor_, &Msg_PointSourceList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_PointSourceList_S2C_descriptor_, &Msg_PointSourceList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_WithdrawMoney_C2S_descriptor_, &Msg_WithdrawMoney_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_WithdrawMoney_S2C_descriptor_, &Msg_WithdrawMoney_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_MyOriginalProductList_C2S_descriptor_, &Msg_MyOriginalProductList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_MyOriginalProductList_S2C_descriptor_, &Msg_MyOriginalProductList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_BindBankAccount_C2S_descriptor_, &Msg_BindBankAccount_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_BindBankAccount_S2C_descriptor_, &Msg_BindBankAccount_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_BindBankAccountList_C2S_descriptor_, &Msg_BindBankAccountList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_BindBankAccountList_S2C_descriptor_, &Msg_BindBankAccountList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductProfitList_C2S_descriptor_, &Msg_OriginalProductProfitList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductProfitList_S2C_descriptor_, &Msg_OriginalProductProfitList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductProfitDetailList_C2S_descriptor_, &Msg_OriginalProductProfitDetailList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductProfitDetailList_S2C_descriptor_, &Msg_OriginalProductProfitDetailList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductProfitDetail_C2S_descriptor_, &Msg_OriginalProductProfitDetail_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductProfitDetail_S2C_descriptor_, &Msg_OriginalProductProfitDetail_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductDetail_C2S_descriptor_, &Msg_OriginalProductDetail_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductDetail_S2C_descriptor_, &Msg_OriginalProductDetail_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductModify_C2S_descriptor_, &Msg_OriginalProductModify_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_OriginalProductModify_S2C_descriptor_, &Msg_OriginalProductModify_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ProfitList_C2S_descriptor_, &Msg_ProfitList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ProfitList_S2C_descriptor_, &Msg_ProfitList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Gold2Money_C2S_descriptor_, &Msg_Gold2Money_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_Gold2Money_S2C_descriptor_, &Msg_Gold2Money_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_CouponList_C2S_descriptor_, &Msg_CouponList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_CouponList_S2C_descriptor_, &Msg_CouponList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_GlodPercent_C2S_descriptor_, &Msg_GlodPercent_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_GlodPercent_S2C_descriptor_, &Msg_GlodPercent_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_TradeDetailList_C2S_descriptor_, &Msg_TradeDetailList_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_TradeDetailList_S2C_descriptor_, &Msg_TradeDetailList_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_PrePayOrderCreate_C2S_descriptor_, &Msg_PrePayOrderCreate_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_PrePayOrderCreate_S2C_descriptor_, &Msg_PrePayOrderCreate_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ProductSpace_C2S_descriptor_, &Msg_ProductSpace_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_ProductSpace_S2C_descriptor_, &Msg_ProductSpace_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderInfo_descriptor_, &OrderInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Order_descriptor_, &Order::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderGoods_descriptor_, &OrderGoods::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderReceiver_descriptor_, &OrderReceiver::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderInvoice_descriptor_, &OrderInvoice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderLog_descriptor_, &OrderLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderQuery_descriptor_, &OrderQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    query_all_order_req_descriptor_, &query_all_order_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    query_all_order_res_descriptor_, &query_all_order_res::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    query_con_order_req_descriptor_, &query_con_order_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    query_con_order_res_descriptor_, &query_con_order_res::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    query_single_order_req_descriptor_, &query_single_order_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    query_single_order_res_descriptor_, &query_single_order_res::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_CooperationProductSpace_C2S_descriptor_, &Msg_CooperationProductSpace_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Msg_CooperationProductSpace_S2C_descriptor_, &Msg_CooperationProductSpace_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PayReq_descriptor_, &PayReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PayResp_descriptor_, &PayResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateOrderReq_descriptor_, &CreateOrderReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Goods_descriptor_, &Goods::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GoodsPart_descriptor_, &GoodsPart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateOrderRes_descriptor_, &CreateOrderRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GoodsProductStatusReq_descriptor_, &GoodsProductStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GoodsProductStatusRes_descriptor_, &GoodsProductStatusRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChooseOrderPayWayReq_descriptor_, &ChooseOrderPayWayReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChooseOrderPayWayRes_descriptor_, &ChooseOrderPayWayRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteOrderReq_descriptor_, &DeleteOrderReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteOrderRes_descriptor_, &DeleteOrderRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CancelOrderReq_descriptor_, &CancelOrderReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CancelOrderRes_descriptor_, &CancelOrderRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConfirmGrOrderReq_descriptor_, &ConfirmGrOrderReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConfirmGrOrderRes_descriptor_, &ConfirmGrOrderRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JudgeOrderReq_descriptor_, &JudgeOrderReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JudgeOrderRes_descriptor_, &JudgeOrderRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GoodsJudge_descriptor_, &GoodsJudge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DelayOrderReq_descriptor_, &DelayOrderReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DelayOrderRes_descriptor_, &DelayOrderRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpusReq_descriptor_, &OpusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OwnOpusReq_descriptor_, &OwnOpusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpusBo_descriptor_, &OpusBo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpusCoopReq_descriptor_, &OpusCoopReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PublishOpusCoopReq_descriptor_, &PublishOpusCoopReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddOpusCoopReq_descriptor_, &AddOpusCoopReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OpusCoopBo_descriptor_, &OpusCoopBo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PaySyncResultReq_descriptor_, &PaySyncResultReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PaySyncResultResp_descriptor_, &PaySyncResultResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserReceiver_descriptor_, &UserReceiver::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryUserReceiverReq_descriptor_, &queryUserReceiverReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryUserReceiverRes_descriptor_, &queryUserReceiverRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    createUserReceiverReq_descriptor_, &createUserReceiverReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    createUserReceiverRes_descriptor_, &createUserReceiverRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    updateUserReceiverReq_descriptor_, &updateUserReceiverReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    updateUserReceiverRes_descriptor_, &updateUserReceiverRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    createDefaultUserReceiverReq_descriptor_, &createDefaultUserReceiverReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    createDefaultUserReceiverRes_descriptor_, &createDefaultUserReceiverRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    deleteUserReceiverReq_descriptor_, &deleteUserReceiverReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    deleteUserReceiverRes_descriptor_, &deleteUserReceiverRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Area_descriptor_, &Area::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryAreaFirstReq_descriptor_, &queryAreaFirstReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryAreaFirstResp_descriptor_, &queryAreaFirstResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryAreaSecondReq_descriptor_, &queryAreaSecondReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryAreaSecondResp_descriptor_, &queryAreaSecondResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryAreaThreeReq_descriptor_, &queryAreaThreeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    queryAreaThreeResp_descriptor_, &queryAreaThreeResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_5fmsg_2eproto() {
  delete MapPos::default_instance_;
  delete MapPos_reflection_;
  delete OtherUserInfo::default_instance_;
  delete OtherUserInfo_reflection_;
  delete Msg_HeartBeat_C2S::default_instance_;
  delete Msg_HeartBeat_C2S_reflection_;
  delete Msg_HeartBeat_S2C::default_instance_;
  delete Msg_HeartBeat_S2C_reflection_;
  delete Msg_TargetServerInvalid_S2C::default_instance_;
  delete Msg_TargetServerInvalid_S2C_reflection_;
  delete Msg_OtherUserList_G2C::default_instance_;
  delete Msg_OtherUserList_G2C_reflection_;
  delete Msg_UserEnterScene_C2G::default_instance_;
  delete Msg_UserEnterScene_C2G_reflection_;
  delete Msg_UserLeaveScene_C2G::default_instance_;
  delete Msg_UserLeaveScene_C2G_reflection_;
  delete Msg_UserLeaveScene_G2C::default_instance_;
  delete Msg_UserLeaveScene_G2C_reflection_;
  delete Msg_Goto_C2G::default_instance_;
  delete Msg_Goto_C2G_reflection_;
  delete Msg_Goto_G2C::default_instance_;
  delete Msg_Goto_G2C_reflection_;
  delete Msg_Equipment_C2S::default_instance_;
  delete Msg_Equipment_C2S_reflection_;
  delete Msg_Equipment_S2C::default_instance_;
  delete Msg_Equipment_S2C_reflection_;
  delete Msg_GM_C2S::default_instance_;
  delete Msg_GM_C2S_reflection_;
  delete Msg_UserBaseInfoModify_C2S::default_instance_;
  delete Msg_UserBaseInfoModify_C2S_reflection_;
  delete Msg_UserBaseInfoModify_S2C::default_instance_;
  delete Msg_UserBaseInfoModify_S2C_reflection_;
  delete Msg_UserInfoModify_C2S::default_instance_;
  delete Msg_UserInfoModify_C2S_reflection_;
  delete Msg_UserInfoModify_S2C::default_instance_;
  delete Msg_UserInfoModify_S2C_reflection_;
  delete Msg_DesignProduct_C2S::default_instance_;
  delete Msg_DesignProduct_C2S_reflection_;
  delete Msg_DesignProduct_S2C::default_instance_;
  delete Msg_DesignProduct_S2C_reflection_;
  delete Msg_UserProductList_C2S::default_instance_;
  delete Msg_UserProductList_C2S_reflection_;
  delete Msg_UserProductList_S2C::default_instance_;
  delete Msg_UserProductList_S2C_reflection_;
  delete Msg_UserProductDetail_C2S::default_instance_;
  delete Msg_UserProductDetail_C2S_reflection_;
  delete Msg_UserProductDetail_S2C::default_instance_;
  delete Msg_UserProductDetail_S2C_reflection_;
  delete Msg_ServerTime_C2S::default_instance_;
  delete Msg_ServerTime_C2S_reflection_;
  delete Msg_ServerTime_S2C::default_instance_;
  delete Msg_ServerTime_S2C_reflection_;
  delete Msg_GoodsRecommend_C2S::default_instance_;
  delete Msg_GoodsRecommend_C2S_reflection_;
  delete Msg_GoodsRecommend_S2C::default_instance_;
  delete Msg_GoodsRecommend_S2C_reflection_;
  delete Msg_GoodsSearch_C2S::default_instance_;
  delete Msg_GoodsSearch_C2S_reflection_;
  delete Msg_GoodsSearch_S2C::default_instance_;
  delete Msg_GoodsSearch_S2C_reflection_;
  delete Msg_Chat_C2S::default_instance_;
  delete Msg_Chat_C2S_reflection_;
  delete Msg_Chat_S2C::default_instance_;
  delete Msg_Chat_S2C_reflection_;
  delete Msg_Chat_Notify_S2C::default_instance_;
  delete Msg_Chat_Notify_S2C_reflection_;
  delete Msg_CreateOrder_C2S::default_instance_;
  delete Msg_CreateOrder_C2S_reflection_;
  delete Msg_CreateOrder_S2C::default_instance_;
  delete Msg_CreateOrder_S2C_reflection_;
  delete Msg_AddItemToShoppingCart_C2S::default_instance_;
  delete Msg_AddItemToShoppingCart_C2S_reflection_;
  delete Msg_AddItemToShoppingCart_S2C::default_instance_;
  delete Msg_AddItemToShoppingCart_S2C_reflection_;
  delete Msg_ShoppingCartItemList_C2S::default_instance_;
  delete Msg_ShoppingCartItemList_C2S_reflection_;
  delete Msg_ShoppingCartItemList_S2C::default_instance_;
  delete Msg_ShoppingCartItemList_S2C_reflection_;
  delete Msg_Feedback_C2S::default_instance_;
  delete Msg_Feedback_C2S_reflection_;
  delete Msg_Feedback_S2C::default_instance_;
  delete Msg_Feedback_S2C_reflection_;
  delete Msg_DesignerApply_C2S::default_instance_;
  delete Msg_DesignerApply_C2S_reflection_;
  delete Msg_DesignerApply_S2C::default_instance_;
  delete Msg_DesignerApply_S2C_reflection_;
  delete Msg_ProductSketchUpload_C2S::default_instance_;
  delete Msg_ProductSketchUpload_C2S_reflection_;
  delete Msg_ProductSketchUpload_S2C::default_instance_;
  delete Msg_ProductSketchUpload_S2C_reflection_;
  delete Msg_PointSourceList_C2S::default_instance_;
  delete Msg_PointSourceList_C2S_reflection_;
  delete Msg_PointSourceList_S2C::default_instance_;
  delete Msg_PointSourceList_S2C_reflection_;
  delete Msg_WithdrawMoney_C2S::default_instance_;
  delete Msg_WithdrawMoney_C2S_reflection_;
  delete Msg_WithdrawMoney_S2C::default_instance_;
  delete Msg_WithdrawMoney_S2C_reflection_;
  delete Msg_MyOriginalProductList_C2S::default_instance_;
  delete Msg_MyOriginalProductList_C2S_reflection_;
  delete Msg_MyOriginalProductList_S2C::default_instance_;
  delete Msg_MyOriginalProductList_S2C_reflection_;
  delete Msg_BindBankAccount_C2S::default_instance_;
  delete Msg_BindBankAccount_C2S_reflection_;
  delete Msg_BindBankAccount_S2C::default_instance_;
  delete Msg_BindBankAccount_S2C_reflection_;
  delete Msg_BindBankAccountList_C2S::default_instance_;
  delete Msg_BindBankAccountList_C2S_reflection_;
  delete Msg_BindBankAccountList_S2C::default_instance_;
  delete Msg_BindBankAccountList_S2C_reflection_;
  delete Msg_OriginalProductProfitList_C2S::default_instance_;
  delete Msg_OriginalProductProfitList_C2S_reflection_;
  delete Msg_OriginalProductProfitList_S2C::default_instance_;
  delete Msg_OriginalProductProfitList_S2C_reflection_;
  delete Msg_OriginalProductProfitDetailList_C2S::default_instance_;
  delete Msg_OriginalProductProfitDetailList_C2S_reflection_;
  delete Msg_OriginalProductProfitDetailList_S2C::default_instance_;
  delete Msg_OriginalProductProfitDetailList_S2C_reflection_;
  delete Msg_OriginalProductProfitDetail_C2S::default_instance_;
  delete Msg_OriginalProductProfitDetail_C2S_reflection_;
  delete Msg_OriginalProductProfitDetail_S2C::default_instance_;
  delete Msg_OriginalProductProfitDetail_S2C_reflection_;
  delete Msg_OriginalProductDetail_C2S::default_instance_;
  delete Msg_OriginalProductDetail_C2S_reflection_;
  delete Msg_OriginalProductDetail_S2C::default_instance_;
  delete Msg_OriginalProductDetail_S2C_reflection_;
  delete Msg_OriginalProductModify_C2S::default_instance_;
  delete Msg_OriginalProductModify_C2S_reflection_;
  delete Msg_OriginalProductModify_S2C::default_instance_;
  delete Msg_OriginalProductModify_S2C_reflection_;
  delete Msg_ProfitList_C2S::default_instance_;
  delete Msg_ProfitList_C2S_reflection_;
  delete Msg_ProfitList_S2C::default_instance_;
  delete Msg_ProfitList_S2C_reflection_;
  delete Msg_Gold2Money_C2S::default_instance_;
  delete Msg_Gold2Money_C2S_reflection_;
  delete Msg_Gold2Money_S2C::default_instance_;
  delete Msg_Gold2Money_S2C_reflection_;
  delete Msg_CouponList_C2S::default_instance_;
  delete Msg_CouponList_C2S_reflection_;
  delete Msg_CouponList_S2C::default_instance_;
  delete Msg_CouponList_S2C_reflection_;
  delete Msg_GlodPercent_C2S::default_instance_;
  delete Msg_GlodPercent_C2S_reflection_;
  delete Msg_GlodPercent_S2C::default_instance_;
  delete Msg_GlodPercent_S2C_reflection_;
  delete Msg_TradeDetailList_C2S::default_instance_;
  delete Msg_TradeDetailList_C2S_reflection_;
  delete Msg_TradeDetailList_S2C::default_instance_;
  delete Msg_TradeDetailList_S2C_reflection_;
  delete Msg_PrePayOrderCreate_C2S::default_instance_;
  delete Msg_PrePayOrderCreate_C2S_reflection_;
  delete Msg_PrePayOrderCreate_S2C::default_instance_;
  delete Msg_PrePayOrderCreate_S2C_reflection_;
  delete Msg_ProductSpace_C2S::default_instance_;
  delete Msg_ProductSpace_C2S_reflection_;
  delete Msg_ProductSpace_S2C::default_instance_;
  delete Msg_ProductSpace_S2C_reflection_;
  delete OrderInfo::default_instance_;
  delete OrderInfo_reflection_;
  delete Order::default_instance_;
  delete Order_reflection_;
  delete OrderGoods::default_instance_;
  delete OrderGoods_reflection_;
  delete OrderReceiver::default_instance_;
  delete OrderReceiver_reflection_;
  delete OrderInvoice::default_instance_;
  delete OrderInvoice_reflection_;
  delete OrderLog::default_instance_;
  delete OrderLog_reflection_;
  delete OrderQuery::default_instance_;
  delete OrderQuery_reflection_;
  delete query_all_order_req::default_instance_;
  delete query_all_order_req_reflection_;
  delete query_all_order_res::default_instance_;
  delete query_all_order_res_reflection_;
  delete query_con_order_req::default_instance_;
  delete query_con_order_req_reflection_;
  delete query_con_order_res::default_instance_;
  delete query_con_order_res_reflection_;
  delete query_single_order_req::default_instance_;
  delete query_single_order_req_reflection_;
  delete query_single_order_res::default_instance_;
  delete query_single_order_res_reflection_;
  delete Msg_CooperationProductSpace_C2S::default_instance_;
  delete Msg_CooperationProductSpace_C2S_reflection_;
  delete Msg_CooperationProductSpace_S2C::default_instance_;
  delete Msg_CooperationProductSpace_S2C_reflection_;
  delete PayReq::default_instance_;
  delete PayReq_reflection_;
  delete PayResp::default_instance_;
  delete PayResp_reflection_;
  delete CreateOrderReq::default_instance_;
  delete CreateOrderReq_reflection_;
  delete Goods::default_instance_;
  delete Goods_reflection_;
  delete GoodsPart::default_instance_;
  delete GoodsPart_reflection_;
  delete CreateOrderRes::default_instance_;
  delete CreateOrderRes_reflection_;
  delete GoodsProductStatusReq::default_instance_;
  delete GoodsProductStatusReq_reflection_;
  delete GoodsProductStatusRes::default_instance_;
  delete GoodsProductStatusRes_reflection_;
  delete ChooseOrderPayWayReq::default_instance_;
  delete ChooseOrderPayWayReq_reflection_;
  delete ChooseOrderPayWayRes::default_instance_;
  delete ChooseOrderPayWayRes_reflection_;
  delete DeleteOrderReq::default_instance_;
  delete DeleteOrderReq_reflection_;
  delete DeleteOrderRes::default_instance_;
  delete DeleteOrderRes_reflection_;
  delete CancelOrderReq::default_instance_;
  delete CancelOrderReq_reflection_;
  delete CancelOrderRes::default_instance_;
  delete CancelOrderRes_reflection_;
  delete ConfirmGrOrderReq::default_instance_;
  delete ConfirmGrOrderReq_reflection_;
  delete ConfirmGrOrderRes::default_instance_;
  delete ConfirmGrOrderRes_reflection_;
  delete JudgeOrderReq::default_instance_;
  delete JudgeOrderReq_reflection_;
  delete JudgeOrderRes::default_instance_;
  delete JudgeOrderRes_reflection_;
  delete GoodsJudge::default_instance_;
  delete GoodsJudge_reflection_;
  delete DelayOrderReq::default_instance_;
  delete DelayOrderReq_reflection_;
  delete DelayOrderRes::default_instance_;
  delete DelayOrderRes_reflection_;
  delete OpusReq::default_instance_;
  delete OpusReq_reflection_;
  delete OwnOpusReq::default_instance_;
  delete OwnOpusReq_reflection_;
  delete OpusBo::default_instance_;
  delete OpusBo_reflection_;
  delete OpusCoopReq::default_instance_;
  delete OpusCoopReq_reflection_;
  delete PublishOpusCoopReq::default_instance_;
  delete PublishOpusCoopReq_reflection_;
  delete AddOpusCoopReq::default_instance_;
  delete AddOpusCoopReq_reflection_;
  delete OpusCoopBo::default_instance_;
  delete OpusCoopBo_reflection_;
  delete PaySyncResultReq::default_instance_;
  delete PaySyncResultReq_reflection_;
  delete PaySyncResultResp::default_instance_;
  delete PaySyncResultResp_reflection_;
  delete UserReceiver::default_instance_;
  delete UserReceiver_reflection_;
  delete queryUserReceiverReq::default_instance_;
  delete queryUserReceiverReq_reflection_;
  delete queryUserReceiverRes::default_instance_;
  delete queryUserReceiverRes_reflection_;
  delete createUserReceiverReq::default_instance_;
  delete createUserReceiverReq_reflection_;
  delete createUserReceiverRes::default_instance_;
  delete createUserReceiverRes_reflection_;
  delete updateUserReceiverReq::default_instance_;
  delete updateUserReceiverReq_reflection_;
  delete updateUserReceiverRes::default_instance_;
  delete updateUserReceiverRes_reflection_;
  delete createDefaultUserReceiverReq::default_instance_;
  delete createDefaultUserReceiverReq_reflection_;
  delete createDefaultUserReceiverRes::default_instance_;
  delete createDefaultUserReceiverRes_reflection_;
  delete deleteUserReceiverReq::default_instance_;
  delete deleteUserReceiverReq_reflection_;
  delete deleteUserReceiverRes::default_instance_;
  delete deleteUserReceiverRes_reflection_;
  delete Area::default_instance_;
  delete Area_reflection_;
  delete queryAreaFirstReq::default_instance_;
  delete queryAreaFirstReq_reflection_;
  delete queryAreaFirstResp::default_instance_;
  delete queryAreaFirstResp_reflection_;
  delete queryAreaSecondReq::default_instance_;
  delete queryAreaSecondReq_reflection_;
  delete queryAreaSecondResp::default_instance_;
  delete queryAreaSecondResp_reflection_;
  delete queryAreaThreeReq::default_instance_;
  delete queryAreaThreeReq_reflection_;
  delete queryAreaThreeResp::default_instance_;
  delete queryAreaThreeResp_reflection_;
}

void protobuf_AddDesc_common_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::dgame::protobuf_AddDesc_dgame_5fdefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020common_msg.proto\022\002CS\032\022dgame_define.pro"
    "to\")\n\006MapPos\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022\t\n\001z\030"
    "\003 \002(\005\"~\n\rOtherUserInfo\022\017\n\007user_id\030\001 \002(\r\022"
    "\021\n\tuser_name\030\002 \002(\t\022\033\n\007cur_pos\030\003 \002(\0132\n.CS"
    ".MapPos\022,\n\016equipment_list\030\004 \003(\0132\024.dgame."
    "EquipmentData\"\023\n\021Msg_HeartBeat_C2S\"\023\n\021Ms"
    "g_HeartBeat_S2C\"<\n\033Msg_TargetServerInval"
    "id_S2C\022\020\n\010url_desc\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\"=\n"
    "\025Msg_OtherUserList_G2C\022$\n\tuser_list\030\001 \003("
    "\0132\021.CS.OtherUserInfo\")\n\026Msg_UserEnterSce"
    "ne_C2G\022\017\n\007user_id\030\001 \002(\r\"\030\n\026Msg_UserLeave"
    "Scene_C2G\")\n\026Msg_UserLeaveScene_G2C\022\017\n\007u"
    "ser_id\030\001 \002(\r\"@\n\014Msg_Goto_C2G\022\030\n\004from\030\001 \002"
    "(\0132\n.CS.MapPos\022\026\n\002to\030\002 \002(\0132\n.CS.MapPos\"Q"
    "\n\014Msg_Goto_G2C\022\017\n\007user_id\030\001 \002(\r\022\030\n\004from\030"
    "\002 \002(\0132\n.CS.MapPos\022\026\n\002to\030\003 \002(\0132\n.CS.MapPo"
    "s\"A\n\021Msg_Equipment_C2S\022,\n\016equipment_list"
    "\030\001 \003(\0132\024.dgame.EquipmentData\"\023\n\021Msg_Equi"
    "pment_S2C\";\n\nMsg_GM_C2S\022\r\n\005gm_id\030\001 \002(\r\022\016"
    "\n\006param1\030\002 \002(\r\022\016\n\006param2\030\003 \002(\r\"R\n\032Msg_Us"
    "erBaseInfoModify_C2S\022\023\n\013head_img_id\030\001 \001("
    "\r\022\021\n\tnick_name\030\002 \001(\t\022\014\n\004sign\030\003 \001(\t\"0\n\032Ms"
    "g_UserBaseInfoModify_S2C\022\022\n\nerror_code\030\001"
    " \002(\r\"\244\002\n\026Msg_UserInfoModify_C2S\022\r\n\005email"
    "\030\001 \001(\t\022\013\n\003sex\030\002 \001(\r\022\013\n\003job\030\003 \001(\r\022\r\n\005hobb"
    "y\030\004 \001(\r\022\014\n\004skin\030\005 \001(\r\022&\n\tdate_list\030\006 \003(\013"
    "2\023.dgame.SouvenirDate\022\022\n\nbrand_list\030\007 \003("
    "\r\022\r\n\005color\030\010 \001(\r\022\024\n\014dressed_list\030\t \003(\r\022\020"
    "\n\010birthday\030\n \001(\r\022\023\n\013head_img_id\030\013 \001(\r\022\013\n"
    "\003age\030\014 \001(\r\022\016\n\006zodiac\030\r \001(\r\022\021\n\tnick_name\030"
    "\016 \001(\t\022\014\n\004sign\030\017 \001(\t\"\030\n\026Msg_UserInfoModif"
    "y_S2C\"<\n\025Msg_DesignProduct_C2S\022#\n\007produc"
    "t\030\001 \002(\0132\022.dgame.ProductData\"7\n\025Msg_Desig"
    "nProduct_S2C\022\n\n\002id\030\001 \001(\r\022\022\n\nerror_code\030\002"
    " \001(\r\"\031\n\027Msg_UserProductList_C2S\"C\n\027Msg_U"
    "serProductList_S2C\022(\n\014product_list\030\001 \003(\013"
    "2\022.dgame.ProductData\"\'\n\031Msg_UserProductD"
    "etail_C2S\022\n\n\002id\030\001 \002(\r\"E\n\031Msg_UserProduct"
    "Detail_S2C\022(\n\006detail\030\001 \002(\0132\030.dgame.Produ"
    "ctDetailInfo\"\024\n\022Msg_ServerTime_C2S\")\n\022Ms"
    "g_ServerTime_S2C\022\023\n\013server_time\030\001 \002(\r\"\030\n"
    "\026Msg_GoodsRecommend_C2S\",\n\026Msg_GoodsReco"
    "mmend_S2C\022\022\n\ngoods_list\030\001 \003(\r\"#\n\023Msg_Goo"
    "dsSearch_C2S\022\014\n\004type\030\001 \002(\r\"7\n\023Msg_GoodsS"
    "earch_S2C\022\014\n\004type\030\001 \002(\r\022\022\n\ngoods_list\030\002 "
    "\003(\r\"R\n\014Msg_Chat_C2S\022\014\n\004type\030\001 \002(\r\022\021\n\ttar"
    "get_id\030\002 \001(\r\022\023\n\013target_name\030\003 \001(\t\022\014\n\004tex"
    "t\030\004 \002(\t\"\"\n\014Msg_Chat_S2C\022\022\n\nerror_code\030\001 "
    "\002(\r\"\201\001\n\023Msg_Chat_Notify_S2C\022\014\n\004type\030\001 \002("
    "\r\022\021\n\tsender_id\030\002 \001(\r\022\023\n\013sender_name\030\003 \001("
    "\t\022\021\n\ttarget_id\030\004 \001(\r\022\023\n\013target_name\030\005 \001("
    "\t\022\014\n\004text\030\006 \002(\t\"\234\001\n\023Msg_CreateOrder_C2S\022"
    "#\n\titem_list\030\001 \003(\0132\020.dgame.OrderItem\022\016\n\006"
    "adress\030\002 \002(\t\022\022\n\nis_invoice\030\003 \002(\r\022\025\n\rinvo"
    "ice_title\030\004 \001(\t\022\017\n\007tephone\030\005 \002(\t\022\024\n\014rece"
    "ive_name\030\006 \002(\t\")\n\023Msg_CreateOrder_S2C\022\022\n"
    "\nerror_code\030\001 \002(\r\"0\n\035Msg_AddItemToShoppi"
    "ngCart_C2S\022\017\n\007itme_id\030\001 \002(\r\"D\n\035Msg_AddIt"
    "emToShoppingCart_S2C\022\022\n\nerror_code\030\001 \002(\r"
    "\022\017\n\007itme_id\030\002 \002(\r\"\036\n\034Msg_ShoppingCartIte"
    "mList_C2S\"1\n\034Msg_ShoppingCartItemList_S2"
    "C\022\021\n\titem_list\030\001 \003(\r\" \n\020Msg_Feedback_C2S"
    "\022\014\n\004desc\030\001 \002(\t\"&\n\020Msg_Feedback_S2C\022\022\n\ner"
    "ror_code\030\001 \002(\r\"\210\001\n\025Msg_DesignerApply_C2S"
    "\022\025\n\rdesigner_type\030\001 \001(\r\022\020\n\010exp_desc\030\002 \001("
    "\t\022\027\n\017certificate_url\030\003 \001(\t\022-\n\013sketch_inf"
    "o\030\004 \001(\0132\030.dgame.ProductSketchInfo\"+\n\025Msg"
    "_DesignerApply_S2C\022\022\n\nerror_code\030\001 \002(\r\"L"
    "\n\033Msg_ProductSketchUpload_C2S\022-\n\013sketch_"
    "info\030\001 \002(\0132\030.dgame.ProductSketchInfo\"1\n\033"
    "Msg_ProductSketchUpload_S2C\022\022\n\nerror_cod"
    "e\030\001 \002(\r\"\031\n\027Msg_PointSourceList_C2S\"E\n\027Ms"
    "g_PointSourceList_S2C\022*\n\npoint_list\030\001 \003("
    "\0132\026.dgame.PointSourceInfo\"&\n\025Msg_Withdra"
    "wMoney_C2S\022\r\n\005money\030\001 \002(\002\"+\n\025Msg_Withdra"
    "wMoney_S2C\022\022\n\nerror_code\030\001 \002(\r\"<\n\035Msg_My"
    "OriginalProductList_C2S\022\014\n\004type\030\001 \001(\r\022\r\n"
    "\005index\030\002 \002(\r\"\207\001\n\035Msg_MyOriginalProductLi"
    "st_S2C\022\014\n\004type\030\001 \001(\r\022\021\n\tcur_index\030\002 \001(\r\022"
    "\023\n\013total_index\030\003 \001(\r\0220\n\014product_list\030\004 \003"
    "(\0132\032.dgame.OriginalProductInfo\"D\n\027Msg_Bi"
    "ndBankAccount_C2S\022\024\n\014account_name\030\001 \002(\t\022"
    "\023\n\013card_number\030\002 \002(\t\"-\n\027Msg_BindBankAcco"
    "unt_S2C\022\022\n\nerror_code\030\001 \002(\r\"\035\n\033Msg_BindB"
    "ankAccountList_C2S\"L\n\033Msg_BindBankAccoun"
    "tList_S2C\022-\n\tbank_list\030\001 \003(\0132\032.dgame.Bin"
    "dBankAccountInfo\"2\n!Msg_OriginalProductP"
    "rofitList_C2S\022\r\n\005index\030\001 \002(\r\"\261\001\n!Msg_Ori"
    "ginalProductProfitList_S2C\022\024\n\014total_prof"
    "it\030\001 \001(\r\022\023\n\013total_count\030\002 \001(\r\022\021\n\tcur_ind"
    "ex\030\003 \001(\r\022\023\n\013total_index\030\004 \001(\r\0229\n\013profit_"
    "list\030\005 \003(\0132$.dgame.OriginalProductProfit"
    "BaseInfo\"8\n\'Msg_OriginalProductProfitDet"
    "ailList_C2S\022\r\n\005index\030\001 \002(\r\"\235\001\n\'Msg_Origi"
    "nalProductProfitDetailList_S2C\022\024\n\014total_"
    "profit\030\001 \001(\r\022\021\n\tcur_index\030\002 \001(\r\022\023\n\013total"
    "_index\030\003 \001(\r\0224\n\013profit_list\030\004 \003(\0132\037.dgam"
    "e.DayOriginalProductProfit\"1\n#Msg_Origin"
    "alProductProfitDetail_C2S\022\n\n\002id\030\001 \001(\r\"\251\001"
    "\n#Msg_OriginalProductProfitDetail_S2C\022\n\n"
    "\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\024\n\014total_profit\030"
    "\003 \001(\r\022\023\n\013total_count\030\004 \001(\r\022=\n\020profit_bas"
    "e_list\030\005 \003(\0132#.dgame.DayOriginalProductP"
    "rofitBase\"+\n\035Msg_OriginalProductDetail_C"
    "2S\022\n\n\002id\030\001 \002(\r\"U\n\035Msg_OriginalProductDet"
    "ail_S2C\0224\n\016product_detail\030\001 \001(\0132\034.dgame."
    "OriginalProductDetail\"m\n\035Msg_OriginalPro"
    "ductModify_C2S\022\021\n\toperation\030\001 \001(\r\022\n\n\002id\030"
    "\002 \001(\r\022-\n\007product\030\003 \001(\0132\034.dgame.OriginalP"
    "roductDetail\"R\n\035Msg_OriginalProductModif"
    "y_S2C\022\021\n\toperation\030\001 \001(\r\022\022\n\nerror_code\030\002"
    " \001(\r\022\n\n\002id\030\003 \001(\r\"\024\n\022Msg_ProfitList_C2S\"{"
    "\n\022Msg_ProfitList_S2C\022\017\n\007balance\030\001 \002(\r\022\024\n"
    "\014total_profit\030\002 \002(\r\022\026\n\016total_withdraw\030\003 "
    "\002(\r\022&\n\013profit_list\030\004 \003(\0132\021.dgame.ProfitD"
    "ata\"\"\n\022Msg_Gold2Money_C2S\022\014\n\004gold\030\001 \002(\r\""
    "(\n\022Msg_Gold2Money_S2C\022\022\n\nerror_code\030\001 \002("
    "\r\"\024\n\022Msg_CouponList_C2S\"<\n\022Msg_CouponLis"
    "t_S2C\022&\n\013coupon_list\030\001 \003(\0132\021.dgame.Coupo"
    "nData\"\025\n\023Msg_GlodPercent_C2S\"%\n\023Msg_Glod"
    "Percent_S2C\022\016\n\006pecent\030\001 \002(\002\"\031\n\027Msg_Trade"
    "DetailList_C2S\"Z\n\027Msg_TradeDetailList_S2"
    "C\022\013\n\003pop\030\001 \001(\r\022\014\n\004push\030\002 \001(\r\022$\n\ntrade_li"
    "st\030\003 \003(\0132\020.dgame.TradeInfo\"@\n\031Msg_PrePay"
    "OrderCreate_C2S\022\021\n\ttotal_fee\030\001 \001(\r\022\020\n\010pl"
    "atform\030\002 \001(\r\"\250\001\n\031Msg_PrePayOrderCreate_S"
    "2C\022\023\n\013return_code\030\001 \001(\r\022\021\n\tprepay_id\030\002 \001"
    "(\t\022\014\n\004sign\030\003 \001(\t\022\r\n\005appid\030\004 \001(\t\022\021\n\tnonce"
    "_str\030\005 \001(\t\022\021\n\ttimestamp\030\006 \001(\t\022\016\n\006mch_id\030"
    "\007 \001(\t\022\020\n\010platform\030\010 \001(\r\"N\n\024Msg_ProductSp"
    "ace_C2S\0226\n\rCategory_list\030\001 \003(\0132\037.dgame.P"
    "roductSpaceCategoryInfo\"a\n\024Msg_ProductSp"
    "ace_S2C\022\023\n\013return_code\030\001 \001(\r\0224\n\014Product_"
    "list\030\002 \003(\0132\036.dgame.ProductSpaceProductIn"
    "fo\"\257\001\n\tOrderInfo\022\030\n\005order\030\001 \001(\0132\t.CS.Ord"
    "er\022)\n\016order_receiver\030\002 \001(\0132\021.CS.OrderRec"
    "eiver\022\023\n\013has_invoice\030\003 \001(\010\022\'\n\rorder_invo"
    "ice\030\004 \001(\0132\020.CS.OrderInvoice\022\037\n\torder_log"
    "\030\005 \003(\0132\014.CS.OrderLog\"\247\001\n\005Order\022\n\n\002id\030\001 \002"
    "(\r\022\022\n\norder_code\030\002 \002(\t\022\016\n\006status\030\003 \001(\r\022\022"
    "\n\norder_time\030\004 \001(\003\022\"\n\ngoods_list\030\005 \003(\0132\016"
    ".CS.OrderGoods\022\016\n\006act_id\030\006 \001(\t\022\023\n\013total_"
    "price\030\007 \001(\002\022\021\n\ttotal_num\030\010 \001(\r\"\320\001\n\nOrder"
    "Goods\022\n\n\002id\030\001 \002(\r\022\014\n\004name\030\002 \001(\t\022\r\n\005price"
    "\030\003 \001(\002\022\013\n\003num\030\004 \001(\r\022\021\n\timage_url\030\005 \001(\t\022\r"
    "\n\005shape\030\006 \001(\t\022\014\n\004sign\030\007 \001(\t\022\022\n\nproduct_i"
    "d\030\010 \001(\t\022\017\n\007opus_id\030\t \001(\t\022\017\n\007ware_id\030\n \001("
    "\t\022&\n\017goods_part_list\030\013 \003(\0132\r.CS.GoodsPar"
    "t\"=\n\rOrderReceiver\022\014\n\004name\030\001 \001(\t\022\r\n\005phon"
    "e\030\002 \001(\t\022\017\n\007address\030\003 \001(\t\".\n\014OrderInvoice"
    "\022\r\n\005title\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\"0\n\010Orde"
    "rLog\022\023\n\013create_date\030\001 \001(\003\022\017\n\007content\030\002 \001"
    "(\t\"\034\n\nOrderQuery\022\016\n\006status\030\001 \001(\r\":\n\023quer"
    "y_all_order_req\022\020\n\010cur_page\030\001 \001(\r\022\021\n\tpag"
    "e_size\030\002 \001(\r\"\204\001\n\023query_all_order_res\022\035\n\n"
    "order_list\030\001 \003(\0132\t.CS.Order\022\022\n\ntotal_pag"
    "e\030\002 \001(\r\022\023\n\013result_code\030\003 \001(\t\022\022\n\nresult_d"
    "es\030\004 \001(\t\022\021\n\ttotal_num\030\005 \001(\r\"_\n\023query_con"
    "_order_req\022\020\n\010cur_page\030\001 \001(\r\022\021\n\tpage_siz"
    "e\030\002 \001(\r\022#\n\013order_query\030\003 \001(\0132\016.CS.OrderQ"
    "uery\"\204\001\n\023query_con_order_res\022\035\n\norder_li"
    "st\030\001 \003(\0132\t.CS.Order\022\022\n\ntotal_page\030\002 \001(\r\022"
    "\023\n\013result_code\030\003 \001(\t\022\022\n\nresult_des\030\004 \001(\t"
    "\022\021\n\ttotal_num\030\005 \001(\r\",\n\026query_single_orde"
    "r_req\022\022\n\norder_code\030\001 \001(\t\"c\n\026query_singl"
    "e_order_res\022 \n\torderInfo\030\001 \001(\0132\r.CS.Orde"
    "rInfo\022\023\n\013result_code\030\002 \001(\t\022\022\n\nresult_des"
    "\030\003 \001(\t\"!\n\037Msg_CooperationProductSpace_C2"
    "S\"k\n\037Msg_CooperationProductSpace_S2C\022\023\n\013"
    "return_code\030\001 \001(\r\0223\n\014Product_list\030\002 \003(\0132"
    "\035.dgame.CooperationProductInfo\"\210\001\n\006PayRe"
    "q\022\014\n\004type\030\001 \002(\r\022\n\n\002ip\030\002 \001(\t\022\017\n\007subject\030\003"
    " \001(\t\022\014\n\004body\030\004 \001(\t\022\020\n\010totalFee\030\005 \002(\r\022\016\n\006"
    "appenv\030\006 \001(\t\022\022\n\noutContext\030\007 \001(\t\022\017\n\007orde"
    "rSn\030\010 \002(\t\"\027\n\007PayResp\022\014\n\004data\030\001 \002(\t\"\316\002\n\016C"
    "reateOrderReq\022\022\n\norder_time\030\001 \001(\003\022\016\n\006act"
    "_id\030\002 \002(\t\022\025\n\rreceiver_name\030\003 \001(\t\022\026\n\016rece"
    "iver_phone\030\004 \001(\t\022\030\n\020receiver_address\030\005 \001"
    "(\t\022\023\n\013has_invoice\030\006 \001(\010\022\025\n\rinvoice_title"
    "\030\007 \001(\t\022\027\n\017invoice_content\030\010 \001(\t\022+\n\007pay_w"
    "ay\030\t \001(\0162\032.CS.CreateOrderReq.PayType\022\035\n\n"
    "goods_list\030\n \003(\0132\t.CS.Goods\022\014\n\004desc\030\013 \001("
    "\t\022\020\n\010zip_code\030\014 \001(\t\"\036\n\007PayType\022\007\n\003ZFB\020\001\022"
    "\n\n\006WECHAT\020\002\"\242\001\n\005Goods\022\014\n\004name\030\001 \001(\t\022\r\n\005p"
    "rice\030\002 \001(\002\022\013\n\003num\030\003 \001(\r\022\021\n\timage_url\030\004 \001"
    "(\t\022\022\n\nproduct_id\030\005 \001(\t\022\017\n\007opus_id\030\006 \001(\t\022"
    "\017\n\007ware_id\030\007 \001(\t\022&\n\017goods_part_list\030\010 \003("
    "\0132\r.CS.GoodsPart\",\n\tGoodsPart\022\017\n\007part_id"
    "\030\001 \001(\t\022\016\n\006mat_id\030\002 \001(\t\"$\n\016CreateOrderRes"
    "\022\022\n\norder_code\030\001 \001(\t\")\n\025GoodsProductStat"
    "usReq\022\020\n\010goods_id\030\001 \002(\r\"\334\001\n\025GoodsProduct"
    "StatusRes\022\022\n\ngoods_name\030\001 \001(\t\022=\n\014goods_s"
    "tatus\030\002 \001(\0162\'.CS.GoodsProductStatusRes.P"
    "roductStatus\"p\n\rProductStatus\022\023\n\017WAIT_PR"
    "ODUCTION\020\001\022\016\n\nPRODUCTING\020\002\022\n\n\006WIRING\020\003\022\010"
    "\n\004PEND\020\004\022\014\n\010STAMPING\020\005\022\t\n\005CHECK\020\006\022\013\n\007INB"
    "OUND\020\007\"}\n\024ChooseOrderPayWayReq\022\022\n\norder_"
    "code\030\001 \002(\t\0221\n\007pay_way\030\002 \001(\0162 .CS.ChooseO"
    "rderPayWayReq.PayType\"\036\n\007PayType\022\007\n\003ZFB\020"
    "\001\022\n\n\006WECHAT\020\002\"*\n\024ChooseOrderPayWayRes\022\022\n"
    "\norder_code\030\001 \001(\t\"$\n\016DeleteOrderReq\022\022\n\no"
    "rder_code\030\001 \002(\t\"H\n\016DeleteOrderRes\022\022\n\nord"
    "er_code\030\001 \001(\t\022\"\n\006result\030\002 \001(\0162\022.CS.Order"
    "CmdResult\"U\n\016CancelOrderReq\022\022\n\norder_cod"
    "e\030\001 \002(\t\022/\n\rcancel_reason\030\002 \001(\0162\030.dgame.O"
    "rderCancelReason\"H\n\016CancelOrderRes\022\022\n\nor"
    "der_code\030\001 \001(\t\022\"\n\006result\030\002 \001(\0162\022.CS.Orde"
    "rCmdResult\"\'\n\021ConfirmGrOrderReq\022\022\n\norder"
    "_code\030\001 \002(\t\"K\n\021ConfirmGrOrderRes\022\022\n\norde"
    "r_code\030\001 \001(\t\022\"\n\006result\030\002 \001(\0162\022.CS.OrderC"
    "mdResult\"a\n\rJudgeOrderReq\022\022\n\norder_code\030"
    "\001 \002(\t\022\022\n\njudge_time\030\002 \001(\003\022(\n\020goods_judge"
    "_list\030\003 \003(\0132\016.CS.GoodsJudge\"G\n\rJudgeOrde"
    "rRes\022\022\n\norder_code\030\001 \001(\t\022\"\n\006result\030\002 \001(\016"
    "2\022.CS.OrderCmdResult\"R\n\nGoodsJudge\022\017\n\007co"
    "ntent\030\001 \001(\t\022\022\n\njudge_time\030\002 \001(\003\022\r\n\005level"
    "\030\003 \001(\005\022\020\n\010goods_id\030\004 \002(\t\"3\n\rDelayOrderRe"
    "q\022\022\n\norder_code\030\001 \002(\t\022\016\n\006reason\030\002 \001(\t\"G\n"
    "\rDelayOrderRes\022\022\n\norder_code\030\001 \001(\t\022\"\n\006re"
    "sult\030\002 \001(\0162\022.CS.OrderCmdResult\"*\n\007OpusRe"
    "q\022\016\n\006opusId\030\001 \002(\003\022\017\n\007retCode\030\002 \001(\t\"-\n\nOw"
    "nOpusReq\022\016\n\006userId\030\001 \002(\003\022\017\n\007retCode\030\002 \001("
    "\t\"\302\002\n\006OpusBo\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\n"
    "\n\002sn\030\003 \001(\t\022\r\n\005style\030\004 \001(\t\022\014\n\004size\030\005 \001(\t\022"
    "\023\n\013isRecommend\030\006 \001(\005\022\025\n\rpartAttribute\030\007 "
    "\001(\t\022\017\n\007isGoods\030\010 \001(\005\022\023\n\013description\030\t \001("
    "\t\022\020\n\010opusShot\030\n \001(\t\022\016\n\006userId\030\013 \001(\003\022\020\n\010u"
    "serName\030\021 \001(\t\022\022\n\ncreateDate\030\014 \001(\t\022\016\n\006sta"
    "tus\030\017 \001(\005\022\016\n\006remark\030\020 \001(\t\022\034\n\010opusList\030\r "
    "\003(\0132\n.CS.OpusBo\022\014\n\004code\030\016 \001(\t\022\017\n\007retCode"
    "\030\022 \001(\t\"P\n\013OpusCoopReq\022\r\n\005actId\030\001 \001(\t\022\022\n\n"
    "categoryId\030\002 \001(\003\022\r\n\005style\030\003 \001(\t\022\017\n\007retCo"
    "de\030\004 \001(\t\"d\n\022PublishOpusCoopReq\022\r\n\005actId\030"
    "\001 \002(\t\022\016\n\006opusId\030\002 \002(\003\022\016\n\006userId\030\003 \002(\003\022\016\n"
    "\006remark\030\004 \002(\t\022\017\n\007retCode\030\005 \001(\t\"P\n\016AddOpu"
    "sCoopReq\022\r\n\005actId\030\001 \002(\t\022\016\n\006opusId\030\002 \002(\003\022"
    "\016\n\006userId\030\003 \002(\003\022\017\n\007retCode\030\004 \001(\t\"\257\002\n\nOpu"
    "sCoopBo\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\016\n\006opu"
    "sId\030\003 \001(\003\022\020\n\010opusShot\030\016 \001(\t\022\016\n\006userId\030\004 "
    "\001(\003\022\020\n\010userName\030\014 \001(\t\022\022\n\ncoopUserId\030\005 \001("
    "\003\022\024\n\014coopUserName\030\r \001(\t\022\016\n\006status\030\006 \001(\005\022"
    "\014\n\004type\030\007 \001(\005\022\016\n\006remark\030\010 \001(\t\022\022\n\ncreateD"
    "ate\030\t \001(\t\022\022\n\nupdateDate\030\020 \001(\t\022$\n\014opusCoo"
    "pList\030\n \003(\0132\016.CS.OpusCoopBo\022\014\n\004code\030\013 \001("
    "\t\022\017\n\007retCode\030\017 \001(\t\"8\n\020PaySyncResultReq\022\024"
    "\n\014resultStatus\030\001 \002(\t\022\016\n\006result\030\002 \002(\t\"!\n\021"
    "PaySyncResultResp\022\014\n\004data\030\001 \002(\t\"\310\001\n\014User"
    "Receiver\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\r\n\005ph"
    "one\030\003 \001(\t\022\020\n\010zip_code\030\004 \001(\t\022\014\n\004area\030\005 \001("
    "\t\022\017\n\007address\030\006 \001(\t\022\022\n\narea_store\030\007 \001(\t\022\022"
    "\n\nis_default\030\010 \001(\010\022\016\n\006act_id\030\t \001(\t\022\016\n\006st"
    "reet\030\n \001(\t\022\026\n\016address_detail\030\013 \001(\t\"*\n\024qu"
    "eryUserReceiverReq\022\022\n\naccount_id\030\001 \002(\t\"\?"
    "\n\024queryUserReceiverRes\022\'\n\rreceiver_list\030"
    "\001 \003(\0132\020.CS.UserReceiver\"@\n\025createUserRec"
    "eiverReq\022\'\n\ruser_receiver\030\001 \002(\0132\020.CS.Use"
    "rReceiver\">\n\025createUserReceiverRes\022%\n\006re"
    "sult\030\001 \002(\0162\025.CS.ReceiverCmdResult\"@\n\025upd"
    "ateUserReceiverReq\022\'\n\ruser_receiver\030\001 \002("
    "\0132\020.CS.UserReceiver\">\n\025updateUserReceive"
    "rRes\022%\n\006result\030\001 \002(\0162\025.CS.ReceiverCmdRes"
    "ult\"*\n\034createDefaultUserReceiverReq\022\n\n\002i"
    "d\030\001 \002(\005\"E\n\034createDefaultUserReceiverRes\022"
    "%\n\006result\030\001 \002(\0162\025.CS.ReceiverCmdResult\"#"
    "\n\025deleteUserReceiverReq\022\n\n\002id\030\001 \002(\005\">\n\025d"
    "eleteUserReceiverRes\022%\n\006result\030\001 \002(\0162\025.C"
    "S.ReceiverCmdResult\"*\n\004Area\022\017\n\007area_no\030\001"
    " \001(\t\022\021\n\tarea_name\030\002 \001(\t\"\'\n\021queryAreaFirs"
    "tReq\022\022\n\naccount_id\030\001 \002(\t\",\n\022queryAreaFir"
    "stResp\022\026\n\004area\030\001 \003(\0132\010.CS.Area\"%\n\022queryA"
    "reaSecondReq\022\017\n\007area_no\030\001 \002(\t\"2\n\023queryAr"
    "eaSecondResp\022\033\n\tarea_list\030\001 \003(\0132\010.CS.Are"
    "a\"$\n\021queryAreaThreeReq\022\017\n\007area_no\030\001 \002(\t\""
    "1\n\022queryAreaThreeResp\022\033\n\tarea_list\030\001 \003(\013"
    "2\010.CS.Area*,\n\016OrderCmdResult\022\014\n\007SUCCESS\020"
    "\310\001\022\014\n\007FAILURE\020\312\001*A\n\021ReceiverCmdResult\022\025\n"
    "\020Receiver_SUCCESS\020\310\001\022\025\n\020Receiver_FAILURE"
    "\020\312\001*2\n\nAreaResult\022\021\n\014Area_SUCCESS\020\310\001\022\021\n\014"
    "Area_FAILURE\020\312\001", 11135);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common_msg.proto", &protobuf_RegisterTypes);
  MapPos::default_instance_ = new MapPos();
  OtherUserInfo::default_instance_ = new OtherUserInfo();
  Msg_HeartBeat_C2S::default_instance_ = new Msg_HeartBeat_C2S();
  Msg_HeartBeat_S2C::default_instance_ = new Msg_HeartBeat_S2C();
  Msg_TargetServerInvalid_S2C::default_instance_ = new Msg_TargetServerInvalid_S2C();
  Msg_OtherUserList_G2C::default_instance_ = new Msg_OtherUserList_G2C();
  Msg_UserEnterScene_C2G::default_instance_ = new Msg_UserEnterScene_C2G();
  Msg_UserLeaveScene_C2G::default_instance_ = new Msg_UserLeaveScene_C2G();
  Msg_UserLeaveScene_G2C::default_instance_ = new Msg_UserLeaveScene_G2C();
  Msg_Goto_C2G::default_instance_ = new Msg_Goto_C2G();
  Msg_Goto_G2C::default_instance_ = new Msg_Goto_G2C();
  Msg_Equipment_C2S::default_instance_ = new Msg_Equipment_C2S();
  Msg_Equipment_S2C::default_instance_ = new Msg_Equipment_S2C();
  Msg_GM_C2S::default_instance_ = new Msg_GM_C2S();
  Msg_UserBaseInfoModify_C2S::default_instance_ = new Msg_UserBaseInfoModify_C2S();
  Msg_UserBaseInfoModify_S2C::default_instance_ = new Msg_UserBaseInfoModify_S2C();
  Msg_UserInfoModify_C2S::default_instance_ = new Msg_UserInfoModify_C2S();
  Msg_UserInfoModify_S2C::default_instance_ = new Msg_UserInfoModify_S2C();
  Msg_DesignProduct_C2S::default_instance_ = new Msg_DesignProduct_C2S();
  Msg_DesignProduct_S2C::default_instance_ = new Msg_DesignProduct_S2C();
  Msg_UserProductList_C2S::default_instance_ = new Msg_UserProductList_C2S();
  Msg_UserProductList_S2C::default_instance_ = new Msg_UserProductList_S2C();
  Msg_UserProductDetail_C2S::default_instance_ = new Msg_UserProductDetail_C2S();
  Msg_UserProductDetail_S2C::default_instance_ = new Msg_UserProductDetail_S2C();
  Msg_ServerTime_C2S::default_instance_ = new Msg_ServerTime_C2S();
  Msg_ServerTime_S2C::default_instance_ = new Msg_ServerTime_S2C();
  Msg_GoodsRecommend_C2S::default_instance_ = new Msg_GoodsRecommend_C2S();
  Msg_GoodsRecommend_S2C::default_instance_ = new Msg_GoodsRecommend_S2C();
  Msg_GoodsSearch_C2S::default_instance_ = new Msg_GoodsSearch_C2S();
  Msg_GoodsSearch_S2C::default_instance_ = new Msg_GoodsSearch_S2C();
  Msg_Chat_C2S::default_instance_ = new Msg_Chat_C2S();
  Msg_Chat_S2C::default_instance_ = new Msg_Chat_S2C();
  Msg_Chat_Notify_S2C::default_instance_ = new Msg_Chat_Notify_S2C();
  Msg_CreateOrder_C2S::default_instance_ = new Msg_CreateOrder_C2S();
  Msg_CreateOrder_S2C::default_instance_ = new Msg_CreateOrder_S2C();
  Msg_AddItemToShoppingCart_C2S::default_instance_ = new Msg_AddItemToShoppingCart_C2S();
  Msg_AddItemToShoppingCart_S2C::default_instance_ = new Msg_AddItemToShoppingCart_S2C();
  Msg_ShoppingCartItemList_C2S::default_instance_ = new Msg_ShoppingCartItemList_C2S();
  Msg_ShoppingCartItemList_S2C::default_instance_ = new Msg_ShoppingCartItemList_S2C();
  Msg_Feedback_C2S::default_instance_ = new Msg_Feedback_C2S();
  Msg_Feedback_S2C::default_instance_ = new Msg_Feedback_S2C();
  Msg_DesignerApply_C2S::default_instance_ = new Msg_DesignerApply_C2S();
  Msg_DesignerApply_S2C::default_instance_ = new Msg_DesignerApply_S2C();
  Msg_ProductSketchUpload_C2S::default_instance_ = new Msg_ProductSketchUpload_C2S();
  Msg_ProductSketchUpload_S2C::default_instance_ = new Msg_ProductSketchUpload_S2C();
  Msg_PointSourceList_C2S::default_instance_ = new Msg_PointSourceList_C2S();
  Msg_PointSourceList_S2C::default_instance_ = new Msg_PointSourceList_S2C();
  Msg_WithdrawMoney_C2S::default_instance_ = new Msg_WithdrawMoney_C2S();
  Msg_WithdrawMoney_S2C::default_instance_ = new Msg_WithdrawMoney_S2C();
  Msg_MyOriginalProductList_C2S::default_instance_ = new Msg_MyOriginalProductList_C2S();
  Msg_MyOriginalProductList_S2C::default_instance_ = new Msg_MyOriginalProductList_S2C();
  Msg_BindBankAccount_C2S::default_instance_ = new Msg_BindBankAccount_C2S();
  Msg_BindBankAccount_S2C::default_instance_ = new Msg_BindBankAccount_S2C();
  Msg_BindBankAccountList_C2S::default_instance_ = new Msg_BindBankAccountList_C2S();
  Msg_BindBankAccountList_S2C::default_instance_ = new Msg_BindBankAccountList_S2C();
  Msg_OriginalProductProfitList_C2S::default_instance_ = new Msg_OriginalProductProfitList_C2S();
  Msg_OriginalProductProfitList_S2C::default_instance_ = new Msg_OriginalProductProfitList_S2C();
  Msg_OriginalProductProfitDetailList_C2S::default_instance_ = new Msg_OriginalProductProfitDetailList_C2S();
  Msg_OriginalProductProfitDetailList_S2C::default_instance_ = new Msg_OriginalProductProfitDetailList_S2C();
  Msg_OriginalProductProfitDetail_C2S::default_instance_ = new Msg_OriginalProductProfitDetail_C2S();
  Msg_OriginalProductProfitDetail_S2C::default_instance_ = new Msg_OriginalProductProfitDetail_S2C();
  Msg_OriginalProductDetail_C2S::default_instance_ = new Msg_OriginalProductDetail_C2S();
  Msg_OriginalProductDetail_S2C::default_instance_ = new Msg_OriginalProductDetail_S2C();
  Msg_OriginalProductModify_C2S::default_instance_ = new Msg_OriginalProductModify_C2S();
  Msg_OriginalProductModify_S2C::default_instance_ = new Msg_OriginalProductModify_S2C();
  Msg_ProfitList_C2S::default_instance_ = new Msg_ProfitList_C2S();
  Msg_ProfitList_S2C::default_instance_ = new Msg_ProfitList_S2C();
  Msg_Gold2Money_C2S::default_instance_ = new Msg_Gold2Money_C2S();
  Msg_Gold2Money_S2C::default_instance_ = new Msg_Gold2Money_S2C();
  Msg_CouponList_C2S::default_instance_ = new Msg_CouponList_C2S();
  Msg_CouponList_S2C::default_instance_ = new Msg_CouponList_S2C();
  Msg_GlodPercent_C2S::default_instance_ = new Msg_GlodPercent_C2S();
  Msg_GlodPercent_S2C::default_instance_ = new Msg_GlodPercent_S2C();
  Msg_TradeDetailList_C2S::default_instance_ = new Msg_TradeDetailList_C2S();
  Msg_TradeDetailList_S2C::default_instance_ = new Msg_TradeDetailList_S2C();
  Msg_PrePayOrderCreate_C2S::default_instance_ = new Msg_PrePayOrderCreate_C2S();
  Msg_PrePayOrderCreate_S2C::default_instance_ = new Msg_PrePayOrderCreate_S2C();
  Msg_ProductSpace_C2S::default_instance_ = new Msg_ProductSpace_C2S();
  Msg_ProductSpace_S2C::default_instance_ = new Msg_ProductSpace_S2C();
  OrderInfo::default_instance_ = new OrderInfo();
  Order::default_instance_ = new Order();
  OrderGoods::default_instance_ = new OrderGoods();
  OrderReceiver::default_instance_ = new OrderReceiver();
  OrderInvoice::default_instance_ = new OrderInvoice();
  OrderLog::default_instance_ = new OrderLog();
  OrderQuery::default_instance_ = new OrderQuery();
  query_all_order_req::default_instance_ = new query_all_order_req();
  query_all_order_res::default_instance_ = new query_all_order_res();
  query_con_order_req::default_instance_ = new query_con_order_req();
  query_con_order_res::default_instance_ = new query_con_order_res();
  query_single_order_req::default_instance_ = new query_single_order_req();
  query_single_order_res::default_instance_ = new query_single_order_res();
  Msg_CooperationProductSpace_C2S::default_instance_ = new Msg_CooperationProductSpace_C2S();
  Msg_CooperationProductSpace_S2C::default_instance_ = new Msg_CooperationProductSpace_S2C();
  PayReq::default_instance_ = new PayReq();
  PayResp::default_instance_ = new PayResp();
  CreateOrderReq::default_instance_ = new CreateOrderReq();
  Goods::default_instance_ = new Goods();
  GoodsPart::default_instance_ = new GoodsPart();
  CreateOrderRes::default_instance_ = new CreateOrderRes();
  GoodsProductStatusReq::default_instance_ = new GoodsProductStatusReq();
  GoodsProductStatusRes::default_instance_ = new GoodsProductStatusRes();
  ChooseOrderPayWayReq::default_instance_ = new ChooseOrderPayWayReq();
  ChooseOrderPayWayRes::default_instance_ = new ChooseOrderPayWayRes();
  DeleteOrderReq::default_instance_ = new DeleteOrderReq();
  DeleteOrderRes::default_instance_ = new DeleteOrderRes();
  CancelOrderReq::default_instance_ = new CancelOrderReq();
  CancelOrderRes::default_instance_ = new CancelOrderRes();
  ConfirmGrOrderReq::default_instance_ = new ConfirmGrOrderReq();
  ConfirmGrOrderRes::default_instance_ = new ConfirmGrOrderRes();
  JudgeOrderReq::default_instance_ = new JudgeOrderReq();
  JudgeOrderRes::default_instance_ = new JudgeOrderRes();
  GoodsJudge::default_instance_ = new GoodsJudge();
  DelayOrderReq::default_instance_ = new DelayOrderReq();
  DelayOrderRes::default_instance_ = new DelayOrderRes();
  OpusReq::default_instance_ = new OpusReq();
  OwnOpusReq::default_instance_ = new OwnOpusReq();
  OpusBo::default_instance_ = new OpusBo();
  OpusCoopReq::default_instance_ = new OpusCoopReq();
  PublishOpusCoopReq::default_instance_ = new PublishOpusCoopReq();
  AddOpusCoopReq::default_instance_ = new AddOpusCoopReq();
  OpusCoopBo::default_instance_ = new OpusCoopBo();
  PaySyncResultReq::default_instance_ = new PaySyncResultReq();
  PaySyncResultResp::default_instance_ = new PaySyncResultResp();
  UserReceiver::default_instance_ = new UserReceiver();
  queryUserReceiverReq::default_instance_ = new queryUserReceiverReq();
  queryUserReceiverRes::default_instance_ = new queryUserReceiverRes();
  createUserReceiverReq::default_instance_ = new createUserReceiverReq();
  createUserReceiverRes::default_instance_ = new createUserReceiverRes();
  updateUserReceiverReq::default_instance_ = new updateUserReceiverReq();
  updateUserReceiverRes::default_instance_ = new updateUserReceiverRes();
  createDefaultUserReceiverReq::default_instance_ = new createDefaultUserReceiverReq();
  createDefaultUserReceiverRes::default_instance_ = new createDefaultUserReceiverRes();
  deleteUserReceiverReq::default_instance_ = new deleteUserReceiverReq();
  deleteUserReceiverRes::default_instance_ = new deleteUserReceiverRes();
  Area::default_instance_ = new Area();
  queryAreaFirstReq::default_instance_ = new queryAreaFirstReq();
  queryAreaFirstResp::default_instance_ = new queryAreaFirstResp();
  queryAreaSecondReq::default_instance_ = new queryAreaSecondReq();
  queryAreaSecondResp::default_instance_ = new queryAreaSecondResp();
  queryAreaThreeReq::default_instance_ = new queryAreaThreeReq();
  queryAreaThreeResp::default_instance_ = new queryAreaThreeResp();
  MapPos::default_instance_->InitAsDefaultInstance();
  OtherUserInfo::default_instance_->InitAsDefaultInstance();
  Msg_HeartBeat_C2S::default_instance_->InitAsDefaultInstance();
  Msg_HeartBeat_S2C::default_instance_->InitAsDefaultInstance();
  Msg_TargetServerInvalid_S2C::default_instance_->InitAsDefaultInstance();
  Msg_OtherUserList_G2C::default_instance_->InitAsDefaultInstance();
  Msg_UserEnterScene_C2G::default_instance_->InitAsDefaultInstance();
  Msg_UserLeaveScene_C2G::default_instance_->InitAsDefaultInstance();
  Msg_UserLeaveScene_G2C::default_instance_->InitAsDefaultInstance();
  Msg_Goto_C2G::default_instance_->InitAsDefaultInstance();
  Msg_Goto_G2C::default_instance_->InitAsDefaultInstance();
  Msg_Equipment_C2S::default_instance_->InitAsDefaultInstance();
  Msg_Equipment_S2C::default_instance_->InitAsDefaultInstance();
  Msg_GM_C2S::default_instance_->InitAsDefaultInstance();
  Msg_UserBaseInfoModify_C2S::default_instance_->InitAsDefaultInstance();
  Msg_UserBaseInfoModify_S2C::default_instance_->InitAsDefaultInstance();
  Msg_UserInfoModify_C2S::default_instance_->InitAsDefaultInstance();
  Msg_UserInfoModify_S2C::default_instance_->InitAsDefaultInstance();
  Msg_DesignProduct_C2S::default_instance_->InitAsDefaultInstance();
  Msg_DesignProduct_S2C::default_instance_->InitAsDefaultInstance();
  Msg_UserProductList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_UserProductList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_UserProductDetail_C2S::default_instance_->InitAsDefaultInstance();
  Msg_UserProductDetail_S2C::default_instance_->InitAsDefaultInstance();
  Msg_ServerTime_C2S::default_instance_->InitAsDefaultInstance();
  Msg_ServerTime_S2C::default_instance_->InitAsDefaultInstance();
  Msg_GoodsRecommend_C2S::default_instance_->InitAsDefaultInstance();
  Msg_GoodsRecommend_S2C::default_instance_->InitAsDefaultInstance();
  Msg_GoodsSearch_C2S::default_instance_->InitAsDefaultInstance();
  Msg_GoodsSearch_S2C::default_instance_->InitAsDefaultInstance();
  Msg_Chat_C2S::default_instance_->InitAsDefaultInstance();
  Msg_Chat_S2C::default_instance_->InitAsDefaultInstance();
  Msg_Chat_Notify_S2C::default_instance_->InitAsDefaultInstance();
  Msg_CreateOrder_C2S::default_instance_->InitAsDefaultInstance();
  Msg_CreateOrder_S2C::default_instance_->InitAsDefaultInstance();
  Msg_AddItemToShoppingCart_C2S::default_instance_->InitAsDefaultInstance();
  Msg_AddItemToShoppingCart_S2C::default_instance_->InitAsDefaultInstance();
  Msg_ShoppingCartItemList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_ShoppingCartItemList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_Feedback_C2S::default_instance_->InitAsDefaultInstance();
  Msg_Feedback_S2C::default_instance_->InitAsDefaultInstance();
  Msg_DesignerApply_C2S::default_instance_->InitAsDefaultInstance();
  Msg_DesignerApply_S2C::default_instance_->InitAsDefaultInstance();
  Msg_ProductSketchUpload_C2S::default_instance_->InitAsDefaultInstance();
  Msg_ProductSketchUpload_S2C::default_instance_->InitAsDefaultInstance();
  Msg_PointSourceList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_PointSourceList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_WithdrawMoney_C2S::default_instance_->InitAsDefaultInstance();
  Msg_WithdrawMoney_S2C::default_instance_->InitAsDefaultInstance();
  Msg_MyOriginalProductList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_MyOriginalProductList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_BindBankAccount_C2S::default_instance_->InitAsDefaultInstance();
  Msg_BindBankAccount_S2C::default_instance_->InitAsDefaultInstance();
  Msg_BindBankAccountList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_BindBankAccountList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductProfitList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductProfitList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductProfitDetailList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductProfitDetailList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductProfitDetail_C2S::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductProfitDetail_S2C::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductDetail_C2S::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductDetail_S2C::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductModify_C2S::default_instance_->InitAsDefaultInstance();
  Msg_OriginalProductModify_S2C::default_instance_->InitAsDefaultInstance();
  Msg_ProfitList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_ProfitList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_Gold2Money_C2S::default_instance_->InitAsDefaultInstance();
  Msg_Gold2Money_S2C::default_instance_->InitAsDefaultInstance();
  Msg_CouponList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_CouponList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_GlodPercent_C2S::default_instance_->InitAsDefaultInstance();
  Msg_GlodPercent_S2C::default_instance_->InitAsDefaultInstance();
  Msg_TradeDetailList_C2S::default_instance_->InitAsDefaultInstance();
  Msg_TradeDetailList_S2C::default_instance_->InitAsDefaultInstance();
  Msg_PrePayOrderCreate_C2S::default_instance_->InitAsDefaultInstance();
  Msg_PrePayOrderCreate_S2C::default_instance_->InitAsDefaultInstance();
  Msg_ProductSpace_C2S::default_instance_->InitAsDefaultInstance();
  Msg_ProductSpace_S2C::default_instance_->InitAsDefaultInstance();
  OrderInfo::default_instance_->InitAsDefaultInstance();
  Order::default_instance_->InitAsDefaultInstance();
  OrderGoods::default_instance_->InitAsDefaultInstance();
  OrderReceiver::default_instance_->InitAsDefaultInstance();
  OrderInvoice::default_instance_->InitAsDefaultInstance();
  OrderLog::default_instance_->InitAsDefaultInstance();
  OrderQuery::default_instance_->InitAsDefaultInstance();
  query_all_order_req::default_instance_->InitAsDefaultInstance();
  query_all_order_res::default_instance_->InitAsDefaultInstance();
  query_con_order_req::default_instance_->InitAsDefaultInstance();
  query_con_order_res::default_instance_->InitAsDefaultInstance();
  query_single_order_req::default_instance_->InitAsDefaultInstance();
  query_single_order_res::default_instance_->InitAsDefaultInstance();
  Msg_CooperationProductSpace_C2S::default_instance_->InitAsDefaultInstance();
  Msg_CooperationProductSpace_S2C::default_instance_->InitAsDefaultInstance();
  PayReq::default_instance_->InitAsDefaultInstance();
  PayResp::default_instance_->InitAsDefaultInstance();
  CreateOrderReq::default_instance_->InitAsDefaultInstance();
  Goods::default_instance_->InitAsDefaultInstance();
  GoodsPart::default_instance_->InitAsDefaultInstance();
  CreateOrderRes::default_instance_->InitAsDefaultInstance();
  GoodsProductStatusReq::default_instance_->InitAsDefaultInstance();
  GoodsProductStatusRes::default_instance_->InitAsDefaultInstance();
  ChooseOrderPayWayReq::default_instance_->InitAsDefaultInstance();
  ChooseOrderPayWayRes::default_instance_->InitAsDefaultInstance();
  DeleteOrderReq::default_instance_->InitAsDefaultInstance();
  DeleteOrderRes::default_instance_->InitAsDefaultInstance();
  CancelOrderReq::default_instance_->InitAsDefaultInstance();
  CancelOrderRes::default_instance_->InitAsDefaultInstance();
  ConfirmGrOrderReq::default_instance_->InitAsDefaultInstance();
  ConfirmGrOrderRes::default_instance_->InitAsDefaultInstance();
  JudgeOrderReq::default_instance_->InitAsDefaultInstance();
  JudgeOrderRes::default_instance_->InitAsDefaultInstance();
  GoodsJudge::default_instance_->InitAsDefaultInstance();
  DelayOrderReq::default_instance_->InitAsDefaultInstance();
  DelayOrderRes::default_instance_->InitAsDefaultInstance();
  OpusReq::default_instance_->InitAsDefaultInstance();
  OwnOpusReq::default_instance_->InitAsDefaultInstance();
  OpusBo::default_instance_->InitAsDefaultInstance();
  OpusCoopReq::default_instance_->InitAsDefaultInstance();
  PublishOpusCoopReq::default_instance_->InitAsDefaultInstance();
  AddOpusCoopReq::default_instance_->InitAsDefaultInstance();
  OpusCoopBo::default_instance_->InitAsDefaultInstance();
  PaySyncResultReq::default_instance_->InitAsDefaultInstance();
  PaySyncResultResp::default_instance_->InitAsDefaultInstance();
  UserReceiver::default_instance_->InitAsDefaultInstance();
  queryUserReceiverReq::default_instance_->InitAsDefaultInstance();
  queryUserReceiverRes::default_instance_->InitAsDefaultInstance();
  createUserReceiverReq::default_instance_->InitAsDefaultInstance();
  createUserReceiverRes::default_instance_->InitAsDefaultInstance();
  updateUserReceiverReq::default_instance_->InitAsDefaultInstance();
  updateUserReceiverRes::default_instance_->InitAsDefaultInstance();
  createDefaultUserReceiverReq::default_instance_->InitAsDefaultInstance();
  createDefaultUserReceiverRes::default_instance_->InitAsDefaultInstance();
  deleteUserReceiverReq::default_instance_->InitAsDefaultInstance();
  deleteUserReceiverRes::default_instance_->InitAsDefaultInstance();
  Area::default_instance_->InitAsDefaultInstance();
  queryAreaFirstReq::default_instance_->InitAsDefaultInstance();
  queryAreaFirstResp::default_instance_->InitAsDefaultInstance();
  queryAreaSecondReq::default_instance_->InitAsDefaultInstance();
  queryAreaSecondResp::default_instance_->InitAsDefaultInstance();
  queryAreaThreeReq::default_instance_->InitAsDefaultInstance();
  queryAreaThreeResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_5fmsg_2eproto {
  StaticDescriptorInitializer_common_5fmsg_2eproto() {
    protobuf_AddDesc_common_5fmsg_2eproto();
  }
} static_descriptor_initializer_common_5fmsg_2eproto_;
const ::google::protobuf::EnumDescriptor* OrderCmdResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderCmdResult_descriptor_;
}
bool OrderCmdResult_IsValid(int value) {
  switch(value) {
    case 200:
    case 202:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReceiverCmdResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReceiverCmdResult_descriptor_;
}
bool ReceiverCmdResult_IsValid(int value) {
  switch(value) {
    case 200:
    case 202:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AreaResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AreaResult_descriptor_;
}
bool AreaResult_IsValid(int value) {
  switch(value) {
    case 200:
    case 202:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MapPos::kXFieldNumber;
const int MapPos::kYFieldNumber;
const int MapPos::kZFieldNumber;
#endif  // !_MSC_VER

MapPos::MapPos()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MapPos::InitAsDefaultInstance() {
}

MapPos::MapPos(const MapPos& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MapPos::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapPos::~MapPos() {
  SharedDtor();
}

void MapPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MapPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapPos_descriptor_;
}

const MapPos& MapPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

MapPos* MapPos::default_instance_ = NULL;

MapPos* MapPos::New() const {
  return new MapPos;
}

void MapPos::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    x_ = 0;
    y_ = 0;
    z_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MapPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_z;
        break;
      }

      // required int32 z = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MapPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // required int32 z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MapPos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // required int32 z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MapPos::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // required int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // required int32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->z());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapPos::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MapPos* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MapPos*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MapPos::MergeFrom(const MapPos& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MapPos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapPos::CopyFrom(const MapPos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapPos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MapPos::Swap(MapPos* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MapPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapPos_descriptor_;
  metadata.reflection = MapPos_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OtherUserInfo::kUserIdFieldNumber;
const int OtherUserInfo::kUserNameFieldNumber;
const int OtherUserInfo::kCurPosFieldNumber;
const int OtherUserInfo::kEquipmentListFieldNumber;
#endif  // !_MSC_VER

OtherUserInfo::OtherUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OtherUserInfo::InitAsDefaultInstance() {
  cur_pos_ = const_cast< ::CS::MapPos*>(&::CS::MapPos::default_instance());
}

OtherUserInfo::OtherUserInfo(const OtherUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OtherUserInfo::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cur_pos_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OtherUserInfo::~OtherUserInfo() {
  SharedDtor();
}

void OtherUserInfo::SharedDtor() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete user_name_;
  }
  if (this != default_instance_) {
    delete cur_pos_;
  }
}

void OtherUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OtherUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OtherUserInfo_descriptor_;
}

const OtherUserInfo& OtherUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OtherUserInfo* OtherUserInfo::default_instance_ = NULL;

OtherUserInfo* OtherUserInfo::New() const {
  return new OtherUserInfo;
}

void OtherUserInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    user_id_ = 0u;
    if (has_user_name()) {
      if (user_name_ != &::google::protobuf::internal::kEmptyString) {
        user_name_->clear();
      }
    }
    if (has_cur_pos()) {
      if (cur_pos_ != NULL) cur_pos_->::CS::MapPos::Clear();
    }
  }
  equipment_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OtherUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // required string user_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cur_pos;
        break;
      }

      // required .CS.MapPos cur_pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cur_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_pos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_equipment_list;
        break;
      }

      // repeated .dgame.EquipmentData equipment_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equipment_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipment_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_equipment_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OtherUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // required string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->user_name(), output);
  }

  // required .CS.MapPos cur_pos = 3;
  if (has_cur_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cur_pos(), output);
  }

  // repeated .dgame.EquipmentData equipment_list = 4;
  for (int i = 0; i < this->equipment_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->equipment_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OtherUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // required string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // required .CS.MapPos cur_pos = 3;
  if (has_cur_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cur_pos(), target);
  }

  // repeated .dgame.EquipmentData equipment_list = 4;
  for (int i = 0; i < this->equipment_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->equipment_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OtherUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // required string user_name = 2;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // required .CS.MapPos cur_pos = 3;
    if (has_cur_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cur_pos());
    }

  }
  // repeated .dgame.EquipmentData equipment_list = 4;
  total_size += 1 * this->equipment_list_size();
  for (int i = 0; i < this->equipment_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipment_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OtherUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OtherUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OtherUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OtherUserInfo::MergeFrom(const OtherUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipment_list_.MergeFrom(from.equipment_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_user_name()) {
      set_user_name(from.user_name());
    }
    if (from.has_cur_pos()) {
      mutable_cur_pos()->::CS::MapPos::MergeFrom(from.cur_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OtherUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OtherUserInfo::CopyFrom(const OtherUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherUserInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_cur_pos()) {
    if (!this->cur_pos().IsInitialized()) return false;
  }
  for (int i = 0; i < equipment_list_size(); i++) {
    if (!this->equipment_list(i).IsInitialized()) return false;
  }
  return true;
}

void OtherUserInfo::Swap(OtherUserInfo* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(user_name_, other->user_name_);
    std::swap(cur_pos_, other->cur_pos_);
    equipment_list_.Swap(&other->equipment_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OtherUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OtherUserInfo_descriptor_;
  metadata.reflection = OtherUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_HeartBeat_C2S::Msg_HeartBeat_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_HeartBeat_C2S::InitAsDefaultInstance() {
}

Msg_HeartBeat_C2S::Msg_HeartBeat_C2S(const Msg_HeartBeat_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_HeartBeat_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_HeartBeat_C2S::~Msg_HeartBeat_C2S() {
  SharedDtor();
}

void Msg_HeartBeat_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_HeartBeat_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_HeartBeat_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_HeartBeat_C2S_descriptor_;
}

const Msg_HeartBeat_C2S& Msg_HeartBeat_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_HeartBeat_C2S* Msg_HeartBeat_C2S::default_instance_ = NULL;

Msg_HeartBeat_C2S* Msg_HeartBeat_C2S::New() const {
  return new Msg_HeartBeat_C2S;
}

void Msg_HeartBeat_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_HeartBeat_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_HeartBeat_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_HeartBeat_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_HeartBeat_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_HeartBeat_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_HeartBeat_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_HeartBeat_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_HeartBeat_C2S::MergeFrom(const Msg_HeartBeat_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_HeartBeat_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_HeartBeat_C2S::CopyFrom(const Msg_HeartBeat_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_HeartBeat_C2S::IsInitialized() const {

  return true;
}

void Msg_HeartBeat_C2S::Swap(Msg_HeartBeat_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_HeartBeat_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_HeartBeat_C2S_descriptor_;
  metadata.reflection = Msg_HeartBeat_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_HeartBeat_S2C::Msg_HeartBeat_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_HeartBeat_S2C::InitAsDefaultInstance() {
}

Msg_HeartBeat_S2C::Msg_HeartBeat_S2C(const Msg_HeartBeat_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_HeartBeat_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_HeartBeat_S2C::~Msg_HeartBeat_S2C() {
  SharedDtor();
}

void Msg_HeartBeat_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_HeartBeat_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_HeartBeat_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_HeartBeat_S2C_descriptor_;
}

const Msg_HeartBeat_S2C& Msg_HeartBeat_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_HeartBeat_S2C* Msg_HeartBeat_S2C::default_instance_ = NULL;

Msg_HeartBeat_S2C* Msg_HeartBeat_S2C::New() const {
  return new Msg_HeartBeat_S2C;
}

void Msg_HeartBeat_S2C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_HeartBeat_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_HeartBeat_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_HeartBeat_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_HeartBeat_S2C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_HeartBeat_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_HeartBeat_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_HeartBeat_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_HeartBeat_S2C::MergeFrom(const Msg_HeartBeat_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_HeartBeat_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_HeartBeat_S2C::CopyFrom(const Msg_HeartBeat_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_HeartBeat_S2C::IsInitialized() const {

  return true;
}

void Msg_HeartBeat_S2C::Swap(Msg_HeartBeat_S2C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_HeartBeat_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_HeartBeat_S2C_descriptor_;
  metadata.reflection = Msg_HeartBeat_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_TargetServerInvalid_S2C::kUrlDescFieldNumber;
const int Msg_TargetServerInvalid_S2C::kUrlFieldNumber;
#endif  // !_MSC_VER

Msg_TargetServerInvalid_S2C::Msg_TargetServerInvalid_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_TargetServerInvalid_S2C::InitAsDefaultInstance() {
}

Msg_TargetServerInvalid_S2C::Msg_TargetServerInvalid_S2C(const Msg_TargetServerInvalid_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_TargetServerInvalid_S2C::SharedCtor() {
  _cached_size_ = 0;
  url_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_TargetServerInvalid_S2C::~Msg_TargetServerInvalid_S2C() {
  SharedDtor();
}

void Msg_TargetServerInvalid_S2C::SharedDtor() {
  if (url_desc_ != &::google::protobuf::internal::kEmptyString) {
    delete url_desc_;
  }
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (this != default_instance_) {
  }
}

void Msg_TargetServerInvalid_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_TargetServerInvalid_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_TargetServerInvalid_S2C_descriptor_;
}

const Msg_TargetServerInvalid_S2C& Msg_TargetServerInvalid_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_TargetServerInvalid_S2C* Msg_TargetServerInvalid_S2C::default_instance_ = NULL;

Msg_TargetServerInvalid_S2C* Msg_TargetServerInvalid_S2C::New() const {
  return new Msg_TargetServerInvalid_S2C;
}

void Msg_TargetServerInvalid_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url_desc()) {
      if (url_desc_ != &::google::protobuf::internal::kEmptyString) {
        url_desc_->clear();
      }
    }
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_TargetServerInvalid_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url_desc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url_desc().data(), this->url_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // optional string url = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_TargetServerInvalid_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string url_desc = 1;
  if (has_url_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url_desc().data(), this->url_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url_desc(), output);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->url(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_TargetServerInvalid_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string url_desc = 1;
  if (has_url_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url_desc().data(), this->url_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url_desc(), target);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_TargetServerInvalid_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string url_desc = 1;
    if (has_url_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url_desc());
    }

    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_TargetServerInvalid_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_TargetServerInvalid_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_TargetServerInvalid_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_TargetServerInvalid_S2C::MergeFrom(const Msg_TargetServerInvalid_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url_desc()) {
      set_url_desc(from.url_desc());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_TargetServerInvalid_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_TargetServerInvalid_S2C::CopyFrom(const Msg_TargetServerInvalid_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_TargetServerInvalid_S2C::IsInitialized() const {

  return true;
}

void Msg_TargetServerInvalid_S2C::Swap(Msg_TargetServerInvalid_S2C* other) {
  if (other != this) {
    std::swap(url_desc_, other->url_desc_);
    std::swap(url_, other->url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_TargetServerInvalid_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_TargetServerInvalid_S2C_descriptor_;
  metadata.reflection = Msg_TargetServerInvalid_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OtherUserList_G2C::kUserListFieldNumber;
#endif  // !_MSC_VER

Msg_OtherUserList_G2C::Msg_OtherUserList_G2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OtherUserList_G2C::InitAsDefaultInstance() {
}

Msg_OtherUserList_G2C::Msg_OtherUserList_G2C(const Msg_OtherUserList_G2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OtherUserList_G2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OtherUserList_G2C::~Msg_OtherUserList_G2C() {
  SharedDtor();
}

void Msg_OtherUserList_G2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OtherUserList_G2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OtherUserList_G2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OtherUserList_G2C_descriptor_;
}

const Msg_OtherUserList_G2C& Msg_OtherUserList_G2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OtherUserList_G2C* Msg_OtherUserList_G2C::default_instance_ = NULL;

Msg_OtherUserList_G2C* Msg_OtherUserList_G2C::New() const {
  return new Msg_OtherUserList_G2C;
}

void Msg_OtherUserList_G2C::Clear() {
  user_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OtherUserList_G2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CS.OtherUserInfo user_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_user_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OtherUserList_G2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CS.OtherUserInfo user_list = 1;
  for (int i = 0; i < this->user_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OtherUserList_G2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CS.OtherUserInfo user_list = 1;
  for (int i = 0; i < this->user_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OtherUserList_G2C::ByteSize() const {
  int total_size = 0;

  // repeated .CS.OtherUserInfo user_list = 1;
  total_size += 1 * this->user_list_size();
  for (int i = 0; i < this->user_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OtherUserList_G2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OtherUserList_G2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OtherUserList_G2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OtherUserList_G2C::MergeFrom(const Msg_OtherUserList_G2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  user_list_.MergeFrom(from.user_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OtherUserList_G2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OtherUserList_G2C::CopyFrom(const Msg_OtherUserList_G2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OtherUserList_G2C::IsInitialized() const {

  for (int i = 0; i < user_list_size(); i++) {
    if (!this->user_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_OtherUserList_G2C::Swap(Msg_OtherUserList_G2C* other) {
  if (other != this) {
    user_list_.Swap(&other->user_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OtherUserList_G2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OtherUserList_G2C_descriptor_;
  metadata.reflection = Msg_OtherUserList_G2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserEnterScene_C2G::kUserIdFieldNumber;
#endif  // !_MSC_VER

Msg_UserEnterScene_C2G::Msg_UserEnterScene_C2G()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserEnterScene_C2G::InitAsDefaultInstance() {
}

Msg_UserEnterScene_C2G::Msg_UserEnterScene_C2G(const Msg_UserEnterScene_C2G& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserEnterScene_C2G::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserEnterScene_C2G::~Msg_UserEnterScene_C2G() {
  SharedDtor();
}

void Msg_UserEnterScene_C2G::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserEnterScene_C2G::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserEnterScene_C2G::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserEnterScene_C2G_descriptor_;
}

const Msg_UserEnterScene_C2G& Msg_UserEnterScene_C2G::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserEnterScene_C2G* Msg_UserEnterScene_C2G::default_instance_ = NULL;

Msg_UserEnterScene_C2G* Msg_UserEnterScene_C2G::New() const {
  return new Msg_UserEnterScene_C2G;
}

void Msg_UserEnterScene_C2G::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    user_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserEnterScene_C2G::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserEnterScene_C2G::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserEnterScene_C2G::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserEnterScene_C2G::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserEnterScene_C2G::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserEnterScene_C2G* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserEnterScene_C2G*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserEnterScene_C2G::MergeFrom(const Msg_UserEnterScene_C2G& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserEnterScene_C2G::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserEnterScene_C2G::CopyFrom(const Msg_UserEnterScene_C2G& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserEnterScene_C2G::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_UserEnterScene_C2G::Swap(Msg_UserEnterScene_C2G* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserEnterScene_C2G::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserEnterScene_C2G_descriptor_;
  metadata.reflection = Msg_UserEnterScene_C2G_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_UserLeaveScene_C2G::Msg_UserLeaveScene_C2G()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserLeaveScene_C2G::InitAsDefaultInstance() {
}

Msg_UserLeaveScene_C2G::Msg_UserLeaveScene_C2G(const Msg_UserLeaveScene_C2G& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserLeaveScene_C2G::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserLeaveScene_C2G::~Msg_UserLeaveScene_C2G() {
  SharedDtor();
}

void Msg_UserLeaveScene_C2G::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserLeaveScene_C2G::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserLeaveScene_C2G::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserLeaveScene_C2G_descriptor_;
}

const Msg_UserLeaveScene_C2G& Msg_UserLeaveScene_C2G::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserLeaveScene_C2G* Msg_UserLeaveScene_C2G::default_instance_ = NULL;

Msg_UserLeaveScene_C2G* Msg_UserLeaveScene_C2G::New() const {
  return new Msg_UserLeaveScene_C2G;
}

void Msg_UserLeaveScene_C2G::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserLeaveScene_C2G::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_UserLeaveScene_C2G::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserLeaveScene_C2G::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserLeaveScene_C2G::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserLeaveScene_C2G::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserLeaveScene_C2G* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserLeaveScene_C2G*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserLeaveScene_C2G::MergeFrom(const Msg_UserLeaveScene_C2G& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserLeaveScene_C2G::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserLeaveScene_C2G::CopyFrom(const Msg_UserLeaveScene_C2G& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserLeaveScene_C2G::IsInitialized() const {

  return true;
}

void Msg_UserLeaveScene_C2G::Swap(Msg_UserLeaveScene_C2G* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserLeaveScene_C2G::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserLeaveScene_C2G_descriptor_;
  metadata.reflection = Msg_UserLeaveScene_C2G_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserLeaveScene_G2C::kUserIdFieldNumber;
#endif  // !_MSC_VER

Msg_UserLeaveScene_G2C::Msg_UserLeaveScene_G2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserLeaveScene_G2C::InitAsDefaultInstance() {
}

Msg_UserLeaveScene_G2C::Msg_UserLeaveScene_G2C(const Msg_UserLeaveScene_G2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserLeaveScene_G2C::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserLeaveScene_G2C::~Msg_UserLeaveScene_G2C() {
  SharedDtor();
}

void Msg_UserLeaveScene_G2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserLeaveScene_G2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserLeaveScene_G2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserLeaveScene_G2C_descriptor_;
}

const Msg_UserLeaveScene_G2C& Msg_UserLeaveScene_G2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserLeaveScene_G2C* Msg_UserLeaveScene_G2C::default_instance_ = NULL;

Msg_UserLeaveScene_G2C* Msg_UserLeaveScene_G2C::New() const {
  return new Msg_UserLeaveScene_G2C;
}

void Msg_UserLeaveScene_G2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    user_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserLeaveScene_G2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserLeaveScene_G2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserLeaveScene_G2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserLeaveScene_G2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserLeaveScene_G2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserLeaveScene_G2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserLeaveScene_G2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserLeaveScene_G2C::MergeFrom(const Msg_UserLeaveScene_G2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserLeaveScene_G2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserLeaveScene_G2C::CopyFrom(const Msg_UserLeaveScene_G2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserLeaveScene_G2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_UserLeaveScene_G2C::Swap(Msg_UserLeaveScene_G2C* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserLeaveScene_G2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserLeaveScene_G2C_descriptor_;
  metadata.reflection = Msg_UserLeaveScene_G2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Goto_C2G::kFromFieldNumber;
const int Msg_Goto_C2G::kToFieldNumber;
#endif  // !_MSC_VER

Msg_Goto_C2G::Msg_Goto_C2G()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Goto_C2G::InitAsDefaultInstance() {
  from_ = const_cast< ::CS::MapPos*>(&::CS::MapPos::default_instance());
  to_ = const_cast< ::CS::MapPos*>(&::CS::MapPos::default_instance());
}

Msg_Goto_C2G::Msg_Goto_C2G(const Msg_Goto_C2G& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Goto_C2G::SharedCtor() {
  _cached_size_ = 0;
  from_ = NULL;
  to_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Goto_C2G::~Msg_Goto_C2G() {
  SharedDtor();
}

void Msg_Goto_C2G::SharedDtor() {
  if (this != default_instance_) {
    delete from_;
    delete to_;
  }
}

void Msg_Goto_C2G::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Goto_C2G::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Goto_C2G_descriptor_;
}

const Msg_Goto_C2G& Msg_Goto_C2G::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Goto_C2G* Msg_Goto_C2G::default_instance_ = NULL;

Msg_Goto_C2G* Msg_Goto_C2G::New() const {
  return new Msg_Goto_C2G;
}

void Msg_Goto_C2G::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_from()) {
      if (from_ != NULL) from_->::CS::MapPos::Clear();
    }
    if (has_to()) {
      if (to_ != NULL) to_->::CS::MapPos::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Goto_C2G::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CS.MapPos from = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_from()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_to;
        break;
      }

      // required .CS.MapPos to = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_to()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Goto_C2G::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CS.MapPos from = 1;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->from(), output);
  }

  // required .CS.MapPos to = 2;
  if (has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->to(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Goto_C2G::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CS.MapPos from = 1;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->from(), target);
  }

  // required .CS.MapPos to = 2;
  if (has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->to(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Goto_C2G::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CS.MapPos from = 1;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->from());
    }

    // required .CS.MapPos to = 2;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->to());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Goto_C2G::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Goto_C2G* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Goto_C2G*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Goto_C2G::MergeFrom(const Msg_Goto_C2G& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from()) {
      mutable_from()->::CS::MapPos::MergeFrom(from.from());
    }
    if (from.has_to()) {
      mutable_to()->::CS::MapPos::MergeFrom(from.to());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Goto_C2G::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Goto_C2G::CopyFrom(const Msg_Goto_C2G& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Goto_C2G::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_from()) {
    if (!this->from().IsInitialized()) return false;
  }
  if (has_to()) {
    if (!this->to().IsInitialized()) return false;
  }
  return true;
}

void Msg_Goto_C2G::Swap(Msg_Goto_C2G* other) {
  if (other != this) {
    std::swap(from_, other->from_);
    std::swap(to_, other->to_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Goto_C2G::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Goto_C2G_descriptor_;
  metadata.reflection = Msg_Goto_C2G_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Goto_G2C::kUserIdFieldNumber;
const int Msg_Goto_G2C::kFromFieldNumber;
const int Msg_Goto_G2C::kToFieldNumber;
#endif  // !_MSC_VER

Msg_Goto_G2C::Msg_Goto_G2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Goto_G2C::InitAsDefaultInstance() {
  from_ = const_cast< ::CS::MapPos*>(&::CS::MapPos::default_instance());
  to_ = const_cast< ::CS::MapPos*>(&::CS::MapPos::default_instance());
}

Msg_Goto_G2C::Msg_Goto_G2C(const Msg_Goto_G2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Goto_G2C::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  from_ = NULL;
  to_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Goto_G2C::~Msg_Goto_G2C() {
  SharedDtor();
}

void Msg_Goto_G2C::SharedDtor() {
  if (this != default_instance_) {
    delete from_;
    delete to_;
  }
}

void Msg_Goto_G2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Goto_G2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Goto_G2C_descriptor_;
}

const Msg_Goto_G2C& Msg_Goto_G2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Goto_G2C* Msg_Goto_G2C::default_instance_ = NULL;

Msg_Goto_G2C* Msg_Goto_G2C::New() const {
  return new Msg_Goto_G2C;
}

void Msg_Goto_G2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    user_id_ = 0u;
    if (has_from()) {
      if (from_ != NULL) from_->::CS::MapPos::Clear();
    }
    if (has_to()) {
      if (to_ != NULL) to_->::CS::MapPos::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Goto_G2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_from;
        break;
      }

      // required .CS.MapPos from = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_from()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_to;
        break;
      }

      // required .CS.MapPos to = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_to()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Goto_G2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // required .CS.MapPos from = 2;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->from(), output);
  }

  // required .CS.MapPos to = 3;
  if (has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->to(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Goto_G2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // required .CS.MapPos from = 2;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->from(), target);
  }

  // required .CS.MapPos to = 3;
  if (has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->to(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Goto_G2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // required .CS.MapPos from = 2;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->from());
    }

    // required .CS.MapPos to = 3;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->to());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Goto_G2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Goto_G2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Goto_G2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Goto_G2C::MergeFrom(const Msg_Goto_G2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_from()) {
      mutable_from()->::CS::MapPos::MergeFrom(from.from());
    }
    if (from.has_to()) {
      mutable_to()->::CS::MapPos::MergeFrom(from.to());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Goto_G2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Goto_G2C::CopyFrom(const Msg_Goto_G2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Goto_G2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_from()) {
    if (!this->from().IsInitialized()) return false;
  }
  if (has_to()) {
    if (!this->to().IsInitialized()) return false;
  }
  return true;
}

void Msg_Goto_G2C::Swap(Msg_Goto_G2C* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(from_, other->from_);
    std::swap(to_, other->to_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Goto_G2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Goto_G2C_descriptor_;
  metadata.reflection = Msg_Goto_G2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Equipment_C2S::kEquipmentListFieldNumber;
#endif  // !_MSC_VER

Msg_Equipment_C2S::Msg_Equipment_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Equipment_C2S::InitAsDefaultInstance() {
}

Msg_Equipment_C2S::Msg_Equipment_C2S(const Msg_Equipment_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Equipment_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Equipment_C2S::~Msg_Equipment_C2S() {
  SharedDtor();
}

void Msg_Equipment_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_Equipment_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Equipment_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Equipment_C2S_descriptor_;
}

const Msg_Equipment_C2S& Msg_Equipment_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Equipment_C2S* Msg_Equipment_C2S::default_instance_ = NULL;

Msg_Equipment_C2S* Msg_Equipment_C2S::New() const {
  return new Msg_Equipment_C2S;
}

void Msg_Equipment_C2S::Clear() {
  equipment_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Equipment_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dgame.EquipmentData equipment_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equipment_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipment_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_equipment_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Equipment_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dgame.EquipmentData equipment_list = 1;
  for (int i = 0; i < this->equipment_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equipment_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Equipment_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dgame.EquipmentData equipment_list = 1;
  for (int i = 0; i < this->equipment_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equipment_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Equipment_C2S::ByteSize() const {
  int total_size = 0;

  // repeated .dgame.EquipmentData equipment_list = 1;
  total_size += 1 * this->equipment_list_size();
  for (int i = 0; i < this->equipment_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipment_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Equipment_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Equipment_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Equipment_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Equipment_C2S::MergeFrom(const Msg_Equipment_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipment_list_.MergeFrom(from.equipment_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Equipment_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Equipment_C2S::CopyFrom(const Msg_Equipment_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Equipment_C2S::IsInitialized() const {

  for (int i = 0; i < equipment_list_size(); i++) {
    if (!this->equipment_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_Equipment_C2S::Swap(Msg_Equipment_C2S* other) {
  if (other != this) {
    equipment_list_.Swap(&other->equipment_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Equipment_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Equipment_C2S_descriptor_;
  metadata.reflection = Msg_Equipment_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_Equipment_S2C::Msg_Equipment_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Equipment_S2C::InitAsDefaultInstance() {
}

Msg_Equipment_S2C::Msg_Equipment_S2C(const Msg_Equipment_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Equipment_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Equipment_S2C::~Msg_Equipment_S2C() {
  SharedDtor();
}

void Msg_Equipment_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_Equipment_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Equipment_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Equipment_S2C_descriptor_;
}

const Msg_Equipment_S2C& Msg_Equipment_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Equipment_S2C* Msg_Equipment_S2C::default_instance_ = NULL;

Msg_Equipment_S2C* Msg_Equipment_S2C::New() const {
  return new Msg_Equipment_S2C;
}

void Msg_Equipment_S2C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Equipment_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_Equipment_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Equipment_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Equipment_S2C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Equipment_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Equipment_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Equipment_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Equipment_S2C::MergeFrom(const Msg_Equipment_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Equipment_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Equipment_S2C::CopyFrom(const Msg_Equipment_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Equipment_S2C::IsInitialized() const {

  return true;
}

void Msg_Equipment_S2C::Swap(Msg_Equipment_S2C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Equipment_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Equipment_S2C_descriptor_;
  metadata.reflection = Msg_Equipment_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_GM_C2S::kGmIdFieldNumber;
const int Msg_GM_C2S::kParam1FieldNumber;
const int Msg_GM_C2S::kParam2FieldNumber;
#endif  // !_MSC_VER

Msg_GM_C2S::Msg_GM_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_GM_C2S::InitAsDefaultInstance() {
}

Msg_GM_C2S::Msg_GM_C2S(const Msg_GM_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_GM_C2S::SharedCtor() {
  _cached_size_ = 0;
  gm_id_ = 0u;
  param1_ = 0u;
  param2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_GM_C2S::~Msg_GM_C2S() {
  SharedDtor();
}

void Msg_GM_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_GM_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_GM_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_GM_C2S_descriptor_;
}

const Msg_GM_C2S& Msg_GM_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_GM_C2S* Msg_GM_C2S::default_instance_ = NULL;

Msg_GM_C2S* Msg_GM_C2S::New() const {
  return new Msg_GM_C2S;
}

void Msg_GM_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gm_id_ = 0u;
    param1_ = 0u;
    param2_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_GM_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gm_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_id_)));
          set_has_gm_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_param1;
        break;
      }

      // required uint32 param1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_param2;
        break;
      }

      // required uint32 param2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param2_)));
          set_has_param2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_GM_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gm_id = 1;
  if (has_gm_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gm_id(), output);
  }

  // required uint32 param1 = 2;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->param1(), output);
  }

  // required uint32 param2 = 3;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->param2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_GM_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gm_id = 1;
  if (has_gm_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gm_id(), target);
  }

  // required uint32 param1 = 2;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->param1(), target);
  }

  // required uint32 param2 = 3;
  if (has_param2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->param2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_GM_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gm_id = 1;
    if (has_gm_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gm_id());
    }

    // required uint32 param1 = 2;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param1());
    }

    // required uint32 param2 = 3;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_GM_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_GM_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_GM_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_GM_C2S::MergeFrom(const Msg_GM_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gm_id()) {
      set_gm_id(from.gm_id());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_param2()) {
      set_param2(from.param2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_GM_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_GM_C2S::CopyFrom(const Msg_GM_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GM_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Msg_GM_C2S::Swap(Msg_GM_C2S* other) {
  if (other != this) {
    std::swap(gm_id_, other->gm_id_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_GM_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_GM_C2S_descriptor_;
  metadata.reflection = Msg_GM_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserBaseInfoModify_C2S::kHeadImgIdFieldNumber;
const int Msg_UserBaseInfoModify_C2S::kNickNameFieldNumber;
const int Msg_UserBaseInfoModify_C2S::kSignFieldNumber;
#endif  // !_MSC_VER

Msg_UserBaseInfoModify_C2S::Msg_UserBaseInfoModify_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserBaseInfoModify_C2S::InitAsDefaultInstance() {
}

Msg_UserBaseInfoModify_C2S::Msg_UserBaseInfoModify_C2S(const Msg_UserBaseInfoModify_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserBaseInfoModify_C2S::SharedCtor() {
  _cached_size_ = 0;
  head_img_id_ = 0u;
  nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserBaseInfoModify_C2S::~Msg_UserBaseInfoModify_C2S() {
  SharedDtor();
}

void Msg_UserBaseInfoModify_C2S::SharedDtor() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (sign_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_;
  }
  if (this != default_instance_) {
  }
}

void Msg_UserBaseInfoModify_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserBaseInfoModify_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserBaseInfoModify_C2S_descriptor_;
}

const Msg_UserBaseInfoModify_C2S& Msg_UserBaseInfoModify_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserBaseInfoModify_C2S* Msg_UserBaseInfoModify_C2S::default_instance_ = NULL;

Msg_UserBaseInfoModify_C2S* Msg_UserBaseInfoModify_C2S::New() const {
  return new Msg_UserBaseInfoModify_C2S;
}

void Msg_UserBaseInfoModify_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    head_img_id_ = 0u;
    if (has_nick_name()) {
      if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
        nick_name_->clear();
      }
    }
    if (has_sign()) {
      if (sign_ != &::google::protobuf::internal::kEmptyString) {
        sign_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserBaseInfoModify_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 head_img_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &head_img_id_)));
          set_has_head_img_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_nick_name;
        break;
      }

      // optional string nick_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nick_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nick_name().data(), this->nick_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sign;
        break;
      }

      // optional string sign = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserBaseInfoModify_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 head_img_id = 1;
  if (has_head_img_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->head_img_id(), output);
  }

  // optional string nick_name = 2;
  if (has_nick_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nick_name(), output);
  }

  // optional string sign = 3;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sign(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserBaseInfoModify_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 head_img_id = 1;
  if (has_head_img_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->head_img_id(), target);
  }

  // optional string nick_name = 2;
  if (has_nick_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick_name(), target);
  }

  // optional string sign = 3;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sign(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserBaseInfoModify_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 head_img_id = 1;
    if (has_head_img_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->head_img_id());
    }

    // optional string nick_name = 2;
    if (has_nick_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nick_name());
    }

    // optional string sign = 3;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserBaseInfoModify_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserBaseInfoModify_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserBaseInfoModify_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserBaseInfoModify_C2S::MergeFrom(const Msg_UserBaseInfoModify_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_head_img_id()) {
      set_head_img_id(from.head_img_id());
    }
    if (from.has_nick_name()) {
      set_nick_name(from.nick_name());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserBaseInfoModify_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserBaseInfoModify_C2S::CopyFrom(const Msg_UserBaseInfoModify_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserBaseInfoModify_C2S::IsInitialized() const {

  return true;
}

void Msg_UserBaseInfoModify_C2S::Swap(Msg_UserBaseInfoModify_C2S* other) {
  if (other != this) {
    std::swap(head_img_id_, other->head_img_id_);
    std::swap(nick_name_, other->nick_name_);
    std::swap(sign_, other->sign_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserBaseInfoModify_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserBaseInfoModify_C2S_descriptor_;
  metadata.reflection = Msg_UserBaseInfoModify_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserBaseInfoModify_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_UserBaseInfoModify_S2C::Msg_UserBaseInfoModify_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserBaseInfoModify_S2C::InitAsDefaultInstance() {
}

Msg_UserBaseInfoModify_S2C::Msg_UserBaseInfoModify_S2C(const Msg_UserBaseInfoModify_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserBaseInfoModify_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserBaseInfoModify_S2C::~Msg_UserBaseInfoModify_S2C() {
  SharedDtor();
}

void Msg_UserBaseInfoModify_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserBaseInfoModify_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserBaseInfoModify_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserBaseInfoModify_S2C_descriptor_;
}

const Msg_UserBaseInfoModify_S2C& Msg_UserBaseInfoModify_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserBaseInfoModify_S2C* Msg_UserBaseInfoModify_S2C::default_instance_ = NULL;

Msg_UserBaseInfoModify_S2C* Msg_UserBaseInfoModify_S2C::New() const {
  return new Msg_UserBaseInfoModify_S2C;
}

void Msg_UserBaseInfoModify_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserBaseInfoModify_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserBaseInfoModify_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserBaseInfoModify_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserBaseInfoModify_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserBaseInfoModify_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserBaseInfoModify_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserBaseInfoModify_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserBaseInfoModify_S2C::MergeFrom(const Msg_UserBaseInfoModify_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserBaseInfoModify_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserBaseInfoModify_S2C::CopyFrom(const Msg_UserBaseInfoModify_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserBaseInfoModify_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_UserBaseInfoModify_S2C::Swap(Msg_UserBaseInfoModify_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserBaseInfoModify_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserBaseInfoModify_S2C_descriptor_;
  metadata.reflection = Msg_UserBaseInfoModify_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserInfoModify_C2S::kEmailFieldNumber;
const int Msg_UserInfoModify_C2S::kSexFieldNumber;
const int Msg_UserInfoModify_C2S::kJobFieldNumber;
const int Msg_UserInfoModify_C2S::kHobbyFieldNumber;
const int Msg_UserInfoModify_C2S::kSkinFieldNumber;
const int Msg_UserInfoModify_C2S::kDateListFieldNumber;
const int Msg_UserInfoModify_C2S::kBrandListFieldNumber;
const int Msg_UserInfoModify_C2S::kColorFieldNumber;
const int Msg_UserInfoModify_C2S::kDressedListFieldNumber;
const int Msg_UserInfoModify_C2S::kBirthdayFieldNumber;
const int Msg_UserInfoModify_C2S::kHeadImgIdFieldNumber;
const int Msg_UserInfoModify_C2S::kAgeFieldNumber;
const int Msg_UserInfoModify_C2S::kZodiacFieldNumber;
const int Msg_UserInfoModify_C2S::kNickNameFieldNumber;
const int Msg_UserInfoModify_C2S::kSignFieldNumber;
#endif  // !_MSC_VER

Msg_UserInfoModify_C2S::Msg_UserInfoModify_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserInfoModify_C2S::InitAsDefaultInstance() {
}

Msg_UserInfoModify_C2S::Msg_UserInfoModify_C2S(const Msg_UserInfoModify_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserInfoModify_C2S::SharedCtor() {
  _cached_size_ = 0;
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sex_ = 0u;
  job_ = 0u;
  hobby_ = 0u;
  skin_ = 0u;
  color_ = 0u;
  birthday_ = 0u;
  head_img_id_ = 0u;
  age_ = 0u;
  zodiac_ = 0u;
  nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserInfoModify_C2S::~Msg_UserInfoModify_C2S() {
  SharedDtor();
}

void Msg_UserInfoModify_C2S::SharedDtor() {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (sign_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_;
  }
  if (this != default_instance_) {
  }
}

void Msg_UserInfoModify_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserInfoModify_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserInfoModify_C2S_descriptor_;
}

const Msg_UserInfoModify_C2S& Msg_UserInfoModify_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserInfoModify_C2S* Msg_UserInfoModify_C2S::default_instance_ = NULL;

Msg_UserInfoModify_C2S* Msg_UserInfoModify_C2S::New() const {
  return new Msg_UserInfoModify_C2S;
}

void Msg_UserInfoModify_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::kEmptyString) {
        email_->clear();
      }
    }
    sex_ = 0u;
    job_ = 0u;
    hobby_ = 0u;
    skin_ = 0u;
    color_ = 0u;
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    birthday_ = 0u;
    head_img_id_ = 0u;
    age_ = 0u;
    zodiac_ = 0u;
    if (has_nick_name()) {
      if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
        nick_name_->clear();
      }
    }
    if (has_sign()) {
      if (sign_ != &::google::protobuf::internal::kEmptyString) {
        sign_->clear();
      }
    }
  }
  date_list_.Clear();
  brand_list_.Clear();
  dressed_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserInfoModify_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sex;
        break;
      }

      // optional uint32 sex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_job;
        break;
      }

      // optional uint32 job = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_job:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_)));
          set_has_job();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_hobby;
        break;
      }

      // optional uint32 hobby = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hobby:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hobby_)));
          set_has_hobby();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_skin;
        break;
      }

      // optional uint32 skin = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skin_)));
          set_has_skin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_date_list;
        break;
      }

      // repeated .dgame.SouvenirDate date_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_date_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_date_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_date_list;
        if (input->ExpectTag(56)) goto parse_brand_list;
        break;
      }

      // repeated uint32 brand_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_brand_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_brand_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_brand_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_brand_list;
        if (input->ExpectTag(64)) goto parse_color;
        break;
      }

      // optional uint32 color = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_dressed_list;
        break;
      }

      // repeated uint32 dressed_list = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dressed_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_dressed_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dressed_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_dressed_list;
        if (input->ExpectTag(80)) goto parse_birthday;
        break;
      }

      // optional uint32 birthday = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_birthday:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &birthday_)));
          set_has_birthday();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_head_img_id;
        break;
      }

      // optional uint32 head_img_id = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_head_img_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &head_img_id_)));
          set_has_head_img_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_age;
        break;
      }

      // optional uint32 age = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_zodiac;
        break;
      }

      // optional uint32 zodiac = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_zodiac:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zodiac_)));
          set_has_zodiac();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_nick_name;
        break;
      }

      // optional string nick_name = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nick_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nick_name().data(), this->nick_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_sign;
        break;
      }

      // optional string sign = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserInfoModify_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string email = 1;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->email(), output);
  }

  // optional uint32 sex = 2;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sex(), output);
  }

  // optional uint32 job = 3;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->job(), output);
  }

  // optional uint32 hobby = 4;
  if (has_hobby()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hobby(), output);
  }

  // optional uint32 skin = 5;
  if (has_skin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->skin(), output);
  }

  // repeated .dgame.SouvenirDate date_list = 6;
  for (int i = 0; i < this->date_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->date_list(i), output);
  }

  // repeated uint32 brand_list = 7;
  for (int i = 0; i < this->brand_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->brand_list(i), output);
  }

  // optional uint32 color = 8;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->color(), output);
  }

  // repeated uint32 dressed_list = 9;
  for (int i = 0; i < this->dressed_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->dressed_list(i), output);
  }

  // optional uint32 birthday = 10;
  if (has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->birthday(), output);
  }

  // optional uint32 head_img_id = 11;
  if (has_head_img_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->head_img_id(), output);
  }

  // optional uint32 age = 12;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->age(), output);
  }

  // optional uint32 zodiac = 13;
  if (has_zodiac()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->zodiac(), output);
  }

  // optional string nick_name = 14;
  if (has_nick_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->nick_name(), output);
  }

  // optional string sign = 15;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->sign(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserInfoModify_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string email = 1;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // optional uint32 sex = 2;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sex(), target);
  }

  // optional uint32 job = 3;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->job(), target);
  }

  // optional uint32 hobby = 4;
  if (has_hobby()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hobby(), target);
  }

  // optional uint32 skin = 5;
  if (has_skin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->skin(), target);
  }

  // repeated .dgame.SouvenirDate date_list = 6;
  for (int i = 0; i < this->date_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->date_list(i), target);
  }

  // repeated uint32 brand_list = 7;
  for (int i = 0; i < this->brand_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->brand_list(i), target);
  }

  // optional uint32 color = 8;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->color(), target);
  }

  // repeated uint32 dressed_list = 9;
  for (int i = 0; i < this->dressed_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->dressed_list(i), target);
  }

  // optional uint32 birthday = 10;
  if (has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->birthday(), target);
  }

  // optional uint32 head_img_id = 11;
  if (has_head_img_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->head_img_id(), target);
  }

  // optional uint32 age = 12;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->age(), target);
  }

  // optional uint32 zodiac = 13;
  if (has_zodiac()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->zodiac(), target);
  }

  // optional string nick_name = 14;
  if (has_nick_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->nick_name(), target);
  }

  // optional string sign = 15;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->sign(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserInfoModify_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string email = 1;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional uint32 sex = 2;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 job = 3;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job());
    }

    // optional uint32 hobby = 4;
    if (has_hobby()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hobby());
    }

    // optional uint32 skin = 5;
    if (has_skin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skin());
    }

    // optional uint32 color = 8;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional uint32 birthday = 10;
    if (has_birthday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->birthday());
    }

    // optional uint32 head_img_id = 11;
    if (has_head_img_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->head_img_id());
    }

    // optional uint32 age = 12;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->age());
    }

    // optional uint32 zodiac = 13;
    if (has_zodiac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zodiac());
    }

    // optional string nick_name = 14;
    if (has_nick_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nick_name());
    }

    // optional string sign = 15;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

  }
  // repeated .dgame.SouvenirDate date_list = 6;
  total_size += 1 * this->date_list_size();
  for (int i = 0; i < this->date_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->date_list(i));
  }

  // repeated uint32 brand_list = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->brand_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->brand_list(i));
    }
    total_size += 1 * this->brand_list_size() + data_size;
  }

  // repeated uint32 dressed_list = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->dressed_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->dressed_list(i));
    }
    total_size += 1 * this->dressed_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserInfoModify_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserInfoModify_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserInfoModify_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserInfoModify_C2S::MergeFrom(const Msg_UserInfoModify_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  date_list_.MergeFrom(from.date_list_);
  brand_list_.MergeFrom(from.brand_list_);
  dressed_list_.MergeFrom(from.dressed_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_job()) {
      set_job(from.job());
    }
    if (from.has_hobby()) {
      set_hobby(from.hobby());
    }
    if (from.has_skin()) {
      set_skin(from.skin());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_birthday()) {
      set_birthday(from.birthday());
    }
    if (from.has_head_img_id()) {
      set_head_img_id(from.head_img_id());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_zodiac()) {
      set_zodiac(from.zodiac());
    }
    if (from.has_nick_name()) {
      set_nick_name(from.nick_name());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserInfoModify_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserInfoModify_C2S::CopyFrom(const Msg_UserInfoModify_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserInfoModify_C2S::IsInitialized() const {

  for (int i = 0; i < date_list_size(); i++) {
    if (!this->date_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_UserInfoModify_C2S::Swap(Msg_UserInfoModify_C2S* other) {
  if (other != this) {
    std::swap(email_, other->email_);
    std::swap(sex_, other->sex_);
    std::swap(job_, other->job_);
    std::swap(hobby_, other->hobby_);
    std::swap(skin_, other->skin_);
    date_list_.Swap(&other->date_list_);
    brand_list_.Swap(&other->brand_list_);
    std::swap(color_, other->color_);
    dressed_list_.Swap(&other->dressed_list_);
    std::swap(birthday_, other->birthday_);
    std::swap(head_img_id_, other->head_img_id_);
    std::swap(age_, other->age_);
    std::swap(zodiac_, other->zodiac_);
    std::swap(nick_name_, other->nick_name_);
    std::swap(sign_, other->sign_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserInfoModify_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserInfoModify_C2S_descriptor_;
  metadata.reflection = Msg_UserInfoModify_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_UserInfoModify_S2C::Msg_UserInfoModify_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserInfoModify_S2C::InitAsDefaultInstance() {
}

Msg_UserInfoModify_S2C::Msg_UserInfoModify_S2C(const Msg_UserInfoModify_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserInfoModify_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserInfoModify_S2C::~Msg_UserInfoModify_S2C() {
  SharedDtor();
}

void Msg_UserInfoModify_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserInfoModify_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserInfoModify_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserInfoModify_S2C_descriptor_;
}

const Msg_UserInfoModify_S2C& Msg_UserInfoModify_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserInfoModify_S2C* Msg_UserInfoModify_S2C::default_instance_ = NULL;

Msg_UserInfoModify_S2C* Msg_UserInfoModify_S2C::New() const {
  return new Msg_UserInfoModify_S2C;
}

void Msg_UserInfoModify_S2C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserInfoModify_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_UserInfoModify_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserInfoModify_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserInfoModify_S2C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserInfoModify_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserInfoModify_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserInfoModify_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserInfoModify_S2C::MergeFrom(const Msg_UserInfoModify_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserInfoModify_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserInfoModify_S2C::CopyFrom(const Msg_UserInfoModify_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserInfoModify_S2C::IsInitialized() const {

  return true;
}

void Msg_UserInfoModify_S2C::Swap(Msg_UserInfoModify_S2C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserInfoModify_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserInfoModify_S2C_descriptor_;
  metadata.reflection = Msg_UserInfoModify_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_DesignProduct_C2S::kProductFieldNumber;
#endif  // !_MSC_VER

Msg_DesignProduct_C2S::Msg_DesignProduct_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_DesignProduct_C2S::InitAsDefaultInstance() {
  product_ = const_cast< ::dgame::ProductData*>(&::dgame::ProductData::default_instance());
}

Msg_DesignProduct_C2S::Msg_DesignProduct_C2S(const Msg_DesignProduct_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_DesignProduct_C2S::SharedCtor() {
  _cached_size_ = 0;
  product_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_DesignProduct_C2S::~Msg_DesignProduct_C2S() {
  SharedDtor();
}

void Msg_DesignProduct_C2S::SharedDtor() {
  if (this != default_instance_) {
    delete product_;
  }
}

void Msg_DesignProduct_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_DesignProduct_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_DesignProduct_C2S_descriptor_;
}

const Msg_DesignProduct_C2S& Msg_DesignProduct_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_DesignProduct_C2S* Msg_DesignProduct_C2S::default_instance_ = NULL;

Msg_DesignProduct_C2S* Msg_DesignProduct_C2S::New() const {
  return new Msg_DesignProduct_C2S;
}

void Msg_DesignProduct_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_product()) {
      if (product_ != NULL) product_->::dgame::ProductData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_DesignProduct_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dgame.ProductData product = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_product()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_DesignProduct_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .dgame.ProductData product = 1;
  if (has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->product(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_DesignProduct_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .dgame.ProductData product = 1;
  if (has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->product(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_DesignProduct_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .dgame.ProductData product = 1;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_DesignProduct_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_DesignProduct_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_DesignProduct_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_DesignProduct_C2S::MergeFrom(const Msg_DesignProduct_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_product()) {
      mutable_product()->::dgame::ProductData::MergeFrom(from.product());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_DesignProduct_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_DesignProduct_C2S::CopyFrom(const Msg_DesignProduct_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DesignProduct_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_product()) {
    if (!this->product().IsInitialized()) return false;
  }
  return true;
}

void Msg_DesignProduct_C2S::Swap(Msg_DesignProduct_C2S* other) {
  if (other != this) {
    std::swap(product_, other->product_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_DesignProduct_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_DesignProduct_C2S_descriptor_;
  metadata.reflection = Msg_DesignProduct_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_DesignProduct_S2C::kIdFieldNumber;
const int Msg_DesignProduct_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_DesignProduct_S2C::Msg_DesignProduct_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_DesignProduct_S2C::InitAsDefaultInstance() {
}

Msg_DesignProduct_S2C::Msg_DesignProduct_S2C(const Msg_DesignProduct_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_DesignProduct_S2C::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_DesignProduct_S2C::~Msg_DesignProduct_S2C() {
  SharedDtor();
}

void Msg_DesignProduct_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_DesignProduct_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_DesignProduct_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_DesignProduct_S2C_descriptor_;
}

const Msg_DesignProduct_S2C& Msg_DesignProduct_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_DesignProduct_S2C* Msg_DesignProduct_S2C::default_instance_ = NULL;

Msg_DesignProduct_S2C* Msg_DesignProduct_S2C::New() const {
  return new Msg_DesignProduct_S2C;
}

void Msg_DesignProduct_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_DesignProduct_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }

      // optional uint32 error_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_DesignProduct_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_DesignProduct_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_DesignProduct_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_DesignProduct_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_DesignProduct_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_DesignProduct_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_DesignProduct_S2C::MergeFrom(const Msg_DesignProduct_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_DesignProduct_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_DesignProduct_S2C::CopyFrom(const Msg_DesignProduct_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DesignProduct_S2C::IsInitialized() const {

  return true;
}

void Msg_DesignProduct_S2C::Swap(Msg_DesignProduct_S2C* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_DesignProduct_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_DesignProduct_S2C_descriptor_;
  metadata.reflection = Msg_DesignProduct_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_UserProductList_C2S::Msg_UserProductList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserProductList_C2S::InitAsDefaultInstance() {
}

Msg_UserProductList_C2S::Msg_UserProductList_C2S(const Msg_UserProductList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserProductList_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserProductList_C2S::~Msg_UserProductList_C2S() {
  SharedDtor();
}

void Msg_UserProductList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserProductList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserProductList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserProductList_C2S_descriptor_;
}

const Msg_UserProductList_C2S& Msg_UserProductList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserProductList_C2S* Msg_UserProductList_C2S::default_instance_ = NULL;

Msg_UserProductList_C2S* Msg_UserProductList_C2S::New() const {
  return new Msg_UserProductList_C2S;
}

void Msg_UserProductList_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserProductList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_UserProductList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserProductList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserProductList_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserProductList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserProductList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserProductList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserProductList_C2S::MergeFrom(const Msg_UserProductList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserProductList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserProductList_C2S::CopyFrom(const Msg_UserProductList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserProductList_C2S::IsInitialized() const {

  return true;
}

void Msg_UserProductList_C2S::Swap(Msg_UserProductList_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserProductList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserProductList_C2S_descriptor_;
  metadata.reflection = Msg_UserProductList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserProductList_S2C::kProductListFieldNumber;
#endif  // !_MSC_VER

Msg_UserProductList_S2C::Msg_UserProductList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserProductList_S2C::InitAsDefaultInstance() {
}

Msg_UserProductList_S2C::Msg_UserProductList_S2C(const Msg_UserProductList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserProductList_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserProductList_S2C::~Msg_UserProductList_S2C() {
  SharedDtor();
}

void Msg_UserProductList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserProductList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserProductList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserProductList_S2C_descriptor_;
}

const Msg_UserProductList_S2C& Msg_UserProductList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserProductList_S2C* Msg_UserProductList_S2C::default_instance_ = NULL;

Msg_UserProductList_S2C* Msg_UserProductList_S2C::New() const {
  return new Msg_UserProductList_S2C;
}

void Msg_UserProductList_S2C::Clear() {
  product_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserProductList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dgame.ProductData product_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_product_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserProductList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dgame.ProductData product_list = 1;
  for (int i = 0; i < this->product_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->product_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserProductList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dgame.ProductData product_list = 1;
  for (int i = 0; i < this->product_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->product_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserProductList_S2C::ByteSize() const {
  int total_size = 0;

  // repeated .dgame.ProductData product_list = 1;
  total_size += 1 * this->product_list_size();
  for (int i = 0; i < this->product_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->product_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserProductList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserProductList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserProductList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserProductList_S2C::MergeFrom(const Msg_UserProductList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  product_list_.MergeFrom(from.product_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserProductList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserProductList_S2C::CopyFrom(const Msg_UserProductList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserProductList_S2C::IsInitialized() const {

  for (int i = 0; i < product_list_size(); i++) {
    if (!this->product_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_UserProductList_S2C::Swap(Msg_UserProductList_S2C* other) {
  if (other != this) {
    product_list_.Swap(&other->product_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserProductList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserProductList_S2C_descriptor_;
  metadata.reflection = Msg_UserProductList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserProductDetail_C2S::kIdFieldNumber;
#endif  // !_MSC_VER

Msg_UserProductDetail_C2S::Msg_UserProductDetail_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserProductDetail_C2S::InitAsDefaultInstance() {
}

Msg_UserProductDetail_C2S::Msg_UserProductDetail_C2S(const Msg_UserProductDetail_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserProductDetail_C2S::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserProductDetail_C2S::~Msg_UserProductDetail_C2S() {
  SharedDtor();
}

void Msg_UserProductDetail_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_UserProductDetail_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserProductDetail_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserProductDetail_C2S_descriptor_;
}

const Msg_UserProductDetail_C2S& Msg_UserProductDetail_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserProductDetail_C2S* Msg_UserProductDetail_C2S::default_instance_ = NULL;

Msg_UserProductDetail_C2S* Msg_UserProductDetail_C2S::New() const {
  return new Msg_UserProductDetail_C2S;
}

void Msg_UserProductDetail_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserProductDetail_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserProductDetail_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserProductDetail_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserProductDetail_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserProductDetail_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserProductDetail_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserProductDetail_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserProductDetail_C2S::MergeFrom(const Msg_UserProductDetail_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserProductDetail_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserProductDetail_C2S::CopyFrom(const Msg_UserProductDetail_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserProductDetail_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_UserProductDetail_C2S::Swap(Msg_UserProductDetail_C2S* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserProductDetail_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserProductDetail_C2S_descriptor_;
  metadata.reflection = Msg_UserProductDetail_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_UserProductDetail_S2C::kDetailFieldNumber;
#endif  // !_MSC_VER

Msg_UserProductDetail_S2C::Msg_UserProductDetail_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_UserProductDetail_S2C::InitAsDefaultInstance() {
  detail_ = const_cast< ::dgame::ProductDetailInfo*>(&::dgame::ProductDetailInfo::default_instance());
}

Msg_UserProductDetail_S2C::Msg_UserProductDetail_S2C(const Msg_UserProductDetail_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_UserProductDetail_S2C::SharedCtor() {
  _cached_size_ = 0;
  detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_UserProductDetail_S2C::~Msg_UserProductDetail_S2C() {
  SharedDtor();
}

void Msg_UserProductDetail_S2C::SharedDtor() {
  if (this != default_instance_) {
    delete detail_;
  }
}

void Msg_UserProductDetail_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_UserProductDetail_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_UserProductDetail_S2C_descriptor_;
}

const Msg_UserProductDetail_S2C& Msg_UserProductDetail_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_UserProductDetail_S2C* Msg_UserProductDetail_S2C::default_instance_ = NULL;

Msg_UserProductDetail_S2C* Msg_UserProductDetail_S2C::New() const {
  return new Msg_UserProductDetail_S2C;
}

void Msg_UserProductDetail_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_detail()) {
      if (detail_ != NULL) detail_->::dgame::ProductDetailInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_UserProductDetail_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dgame.ProductDetailInfo detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_UserProductDetail_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .dgame.ProductDetailInfo detail = 1;
  if (has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->detail(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_UserProductDetail_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .dgame.ProductDetailInfo detail = 1;
  if (has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->detail(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_UserProductDetail_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .dgame.ProductDetailInfo detail = 1;
    if (has_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->detail());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_UserProductDetail_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_UserProductDetail_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_UserProductDetail_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_UserProductDetail_S2C::MergeFrom(const Msg_UserProductDetail_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_detail()) {
      mutable_detail()->::dgame::ProductDetailInfo::MergeFrom(from.detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_UserProductDetail_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_UserProductDetail_S2C::CopyFrom(const Msg_UserProductDetail_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UserProductDetail_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_detail()) {
    if (!this->detail().IsInitialized()) return false;
  }
  return true;
}

void Msg_UserProductDetail_S2C::Swap(Msg_UserProductDetail_S2C* other) {
  if (other != this) {
    std::swap(detail_, other->detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_UserProductDetail_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_UserProductDetail_S2C_descriptor_;
  metadata.reflection = Msg_UserProductDetail_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_ServerTime_C2S::Msg_ServerTime_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ServerTime_C2S::InitAsDefaultInstance() {
}

Msg_ServerTime_C2S::Msg_ServerTime_C2S(const Msg_ServerTime_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ServerTime_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ServerTime_C2S::~Msg_ServerTime_C2S() {
  SharedDtor();
}

void Msg_ServerTime_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ServerTime_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ServerTime_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ServerTime_C2S_descriptor_;
}

const Msg_ServerTime_C2S& Msg_ServerTime_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ServerTime_C2S* Msg_ServerTime_C2S::default_instance_ = NULL;

Msg_ServerTime_C2S* Msg_ServerTime_C2S::New() const {
  return new Msg_ServerTime_C2S;
}

void Msg_ServerTime_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ServerTime_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_ServerTime_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ServerTime_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ServerTime_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ServerTime_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ServerTime_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ServerTime_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ServerTime_C2S::MergeFrom(const Msg_ServerTime_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ServerTime_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ServerTime_C2S::CopyFrom(const Msg_ServerTime_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerTime_C2S::IsInitialized() const {

  return true;
}

void Msg_ServerTime_C2S::Swap(Msg_ServerTime_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ServerTime_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ServerTime_C2S_descriptor_;
  metadata.reflection = Msg_ServerTime_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_ServerTime_S2C::kServerTimeFieldNumber;
#endif  // !_MSC_VER

Msg_ServerTime_S2C::Msg_ServerTime_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ServerTime_S2C::InitAsDefaultInstance() {
}

Msg_ServerTime_S2C::Msg_ServerTime_S2C(const Msg_ServerTime_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ServerTime_S2C::SharedCtor() {
  _cached_size_ = 0;
  server_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ServerTime_S2C::~Msg_ServerTime_S2C() {
  SharedDtor();
}

void Msg_ServerTime_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ServerTime_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ServerTime_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ServerTime_S2C_descriptor_;
}

const Msg_ServerTime_S2C& Msg_ServerTime_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ServerTime_S2C* Msg_ServerTime_S2C::default_instance_ = NULL;

Msg_ServerTime_S2C* Msg_ServerTime_S2C::New() const {
  return new Msg_ServerTime_S2C;
}

void Msg_ServerTime_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    server_time_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ServerTime_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 server_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_time_)));
          set_has_server_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_ServerTime_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 server_time = 1;
  if (has_server_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ServerTime_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 server_time = 1;
  if (has_server_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ServerTime_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 server_time = 1;
    if (has_server_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ServerTime_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ServerTime_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ServerTime_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ServerTime_S2C::MergeFrom(const Msg_ServerTime_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_time()) {
      set_server_time(from.server_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ServerTime_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ServerTime_S2C::CopyFrom(const Msg_ServerTime_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerTime_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_ServerTime_S2C::Swap(Msg_ServerTime_S2C* other) {
  if (other != this) {
    std::swap(server_time_, other->server_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ServerTime_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ServerTime_S2C_descriptor_;
  metadata.reflection = Msg_ServerTime_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_GoodsRecommend_C2S::Msg_GoodsRecommend_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_GoodsRecommend_C2S::InitAsDefaultInstance() {
}

Msg_GoodsRecommend_C2S::Msg_GoodsRecommend_C2S(const Msg_GoodsRecommend_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_GoodsRecommend_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_GoodsRecommend_C2S::~Msg_GoodsRecommend_C2S() {
  SharedDtor();
}

void Msg_GoodsRecommend_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_GoodsRecommend_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_GoodsRecommend_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_GoodsRecommend_C2S_descriptor_;
}

const Msg_GoodsRecommend_C2S& Msg_GoodsRecommend_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_GoodsRecommend_C2S* Msg_GoodsRecommend_C2S::default_instance_ = NULL;

Msg_GoodsRecommend_C2S* Msg_GoodsRecommend_C2S::New() const {
  return new Msg_GoodsRecommend_C2S;
}

void Msg_GoodsRecommend_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_GoodsRecommend_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_GoodsRecommend_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_GoodsRecommend_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_GoodsRecommend_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_GoodsRecommend_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_GoodsRecommend_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_GoodsRecommend_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_GoodsRecommend_C2S::MergeFrom(const Msg_GoodsRecommend_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_GoodsRecommend_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_GoodsRecommend_C2S::CopyFrom(const Msg_GoodsRecommend_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GoodsRecommend_C2S::IsInitialized() const {

  return true;
}

void Msg_GoodsRecommend_C2S::Swap(Msg_GoodsRecommend_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_GoodsRecommend_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_GoodsRecommend_C2S_descriptor_;
  metadata.reflection = Msg_GoodsRecommend_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_GoodsRecommend_S2C::kGoodsListFieldNumber;
#endif  // !_MSC_VER

Msg_GoodsRecommend_S2C::Msg_GoodsRecommend_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_GoodsRecommend_S2C::InitAsDefaultInstance() {
}

Msg_GoodsRecommend_S2C::Msg_GoodsRecommend_S2C(const Msg_GoodsRecommend_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_GoodsRecommend_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_GoodsRecommend_S2C::~Msg_GoodsRecommend_S2C() {
  SharedDtor();
}

void Msg_GoodsRecommend_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_GoodsRecommend_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_GoodsRecommend_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_GoodsRecommend_S2C_descriptor_;
}

const Msg_GoodsRecommend_S2C& Msg_GoodsRecommend_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_GoodsRecommend_S2C* Msg_GoodsRecommend_S2C::default_instance_ = NULL;

Msg_GoodsRecommend_S2C* Msg_GoodsRecommend_S2C::New() const {
  return new Msg_GoodsRecommend_S2C;
}

void Msg_GoodsRecommend_S2C::Clear() {
  goods_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_GoodsRecommend_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 goods_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goods_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_goods_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_goods_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_goods_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_GoodsRecommend_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 goods_list = 1;
  for (int i = 0; i < this->goods_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->goods_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_GoodsRecommend_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 goods_list = 1;
  for (int i = 0; i < this->goods_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->goods_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_GoodsRecommend_S2C::ByteSize() const {
  int total_size = 0;

  // repeated uint32 goods_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->goods_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->goods_list(i));
    }
    total_size += 1 * this->goods_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_GoodsRecommend_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_GoodsRecommend_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_GoodsRecommend_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_GoodsRecommend_S2C::MergeFrom(const Msg_GoodsRecommend_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_list_.MergeFrom(from.goods_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_GoodsRecommend_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_GoodsRecommend_S2C::CopyFrom(const Msg_GoodsRecommend_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GoodsRecommend_S2C::IsInitialized() const {

  return true;
}

void Msg_GoodsRecommend_S2C::Swap(Msg_GoodsRecommend_S2C* other) {
  if (other != this) {
    goods_list_.Swap(&other->goods_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_GoodsRecommend_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_GoodsRecommend_S2C_descriptor_;
  metadata.reflection = Msg_GoodsRecommend_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_GoodsSearch_C2S::kTypeFieldNumber;
#endif  // !_MSC_VER

Msg_GoodsSearch_C2S::Msg_GoodsSearch_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_GoodsSearch_C2S::InitAsDefaultInstance() {
}

Msg_GoodsSearch_C2S::Msg_GoodsSearch_C2S(const Msg_GoodsSearch_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_GoodsSearch_C2S::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_GoodsSearch_C2S::~Msg_GoodsSearch_C2S() {
  SharedDtor();
}

void Msg_GoodsSearch_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_GoodsSearch_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_GoodsSearch_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_GoodsSearch_C2S_descriptor_;
}

const Msg_GoodsSearch_C2S& Msg_GoodsSearch_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_GoodsSearch_C2S* Msg_GoodsSearch_C2S::default_instance_ = NULL;

Msg_GoodsSearch_C2S* Msg_GoodsSearch_C2S::New() const {
  return new Msg_GoodsSearch_C2S;
}

void Msg_GoodsSearch_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_GoodsSearch_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_GoodsSearch_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_GoodsSearch_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_GoodsSearch_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_GoodsSearch_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_GoodsSearch_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_GoodsSearch_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_GoodsSearch_C2S::MergeFrom(const Msg_GoodsSearch_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_GoodsSearch_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_GoodsSearch_C2S::CopyFrom(const Msg_GoodsSearch_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GoodsSearch_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_GoodsSearch_C2S::Swap(Msg_GoodsSearch_C2S* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_GoodsSearch_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_GoodsSearch_C2S_descriptor_;
  metadata.reflection = Msg_GoodsSearch_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_GoodsSearch_S2C::kTypeFieldNumber;
const int Msg_GoodsSearch_S2C::kGoodsListFieldNumber;
#endif  // !_MSC_VER

Msg_GoodsSearch_S2C::Msg_GoodsSearch_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_GoodsSearch_S2C::InitAsDefaultInstance() {
}

Msg_GoodsSearch_S2C::Msg_GoodsSearch_S2C(const Msg_GoodsSearch_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_GoodsSearch_S2C::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_GoodsSearch_S2C::~Msg_GoodsSearch_S2C() {
  SharedDtor();
}

void Msg_GoodsSearch_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_GoodsSearch_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_GoodsSearch_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_GoodsSearch_S2C_descriptor_;
}

const Msg_GoodsSearch_S2C& Msg_GoodsSearch_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_GoodsSearch_S2C* Msg_GoodsSearch_S2C::default_instance_ = NULL;

Msg_GoodsSearch_S2C* Msg_GoodsSearch_S2C::New() const {
  return new Msg_GoodsSearch_S2C;
}

void Msg_GoodsSearch_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
  }
  goods_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_GoodsSearch_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_goods_list;
        break;
      }

      // repeated uint32 goods_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goods_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_goods_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_goods_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_goods_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_GoodsSearch_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // repeated uint32 goods_list = 2;
  for (int i = 0; i < this->goods_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->goods_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_GoodsSearch_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // repeated uint32 goods_list = 2;
  for (int i = 0; i < this->goods_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->goods_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_GoodsSearch_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  // repeated uint32 goods_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->goods_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->goods_list(i));
    }
    total_size += 1 * this->goods_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_GoodsSearch_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_GoodsSearch_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_GoodsSearch_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_GoodsSearch_S2C::MergeFrom(const Msg_GoodsSearch_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_list_.MergeFrom(from.goods_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_GoodsSearch_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_GoodsSearch_S2C::CopyFrom(const Msg_GoodsSearch_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GoodsSearch_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_GoodsSearch_S2C::Swap(Msg_GoodsSearch_S2C* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    goods_list_.Swap(&other->goods_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_GoodsSearch_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_GoodsSearch_S2C_descriptor_;
  metadata.reflection = Msg_GoodsSearch_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Chat_C2S::kTypeFieldNumber;
const int Msg_Chat_C2S::kTargetIdFieldNumber;
const int Msg_Chat_C2S::kTargetNameFieldNumber;
const int Msg_Chat_C2S::kTextFieldNumber;
#endif  // !_MSC_VER

Msg_Chat_C2S::Msg_Chat_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Chat_C2S::InitAsDefaultInstance() {
}

Msg_Chat_C2S::Msg_Chat_C2S(const Msg_Chat_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Chat_C2S::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  target_id_ = 0u;
  target_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Chat_C2S::~Msg_Chat_C2S() {
  SharedDtor();
}

void Msg_Chat_C2S::SharedDtor() {
  if (target_name_ != &::google::protobuf::internal::kEmptyString) {
    delete target_name_;
  }
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void Msg_Chat_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Chat_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Chat_C2S_descriptor_;
}

const Msg_Chat_C2S& Msg_Chat_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Chat_C2S* Msg_Chat_C2S::default_instance_ = NULL;

Msg_Chat_C2S* Msg_Chat_C2S::New() const {
  return new Msg_Chat_C2S;
}

void Msg_Chat_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    target_id_ = 0u;
    if (has_target_name()) {
      if (target_name_ != &::google::protobuf::internal::kEmptyString) {
        target_name_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::kEmptyString) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Chat_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_target_id;
        break;
      }

      // optional uint32 target_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_target_name;
        break;
      }

      // optional string target_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_target_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->target_name().data(), this->target_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_text;
        break;
      }

      // required string text = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Chat_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 target_id = 2;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_id(), output);
  }

  // optional string target_name = 3;
  if (has_target_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->target_name().data(), this->target_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->target_name(), output);
  }

  // required string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Chat_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 target_id = 2;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_id(), target);
  }

  // optional string target_name = 3;
  if (has_target_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->target_name().data(), this->target_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target_name(), target);
  }

  // required string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Chat_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 target_id = 2;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_id());
    }

    // optional string target_name = 3;
    if (has_target_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target_name());
    }

    // required string text = 4;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Chat_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Chat_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Chat_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Chat_C2S::MergeFrom(const Msg_Chat_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
    if (from.has_target_name()) {
      set_target_name(from.target_name());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Chat_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Chat_C2S::CopyFrom(const Msg_Chat_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Chat_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  return true;
}

void Msg_Chat_C2S::Swap(Msg_Chat_C2S* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(target_id_, other->target_id_);
    std::swap(target_name_, other->target_name_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Chat_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Chat_C2S_descriptor_;
  metadata.reflection = Msg_Chat_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Chat_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_Chat_S2C::Msg_Chat_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Chat_S2C::InitAsDefaultInstance() {
}

Msg_Chat_S2C::Msg_Chat_S2C(const Msg_Chat_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Chat_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Chat_S2C::~Msg_Chat_S2C() {
  SharedDtor();
}

void Msg_Chat_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_Chat_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Chat_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Chat_S2C_descriptor_;
}

const Msg_Chat_S2C& Msg_Chat_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Chat_S2C* Msg_Chat_S2C::default_instance_ = NULL;

Msg_Chat_S2C* Msg_Chat_S2C::New() const {
  return new Msg_Chat_S2C;
}

void Msg_Chat_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Chat_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Chat_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Chat_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Chat_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Chat_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Chat_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Chat_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Chat_S2C::MergeFrom(const Msg_Chat_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Chat_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Chat_S2C::CopyFrom(const Msg_Chat_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Chat_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_Chat_S2C::Swap(Msg_Chat_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Chat_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Chat_S2C_descriptor_;
  metadata.reflection = Msg_Chat_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Chat_Notify_S2C::kTypeFieldNumber;
const int Msg_Chat_Notify_S2C::kSenderIdFieldNumber;
const int Msg_Chat_Notify_S2C::kSenderNameFieldNumber;
const int Msg_Chat_Notify_S2C::kTargetIdFieldNumber;
const int Msg_Chat_Notify_S2C::kTargetNameFieldNumber;
const int Msg_Chat_Notify_S2C::kTextFieldNumber;
#endif  // !_MSC_VER

Msg_Chat_Notify_S2C::Msg_Chat_Notify_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Chat_Notify_S2C::InitAsDefaultInstance() {
}

Msg_Chat_Notify_S2C::Msg_Chat_Notify_S2C(const Msg_Chat_Notify_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Chat_Notify_S2C::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  sender_id_ = 0u;
  sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  target_id_ = 0u;
  target_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Chat_Notify_S2C::~Msg_Chat_Notify_S2C() {
  SharedDtor();
}

void Msg_Chat_Notify_S2C::SharedDtor() {
  if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
    delete sender_name_;
  }
  if (target_name_ != &::google::protobuf::internal::kEmptyString) {
    delete target_name_;
  }
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void Msg_Chat_Notify_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Chat_Notify_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Chat_Notify_S2C_descriptor_;
}

const Msg_Chat_Notify_S2C& Msg_Chat_Notify_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Chat_Notify_S2C* Msg_Chat_Notify_S2C::default_instance_ = NULL;

Msg_Chat_Notify_S2C* Msg_Chat_Notify_S2C::New() const {
  return new Msg_Chat_Notify_S2C;
}

void Msg_Chat_Notify_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    sender_id_ = 0u;
    if (has_sender_name()) {
      if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
        sender_name_->clear();
      }
    }
    target_id_ = 0u;
    if (has_target_name()) {
      if (target_name_ != &::google::protobuf::internal::kEmptyString) {
        target_name_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::kEmptyString) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Chat_Notify_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sender_id;
        break;
      }

      // optional uint32 sender_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sender_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sender_id_)));
          set_has_sender_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sender_name;
        break;
      }

      // optional string sender_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sender_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sender_name().data(), this->sender_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_target_id;
        break;
      }

      // optional uint32 target_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_target_name;
        break;
      }

      // optional string target_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_target_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->target_name().data(), this->target_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_text;
        break;
      }

      // required string text = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Chat_Notify_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 sender_id = 2;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sender_id(), output);
  }

  // optional string sender_name = 3;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sender_name(), output);
  }

  // optional uint32 target_id = 4;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_id(), output);
  }

  // optional string target_name = 5;
  if (has_target_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->target_name().data(), this->target_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->target_name(), output);
  }

  // required string text = 6;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Chat_Notify_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 sender_id = 2;
  if (has_sender_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sender_id(), target);
  }

  // optional string sender_name = 3;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender_name(), target);
  }

  // optional uint32 target_id = 4;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_id(), target);
  }

  // optional string target_name = 5;
  if (has_target_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->target_name().data(), this->target_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->target_name(), target);
  }

  // required string text = 6;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Chat_Notify_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sender_id());
    }

    // optional string sender_name = 3;
    if (has_sender_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_name());
    }

    // optional uint32 target_id = 4;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_id());
    }

    // optional string target_name = 5;
    if (has_target_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target_name());
    }

    // required string text = 6;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Chat_Notify_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Chat_Notify_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Chat_Notify_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Chat_Notify_S2C::MergeFrom(const Msg_Chat_Notify_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_sender_name()) {
      set_sender_name(from.sender_name());
    }
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
    if (from.has_target_name()) {
      set_target_name(from.target_name());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Chat_Notify_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Chat_Notify_S2C::CopyFrom(const Msg_Chat_Notify_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Chat_Notify_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  return true;
}

void Msg_Chat_Notify_S2C::Swap(Msg_Chat_Notify_S2C* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(sender_id_, other->sender_id_);
    std::swap(sender_name_, other->sender_name_);
    std::swap(target_id_, other->target_id_);
    std::swap(target_name_, other->target_name_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Chat_Notify_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Chat_Notify_S2C_descriptor_;
  metadata.reflection = Msg_Chat_Notify_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_CreateOrder_C2S::kItemListFieldNumber;
const int Msg_CreateOrder_C2S::kAdressFieldNumber;
const int Msg_CreateOrder_C2S::kIsInvoiceFieldNumber;
const int Msg_CreateOrder_C2S::kInvoiceTitleFieldNumber;
const int Msg_CreateOrder_C2S::kTephoneFieldNumber;
const int Msg_CreateOrder_C2S::kReceiveNameFieldNumber;
#endif  // !_MSC_VER

Msg_CreateOrder_C2S::Msg_CreateOrder_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_CreateOrder_C2S::InitAsDefaultInstance() {
}

Msg_CreateOrder_C2S::Msg_CreateOrder_C2S(const Msg_CreateOrder_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_CreateOrder_C2S::SharedCtor() {
  _cached_size_ = 0;
  adress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  is_invoice_ = 0u;
  invoice_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receive_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_CreateOrder_C2S::~Msg_CreateOrder_C2S() {
  SharedDtor();
}

void Msg_CreateOrder_C2S::SharedDtor() {
  if (adress_ != &::google::protobuf::internal::kEmptyString) {
    delete adress_;
  }
  if (invoice_title_ != &::google::protobuf::internal::kEmptyString) {
    delete invoice_title_;
  }
  if (tephone_ != &::google::protobuf::internal::kEmptyString) {
    delete tephone_;
  }
  if (receive_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receive_name_;
  }
  if (this != default_instance_) {
  }
}

void Msg_CreateOrder_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CreateOrder_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CreateOrder_C2S_descriptor_;
}

const Msg_CreateOrder_C2S& Msg_CreateOrder_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_CreateOrder_C2S* Msg_CreateOrder_C2S::default_instance_ = NULL;

Msg_CreateOrder_C2S* Msg_CreateOrder_C2S::New() const {
  return new Msg_CreateOrder_C2S;
}

void Msg_CreateOrder_C2S::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_adress()) {
      if (adress_ != &::google::protobuf::internal::kEmptyString) {
        adress_->clear();
      }
    }
    is_invoice_ = 0u;
    if (has_invoice_title()) {
      if (invoice_title_ != &::google::protobuf::internal::kEmptyString) {
        invoice_title_->clear();
      }
    }
    if (has_tephone()) {
      if (tephone_ != &::google::protobuf::internal::kEmptyString) {
        tephone_->clear();
      }
    }
    if (has_receive_name()) {
      if (receive_name_ != &::google::protobuf::internal::kEmptyString) {
        receive_name_->clear();
      }
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_CreateOrder_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dgame.OrderItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(18)) goto parse_adress;
        break;
      }

      // required string adress = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adress().data(), this->adress().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_invoice;
        break;
      }

      // required uint32 is_invoice = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_invoice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_invoice_)));
          set_has_is_invoice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_invoice_title;
        break;
      }

      // optional string invoice_title = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_invoice_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invoice_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->invoice_title().data(), this->invoice_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_tephone;
        break;
      }

      // required string tephone = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tephone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tephone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tephone().data(), this->tephone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_receive_name;
        break;
      }

      // required string receive_name = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receive_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receive_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receive_name().data(), this->receive_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_CreateOrder_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dgame.OrderItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }

  // required string adress = 2;
  if (has_adress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adress().data(), this->adress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->adress(), output);
  }

  // required uint32 is_invoice = 3;
  if (has_is_invoice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->is_invoice(), output);
  }

  // optional string invoice_title = 4;
  if (has_invoice_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invoice_title().data(), this->invoice_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->invoice_title(), output);
  }

  // required string tephone = 5;
  if (has_tephone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tephone().data(), this->tephone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->tephone(), output);
  }

  // required string receive_name = 6;
  if (has_receive_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receive_name().data(), this->receive_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->receive_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_CreateOrder_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dgame.OrderItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }

  // required string adress = 2;
  if (has_adress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adress().data(), this->adress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->adress(), target);
  }

  // required uint32 is_invoice = 3;
  if (has_is_invoice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->is_invoice(), target);
  }

  // optional string invoice_title = 4;
  if (has_invoice_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invoice_title().data(), this->invoice_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->invoice_title(), target);
  }

  // required string tephone = 5;
  if (has_tephone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tephone().data(), this->tephone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tephone(), target);
  }

  // required string receive_name = 6;
  if (has_receive_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receive_name().data(), this->receive_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->receive_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_CreateOrder_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string adress = 2;
    if (has_adress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adress());
    }

    // required uint32 is_invoice = 3;
    if (has_is_invoice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_invoice());
    }

    // optional string invoice_title = 4;
    if (has_invoice_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invoice_title());
    }

    // required string tephone = 5;
    if (has_tephone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tephone());
    }

    // required string receive_name = 6;
    if (has_receive_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receive_name());
    }

  }
  // repeated .dgame.OrderItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CreateOrder_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_CreateOrder_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_CreateOrder_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_CreateOrder_C2S::MergeFrom(const Msg_CreateOrder_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_adress()) {
      set_adress(from.adress());
    }
    if (from.has_is_invoice()) {
      set_is_invoice(from.is_invoice());
    }
    if (from.has_invoice_title()) {
      set_invoice_title(from.invoice_title());
    }
    if (from.has_tephone()) {
      set_tephone(from.tephone());
    }
    if (from.has_receive_name()) {
      set_receive_name(from.receive_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_CreateOrder_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CreateOrder_C2S::CopyFrom(const Msg_CreateOrder_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateOrder_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000036) != 0x00000036) return false;

  return true;
}

void Msg_CreateOrder_C2S::Swap(Msg_CreateOrder_C2S* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(adress_, other->adress_);
    std::swap(is_invoice_, other->is_invoice_);
    std::swap(invoice_title_, other->invoice_title_);
    std::swap(tephone_, other->tephone_);
    std::swap(receive_name_, other->receive_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_CreateOrder_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CreateOrder_C2S_descriptor_;
  metadata.reflection = Msg_CreateOrder_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_CreateOrder_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_CreateOrder_S2C::Msg_CreateOrder_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_CreateOrder_S2C::InitAsDefaultInstance() {
}

Msg_CreateOrder_S2C::Msg_CreateOrder_S2C(const Msg_CreateOrder_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_CreateOrder_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_CreateOrder_S2C::~Msg_CreateOrder_S2C() {
  SharedDtor();
}

void Msg_CreateOrder_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_CreateOrder_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CreateOrder_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CreateOrder_S2C_descriptor_;
}

const Msg_CreateOrder_S2C& Msg_CreateOrder_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_CreateOrder_S2C* Msg_CreateOrder_S2C::default_instance_ = NULL;

Msg_CreateOrder_S2C* Msg_CreateOrder_S2C::New() const {
  return new Msg_CreateOrder_S2C;
}

void Msg_CreateOrder_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_CreateOrder_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_CreateOrder_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_CreateOrder_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_CreateOrder_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CreateOrder_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_CreateOrder_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_CreateOrder_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_CreateOrder_S2C::MergeFrom(const Msg_CreateOrder_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_CreateOrder_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CreateOrder_S2C::CopyFrom(const Msg_CreateOrder_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateOrder_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_CreateOrder_S2C::Swap(Msg_CreateOrder_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_CreateOrder_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CreateOrder_S2C_descriptor_;
  metadata.reflection = Msg_CreateOrder_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_AddItemToShoppingCart_C2S::kItmeIdFieldNumber;
#endif  // !_MSC_VER

Msg_AddItemToShoppingCart_C2S::Msg_AddItemToShoppingCart_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_AddItemToShoppingCart_C2S::InitAsDefaultInstance() {
}

Msg_AddItemToShoppingCart_C2S::Msg_AddItemToShoppingCart_C2S(const Msg_AddItemToShoppingCart_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_AddItemToShoppingCart_C2S::SharedCtor() {
  _cached_size_ = 0;
  itme_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_AddItemToShoppingCart_C2S::~Msg_AddItemToShoppingCart_C2S() {
  SharedDtor();
}

void Msg_AddItemToShoppingCart_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_AddItemToShoppingCart_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_AddItemToShoppingCart_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_AddItemToShoppingCart_C2S_descriptor_;
}

const Msg_AddItemToShoppingCart_C2S& Msg_AddItemToShoppingCart_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_AddItemToShoppingCart_C2S* Msg_AddItemToShoppingCart_C2S::default_instance_ = NULL;

Msg_AddItemToShoppingCart_C2S* Msg_AddItemToShoppingCart_C2S::New() const {
  return new Msg_AddItemToShoppingCart_C2S;
}

void Msg_AddItemToShoppingCart_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itme_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_AddItemToShoppingCart_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 itme_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itme_id_)));
          set_has_itme_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_AddItemToShoppingCart_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 itme_id = 1;
  if (has_itme_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itme_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_AddItemToShoppingCart_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 itme_id = 1;
  if (has_itme_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itme_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_AddItemToShoppingCart_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 itme_id = 1;
    if (has_itme_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itme_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_AddItemToShoppingCart_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_AddItemToShoppingCart_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_AddItemToShoppingCart_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_AddItemToShoppingCart_C2S::MergeFrom(const Msg_AddItemToShoppingCart_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itme_id()) {
      set_itme_id(from.itme_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_AddItemToShoppingCart_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_AddItemToShoppingCart_C2S::CopyFrom(const Msg_AddItemToShoppingCart_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddItemToShoppingCart_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_AddItemToShoppingCart_C2S::Swap(Msg_AddItemToShoppingCart_C2S* other) {
  if (other != this) {
    std::swap(itme_id_, other->itme_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_AddItemToShoppingCart_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_AddItemToShoppingCart_C2S_descriptor_;
  metadata.reflection = Msg_AddItemToShoppingCart_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_AddItemToShoppingCart_S2C::kErrorCodeFieldNumber;
const int Msg_AddItemToShoppingCart_S2C::kItmeIdFieldNumber;
#endif  // !_MSC_VER

Msg_AddItemToShoppingCart_S2C::Msg_AddItemToShoppingCart_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_AddItemToShoppingCart_S2C::InitAsDefaultInstance() {
}

Msg_AddItemToShoppingCart_S2C::Msg_AddItemToShoppingCart_S2C(const Msg_AddItemToShoppingCart_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_AddItemToShoppingCart_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  itme_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_AddItemToShoppingCart_S2C::~Msg_AddItemToShoppingCart_S2C() {
  SharedDtor();
}

void Msg_AddItemToShoppingCart_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_AddItemToShoppingCart_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_AddItemToShoppingCart_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_AddItemToShoppingCart_S2C_descriptor_;
}

const Msg_AddItemToShoppingCart_S2C& Msg_AddItemToShoppingCart_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_AddItemToShoppingCart_S2C* Msg_AddItemToShoppingCart_S2C::default_instance_ = NULL;

Msg_AddItemToShoppingCart_S2C* Msg_AddItemToShoppingCart_S2C::New() const {
  return new Msg_AddItemToShoppingCart_S2C;
}

void Msg_AddItemToShoppingCart_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
    itme_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_AddItemToShoppingCart_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itme_id;
        break;
      }

      // required uint32 itme_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itme_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itme_id_)));
          set_has_itme_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_AddItemToShoppingCart_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  // required uint32 itme_id = 2;
  if (has_itme_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itme_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_AddItemToShoppingCart_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  // required uint32 itme_id = 2;
  if (has_itme_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itme_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_AddItemToShoppingCart_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

    // required uint32 itme_id = 2;
    if (has_itme_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itme_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_AddItemToShoppingCart_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_AddItemToShoppingCart_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_AddItemToShoppingCart_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_AddItemToShoppingCart_S2C::MergeFrom(const Msg_AddItemToShoppingCart_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_itme_id()) {
      set_itme_id(from.itme_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_AddItemToShoppingCart_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_AddItemToShoppingCart_S2C::CopyFrom(const Msg_AddItemToShoppingCart_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddItemToShoppingCart_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Msg_AddItemToShoppingCart_S2C::Swap(Msg_AddItemToShoppingCart_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(itme_id_, other->itme_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_AddItemToShoppingCart_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_AddItemToShoppingCart_S2C_descriptor_;
  metadata.reflection = Msg_AddItemToShoppingCart_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_ShoppingCartItemList_C2S::Msg_ShoppingCartItemList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ShoppingCartItemList_C2S::InitAsDefaultInstance() {
}

Msg_ShoppingCartItemList_C2S::Msg_ShoppingCartItemList_C2S(const Msg_ShoppingCartItemList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ShoppingCartItemList_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ShoppingCartItemList_C2S::~Msg_ShoppingCartItemList_C2S() {
  SharedDtor();
}

void Msg_ShoppingCartItemList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ShoppingCartItemList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ShoppingCartItemList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ShoppingCartItemList_C2S_descriptor_;
}

const Msg_ShoppingCartItemList_C2S& Msg_ShoppingCartItemList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ShoppingCartItemList_C2S* Msg_ShoppingCartItemList_C2S::default_instance_ = NULL;

Msg_ShoppingCartItemList_C2S* Msg_ShoppingCartItemList_C2S::New() const {
  return new Msg_ShoppingCartItemList_C2S;
}

void Msg_ShoppingCartItemList_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ShoppingCartItemList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_ShoppingCartItemList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ShoppingCartItemList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ShoppingCartItemList_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ShoppingCartItemList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ShoppingCartItemList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ShoppingCartItemList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ShoppingCartItemList_C2S::MergeFrom(const Msg_ShoppingCartItemList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ShoppingCartItemList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ShoppingCartItemList_C2S::CopyFrom(const Msg_ShoppingCartItemList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ShoppingCartItemList_C2S::IsInitialized() const {

  return true;
}

void Msg_ShoppingCartItemList_C2S::Swap(Msg_ShoppingCartItemList_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ShoppingCartItemList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ShoppingCartItemList_C2S_descriptor_;
  metadata.reflection = Msg_ShoppingCartItemList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_ShoppingCartItemList_S2C::kItemListFieldNumber;
#endif  // !_MSC_VER

Msg_ShoppingCartItemList_S2C::Msg_ShoppingCartItemList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ShoppingCartItemList_S2C::InitAsDefaultInstance() {
}

Msg_ShoppingCartItemList_S2C::Msg_ShoppingCartItemList_S2C(const Msg_ShoppingCartItemList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ShoppingCartItemList_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ShoppingCartItemList_S2C::~Msg_ShoppingCartItemList_S2C() {
  SharedDtor();
}

void Msg_ShoppingCartItemList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ShoppingCartItemList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ShoppingCartItemList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ShoppingCartItemList_S2C_descriptor_;
}

const Msg_ShoppingCartItemList_S2C& Msg_ShoppingCartItemList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ShoppingCartItemList_S2C* Msg_ShoppingCartItemList_S2C::default_instance_ = NULL;

Msg_ShoppingCartItemList_S2C* Msg_ShoppingCartItemList_S2C::New() const {
  return new Msg_ShoppingCartItemList_S2C;
}

void Msg_ShoppingCartItemList_S2C::Clear() {
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ShoppingCartItemList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_item_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_item_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_ShoppingCartItemList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->item_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ShoppingCartItemList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->item_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ShoppingCartItemList_S2C::ByteSize() const {
  int total_size = 0;

  // repeated uint32 item_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->item_list(i));
    }
    total_size += 1 * this->item_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ShoppingCartItemList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ShoppingCartItemList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ShoppingCartItemList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ShoppingCartItemList_S2C::MergeFrom(const Msg_ShoppingCartItemList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ShoppingCartItemList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ShoppingCartItemList_S2C::CopyFrom(const Msg_ShoppingCartItemList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ShoppingCartItemList_S2C::IsInitialized() const {

  return true;
}

void Msg_ShoppingCartItemList_S2C::Swap(Msg_ShoppingCartItemList_S2C* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ShoppingCartItemList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ShoppingCartItemList_S2C_descriptor_;
  metadata.reflection = Msg_ShoppingCartItemList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Feedback_C2S::kDescFieldNumber;
#endif  // !_MSC_VER

Msg_Feedback_C2S::Msg_Feedback_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Feedback_C2S::InitAsDefaultInstance() {
}

Msg_Feedback_C2S::Msg_Feedback_C2S(const Msg_Feedback_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Feedback_C2S::SharedCtor() {
  _cached_size_ = 0;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Feedback_C2S::~Msg_Feedback_C2S() {
  SharedDtor();
}

void Msg_Feedback_C2S::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
  }
}

void Msg_Feedback_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Feedback_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Feedback_C2S_descriptor_;
}

const Msg_Feedback_C2S& Msg_Feedback_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Feedback_C2S* Msg_Feedback_C2S::default_instance_ = NULL;

Msg_Feedback_C2S* Msg_Feedback_C2S::New() const {
  return new Msg_Feedback_C2S;
}

void Msg_Feedback_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Feedback_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string desc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Feedback_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string desc = 1;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->desc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Feedback_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string desc = 1;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->desc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Feedback_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string desc = 1;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Feedback_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Feedback_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Feedback_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Feedback_C2S::MergeFrom(const Msg_Feedback_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Feedback_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Feedback_C2S::CopyFrom(const Msg_Feedback_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Feedback_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_Feedback_C2S::Swap(Msg_Feedback_C2S* other) {
  if (other != this) {
    std::swap(desc_, other->desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Feedback_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Feedback_C2S_descriptor_;
  metadata.reflection = Msg_Feedback_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Feedback_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_Feedback_S2C::Msg_Feedback_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Feedback_S2C::InitAsDefaultInstance() {
}

Msg_Feedback_S2C::Msg_Feedback_S2C(const Msg_Feedback_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Feedback_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Feedback_S2C::~Msg_Feedback_S2C() {
  SharedDtor();
}

void Msg_Feedback_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_Feedback_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Feedback_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Feedback_S2C_descriptor_;
}

const Msg_Feedback_S2C& Msg_Feedback_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Feedback_S2C* Msg_Feedback_S2C::default_instance_ = NULL;

Msg_Feedback_S2C* Msg_Feedback_S2C::New() const {
  return new Msg_Feedback_S2C;
}

void Msg_Feedback_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Feedback_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Feedback_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Feedback_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Feedback_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Feedback_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Feedback_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Feedback_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Feedback_S2C::MergeFrom(const Msg_Feedback_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Feedback_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Feedback_S2C::CopyFrom(const Msg_Feedback_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Feedback_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_Feedback_S2C::Swap(Msg_Feedback_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Feedback_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Feedback_S2C_descriptor_;
  metadata.reflection = Msg_Feedback_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_DesignerApply_C2S::kDesignerTypeFieldNumber;
const int Msg_DesignerApply_C2S::kExpDescFieldNumber;
const int Msg_DesignerApply_C2S::kCertificateUrlFieldNumber;
const int Msg_DesignerApply_C2S::kSketchInfoFieldNumber;
#endif  // !_MSC_VER

Msg_DesignerApply_C2S::Msg_DesignerApply_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_DesignerApply_C2S::InitAsDefaultInstance() {
  sketch_info_ = const_cast< ::dgame::ProductSketchInfo*>(&::dgame::ProductSketchInfo::default_instance());
}

Msg_DesignerApply_C2S::Msg_DesignerApply_C2S(const Msg_DesignerApply_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_DesignerApply_C2S::SharedCtor() {
  _cached_size_ = 0;
  designer_type_ = 0u;
  exp_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  certificate_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sketch_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_DesignerApply_C2S::~Msg_DesignerApply_C2S() {
  SharedDtor();
}

void Msg_DesignerApply_C2S::SharedDtor() {
  if (exp_desc_ != &::google::protobuf::internal::kEmptyString) {
    delete exp_desc_;
  }
  if (certificate_url_ != &::google::protobuf::internal::kEmptyString) {
    delete certificate_url_;
  }
  if (this != default_instance_) {
    delete sketch_info_;
  }
}

void Msg_DesignerApply_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_DesignerApply_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_DesignerApply_C2S_descriptor_;
}

const Msg_DesignerApply_C2S& Msg_DesignerApply_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_DesignerApply_C2S* Msg_DesignerApply_C2S::default_instance_ = NULL;

Msg_DesignerApply_C2S* Msg_DesignerApply_C2S::New() const {
  return new Msg_DesignerApply_C2S;
}

void Msg_DesignerApply_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    designer_type_ = 0u;
    if (has_exp_desc()) {
      if (exp_desc_ != &::google::protobuf::internal::kEmptyString) {
        exp_desc_->clear();
      }
    }
    if (has_certificate_url()) {
      if (certificate_url_ != &::google::protobuf::internal::kEmptyString) {
        certificate_url_->clear();
      }
    }
    if (has_sketch_info()) {
      if (sketch_info_ != NULL) sketch_info_->::dgame::ProductSketchInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_DesignerApply_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 designer_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &designer_type_)));
          set_has_designer_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_exp_desc;
        break;
      }

      // optional string exp_desc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exp_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exp_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->exp_desc().data(), this->exp_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_certificate_url;
        break;
      }

      // optional string certificate_url = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_certificate_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certificate_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->certificate_url().data(), this->certificate_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_sketch_info;
        break;
      }

      // optional .dgame.ProductSketchInfo sketch_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sketch_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sketch_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_DesignerApply_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 designer_type = 1;
  if (has_designer_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->designer_type(), output);
  }

  // optional string exp_desc = 2;
  if (has_exp_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exp_desc().data(), this->exp_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exp_desc(), output);
  }

  // optional string certificate_url = 3;
  if (has_certificate_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->certificate_url().data(), this->certificate_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->certificate_url(), output);
  }

  // optional .dgame.ProductSketchInfo sketch_info = 4;
  if (has_sketch_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->sketch_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_DesignerApply_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 designer_type = 1;
  if (has_designer_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->designer_type(), target);
  }

  // optional string exp_desc = 2;
  if (has_exp_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exp_desc().data(), this->exp_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exp_desc(), target);
  }

  // optional string certificate_url = 3;
  if (has_certificate_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->certificate_url().data(), this->certificate_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->certificate_url(), target);
  }

  // optional .dgame.ProductSketchInfo sketch_info = 4;
  if (has_sketch_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->sketch_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_DesignerApply_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 designer_type = 1;
    if (has_designer_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->designer_type());
    }

    // optional string exp_desc = 2;
    if (has_exp_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exp_desc());
    }

    // optional string certificate_url = 3;
    if (has_certificate_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->certificate_url());
    }

    // optional .dgame.ProductSketchInfo sketch_info = 4;
    if (has_sketch_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sketch_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_DesignerApply_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_DesignerApply_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_DesignerApply_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_DesignerApply_C2S::MergeFrom(const Msg_DesignerApply_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_designer_type()) {
      set_designer_type(from.designer_type());
    }
    if (from.has_exp_desc()) {
      set_exp_desc(from.exp_desc());
    }
    if (from.has_certificate_url()) {
      set_certificate_url(from.certificate_url());
    }
    if (from.has_sketch_info()) {
      mutable_sketch_info()->::dgame::ProductSketchInfo::MergeFrom(from.sketch_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_DesignerApply_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_DesignerApply_C2S::CopyFrom(const Msg_DesignerApply_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DesignerApply_C2S::IsInitialized() const {

  return true;
}

void Msg_DesignerApply_C2S::Swap(Msg_DesignerApply_C2S* other) {
  if (other != this) {
    std::swap(designer_type_, other->designer_type_);
    std::swap(exp_desc_, other->exp_desc_);
    std::swap(certificate_url_, other->certificate_url_);
    std::swap(sketch_info_, other->sketch_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_DesignerApply_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_DesignerApply_C2S_descriptor_;
  metadata.reflection = Msg_DesignerApply_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_DesignerApply_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_DesignerApply_S2C::Msg_DesignerApply_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_DesignerApply_S2C::InitAsDefaultInstance() {
}

Msg_DesignerApply_S2C::Msg_DesignerApply_S2C(const Msg_DesignerApply_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_DesignerApply_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_DesignerApply_S2C::~Msg_DesignerApply_S2C() {
  SharedDtor();
}

void Msg_DesignerApply_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_DesignerApply_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_DesignerApply_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_DesignerApply_S2C_descriptor_;
}

const Msg_DesignerApply_S2C& Msg_DesignerApply_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_DesignerApply_S2C* Msg_DesignerApply_S2C::default_instance_ = NULL;

Msg_DesignerApply_S2C* Msg_DesignerApply_S2C::New() const {
  return new Msg_DesignerApply_S2C;
}

void Msg_DesignerApply_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_DesignerApply_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_DesignerApply_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_DesignerApply_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_DesignerApply_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_DesignerApply_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_DesignerApply_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_DesignerApply_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_DesignerApply_S2C::MergeFrom(const Msg_DesignerApply_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_DesignerApply_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_DesignerApply_S2C::CopyFrom(const Msg_DesignerApply_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DesignerApply_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_DesignerApply_S2C::Swap(Msg_DesignerApply_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_DesignerApply_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_DesignerApply_S2C_descriptor_;
  metadata.reflection = Msg_DesignerApply_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_ProductSketchUpload_C2S::kSketchInfoFieldNumber;
#endif  // !_MSC_VER

Msg_ProductSketchUpload_C2S::Msg_ProductSketchUpload_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ProductSketchUpload_C2S::InitAsDefaultInstance() {
  sketch_info_ = const_cast< ::dgame::ProductSketchInfo*>(&::dgame::ProductSketchInfo::default_instance());
}

Msg_ProductSketchUpload_C2S::Msg_ProductSketchUpload_C2S(const Msg_ProductSketchUpload_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ProductSketchUpload_C2S::SharedCtor() {
  _cached_size_ = 0;
  sketch_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ProductSketchUpload_C2S::~Msg_ProductSketchUpload_C2S() {
  SharedDtor();
}

void Msg_ProductSketchUpload_C2S::SharedDtor() {
  if (this != default_instance_) {
    delete sketch_info_;
  }
}

void Msg_ProductSketchUpload_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ProductSketchUpload_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ProductSketchUpload_C2S_descriptor_;
}

const Msg_ProductSketchUpload_C2S& Msg_ProductSketchUpload_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ProductSketchUpload_C2S* Msg_ProductSketchUpload_C2S::default_instance_ = NULL;

Msg_ProductSketchUpload_C2S* Msg_ProductSketchUpload_C2S::New() const {
  return new Msg_ProductSketchUpload_C2S;
}

void Msg_ProductSketchUpload_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sketch_info()) {
      if (sketch_info_ != NULL) sketch_info_->::dgame::ProductSketchInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ProductSketchUpload_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dgame.ProductSketchInfo sketch_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sketch_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_ProductSketchUpload_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .dgame.ProductSketchInfo sketch_info = 1;
  if (has_sketch_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sketch_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ProductSketchUpload_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .dgame.ProductSketchInfo sketch_info = 1;
  if (has_sketch_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sketch_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ProductSketchUpload_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .dgame.ProductSketchInfo sketch_info = 1;
    if (has_sketch_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sketch_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ProductSketchUpload_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ProductSketchUpload_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ProductSketchUpload_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ProductSketchUpload_C2S::MergeFrom(const Msg_ProductSketchUpload_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sketch_info()) {
      mutable_sketch_info()->::dgame::ProductSketchInfo::MergeFrom(from.sketch_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ProductSketchUpload_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ProductSketchUpload_C2S::CopyFrom(const Msg_ProductSketchUpload_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ProductSketchUpload_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_ProductSketchUpload_C2S::Swap(Msg_ProductSketchUpload_C2S* other) {
  if (other != this) {
    std::swap(sketch_info_, other->sketch_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ProductSketchUpload_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ProductSketchUpload_C2S_descriptor_;
  metadata.reflection = Msg_ProductSketchUpload_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_ProductSketchUpload_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_ProductSketchUpload_S2C::Msg_ProductSketchUpload_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ProductSketchUpload_S2C::InitAsDefaultInstance() {
}

Msg_ProductSketchUpload_S2C::Msg_ProductSketchUpload_S2C(const Msg_ProductSketchUpload_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ProductSketchUpload_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ProductSketchUpload_S2C::~Msg_ProductSketchUpload_S2C() {
  SharedDtor();
}

void Msg_ProductSketchUpload_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ProductSketchUpload_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ProductSketchUpload_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ProductSketchUpload_S2C_descriptor_;
}

const Msg_ProductSketchUpload_S2C& Msg_ProductSketchUpload_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ProductSketchUpload_S2C* Msg_ProductSketchUpload_S2C::default_instance_ = NULL;

Msg_ProductSketchUpload_S2C* Msg_ProductSketchUpload_S2C::New() const {
  return new Msg_ProductSketchUpload_S2C;
}

void Msg_ProductSketchUpload_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ProductSketchUpload_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_ProductSketchUpload_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ProductSketchUpload_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ProductSketchUpload_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ProductSketchUpload_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ProductSketchUpload_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ProductSketchUpload_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ProductSketchUpload_S2C::MergeFrom(const Msg_ProductSketchUpload_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ProductSketchUpload_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ProductSketchUpload_S2C::CopyFrom(const Msg_ProductSketchUpload_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ProductSketchUpload_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_ProductSketchUpload_S2C::Swap(Msg_ProductSketchUpload_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ProductSketchUpload_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ProductSketchUpload_S2C_descriptor_;
  metadata.reflection = Msg_ProductSketchUpload_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_PointSourceList_C2S::Msg_PointSourceList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_PointSourceList_C2S::InitAsDefaultInstance() {
}

Msg_PointSourceList_C2S::Msg_PointSourceList_C2S(const Msg_PointSourceList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_PointSourceList_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_PointSourceList_C2S::~Msg_PointSourceList_C2S() {
  SharedDtor();
}

void Msg_PointSourceList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_PointSourceList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_PointSourceList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_PointSourceList_C2S_descriptor_;
}

const Msg_PointSourceList_C2S& Msg_PointSourceList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_PointSourceList_C2S* Msg_PointSourceList_C2S::default_instance_ = NULL;

Msg_PointSourceList_C2S* Msg_PointSourceList_C2S::New() const {
  return new Msg_PointSourceList_C2S;
}

void Msg_PointSourceList_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_PointSourceList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_PointSourceList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_PointSourceList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_PointSourceList_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_PointSourceList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_PointSourceList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_PointSourceList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_PointSourceList_C2S::MergeFrom(const Msg_PointSourceList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_PointSourceList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_PointSourceList_C2S::CopyFrom(const Msg_PointSourceList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_PointSourceList_C2S::IsInitialized() const {

  return true;
}

void Msg_PointSourceList_C2S::Swap(Msg_PointSourceList_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_PointSourceList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_PointSourceList_C2S_descriptor_;
  metadata.reflection = Msg_PointSourceList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_PointSourceList_S2C::kPointListFieldNumber;
#endif  // !_MSC_VER

Msg_PointSourceList_S2C::Msg_PointSourceList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_PointSourceList_S2C::InitAsDefaultInstance() {
}

Msg_PointSourceList_S2C::Msg_PointSourceList_S2C(const Msg_PointSourceList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_PointSourceList_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_PointSourceList_S2C::~Msg_PointSourceList_S2C() {
  SharedDtor();
}

void Msg_PointSourceList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_PointSourceList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_PointSourceList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_PointSourceList_S2C_descriptor_;
}

const Msg_PointSourceList_S2C& Msg_PointSourceList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_PointSourceList_S2C* Msg_PointSourceList_S2C::default_instance_ = NULL;

Msg_PointSourceList_S2C* Msg_PointSourceList_S2C::New() const {
  return new Msg_PointSourceList_S2C;
}

void Msg_PointSourceList_S2C::Clear() {
  point_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_PointSourceList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dgame.PointSourceInfo point_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_point_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_point_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_PointSourceList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dgame.PointSourceInfo point_list = 1;
  for (int i = 0; i < this->point_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->point_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_PointSourceList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dgame.PointSourceInfo point_list = 1;
  for (int i = 0; i < this->point_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->point_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_PointSourceList_S2C::ByteSize() const {
  int total_size = 0;

  // repeated .dgame.PointSourceInfo point_list = 1;
  total_size += 1 * this->point_list_size();
  for (int i = 0; i < this->point_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->point_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_PointSourceList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_PointSourceList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_PointSourceList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_PointSourceList_S2C::MergeFrom(const Msg_PointSourceList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  point_list_.MergeFrom(from.point_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_PointSourceList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_PointSourceList_S2C::CopyFrom(const Msg_PointSourceList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_PointSourceList_S2C::IsInitialized() const {

  return true;
}

void Msg_PointSourceList_S2C::Swap(Msg_PointSourceList_S2C* other) {
  if (other != this) {
    point_list_.Swap(&other->point_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_PointSourceList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_PointSourceList_S2C_descriptor_;
  metadata.reflection = Msg_PointSourceList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_WithdrawMoney_C2S::kMoneyFieldNumber;
#endif  // !_MSC_VER

Msg_WithdrawMoney_C2S::Msg_WithdrawMoney_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_WithdrawMoney_C2S::InitAsDefaultInstance() {
}

Msg_WithdrawMoney_C2S::Msg_WithdrawMoney_C2S(const Msg_WithdrawMoney_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_WithdrawMoney_C2S::SharedCtor() {
  _cached_size_ = 0;
  money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_WithdrawMoney_C2S::~Msg_WithdrawMoney_C2S() {
  SharedDtor();
}

void Msg_WithdrawMoney_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_WithdrawMoney_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_WithdrawMoney_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_WithdrawMoney_C2S_descriptor_;
}

const Msg_WithdrawMoney_C2S& Msg_WithdrawMoney_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_WithdrawMoney_C2S* Msg_WithdrawMoney_C2S::default_instance_ = NULL;

Msg_WithdrawMoney_C2S* Msg_WithdrawMoney_C2S::New() const {
  return new Msg_WithdrawMoney_C2S;
}

void Msg_WithdrawMoney_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_WithdrawMoney_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_WithdrawMoney_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required float money = 1;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->money(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_WithdrawMoney_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required float money = 1;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->money(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_WithdrawMoney_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float money = 1;
    if (has_money()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_WithdrawMoney_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_WithdrawMoney_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_WithdrawMoney_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_WithdrawMoney_C2S::MergeFrom(const Msg_WithdrawMoney_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_WithdrawMoney_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_WithdrawMoney_C2S::CopyFrom(const Msg_WithdrawMoney_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_WithdrawMoney_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_WithdrawMoney_C2S::Swap(Msg_WithdrawMoney_C2S* other) {
  if (other != this) {
    std::swap(money_, other->money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_WithdrawMoney_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_WithdrawMoney_C2S_descriptor_;
  metadata.reflection = Msg_WithdrawMoney_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_WithdrawMoney_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_WithdrawMoney_S2C::Msg_WithdrawMoney_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_WithdrawMoney_S2C::InitAsDefaultInstance() {
}

Msg_WithdrawMoney_S2C::Msg_WithdrawMoney_S2C(const Msg_WithdrawMoney_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_WithdrawMoney_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_WithdrawMoney_S2C::~Msg_WithdrawMoney_S2C() {
  SharedDtor();
}

void Msg_WithdrawMoney_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_WithdrawMoney_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_WithdrawMoney_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_WithdrawMoney_S2C_descriptor_;
}

const Msg_WithdrawMoney_S2C& Msg_WithdrawMoney_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_WithdrawMoney_S2C* Msg_WithdrawMoney_S2C::default_instance_ = NULL;

Msg_WithdrawMoney_S2C* Msg_WithdrawMoney_S2C::New() const {
  return new Msg_WithdrawMoney_S2C;
}

void Msg_WithdrawMoney_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_WithdrawMoney_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_WithdrawMoney_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_WithdrawMoney_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_WithdrawMoney_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_WithdrawMoney_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_WithdrawMoney_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_WithdrawMoney_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_WithdrawMoney_S2C::MergeFrom(const Msg_WithdrawMoney_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_WithdrawMoney_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_WithdrawMoney_S2C::CopyFrom(const Msg_WithdrawMoney_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_WithdrawMoney_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_WithdrawMoney_S2C::Swap(Msg_WithdrawMoney_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_WithdrawMoney_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_WithdrawMoney_S2C_descriptor_;
  metadata.reflection = Msg_WithdrawMoney_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_MyOriginalProductList_C2S::kTypeFieldNumber;
const int Msg_MyOriginalProductList_C2S::kIndexFieldNumber;
#endif  // !_MSC_VER

Msg_MyOriginalProductList_C2S::Msg_MyOriginalProductList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_MyOriginalProductList_C2S::InitAsDefaultInstance() {
}

Msg_MyOriginalProductList_C2S::Msg_MyOriginalProductList_C2S(const Msg_MyOriginalProductList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_MyOriginalProductList_C2S::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_MyOriginalProductList_C2S::~Msg_MyOriginalProductList_C2S() {
  SharedDtor();
}

void Msg_MyOriginalProductList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_MyOriginalProductList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_MyOriginalProductList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_MyOriginalProductList_C2S_descriptor_;
}

const Msg_MyOriginalProductList_C2S& Msg_MyOriginalProductList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_MyOriginalProductList_C2S* Msg_MyOriginalProductList_C2S::default_instance_ = NULL;

Msg_MyOriginalProductList_C2S* Msg_MyOriginalProductList_C2S::New() const {
  return new Msg_MyOriginalProductList_C2S;
}

void Msg_MyOriginalProductList_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    index_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_MyOriginalProductList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // required uint32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_MyOriginalProductList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required uint32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_MyOriginalProductList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required uint32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_MyOriginalProductList_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_MyOriginalProductList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_MyOriginalProductList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_MyOriginalProductList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_MyOriginalProductList_C2S::MergeFrom(const Msg_MyOriginalProductList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_MyOriginalProductList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_MyOriginalProductList_C2S::CopyFrom(const Msg_MyOriginalProductList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_MyOriginalProductList_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void Msg_MyOriginalProductList_C2S::Swap(Msg_MyOriginalProductList_C2S* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_MyOriginalProductList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_MyOriginalProductList_C2S_descriptor_;
  metadata.reflection = Msg_MyOriginalProductList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_MyOriginalProductList_S2C::kTypeFieldNumber;
const int Msg_MyOriginalProductList_S2C::kCurIndexFieldNumber;
const int Msg_MyOriginalProductList_S2C::kTotalIndexFieldNumber;
const int Msg_MyOriginalProductList_S2C::kProductListFieldNumber;
#endif  // !_MSC_VER

Msg_MyOriginalProductList_S2C::Msg_MyOriginalProductList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_MyOriginalProductList_S2C::InitAsDefaultInstance() {
}

Msg_MyOriginalProductList_S2C::Msg_MyOriginalProductList_S2C(const Msg_MyOriginalProductList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_MyOriginalProductList_S2C::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  cur_index_ = 0u;
  total_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_MyOriginalProductList_S2C::~Msg_MyOriginalProductList_S2C() {
  SharedDtor();
}

void Msg_MyOriginalProductList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_MyOriginalProductList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_MyOriginalProductList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_MyOriginalProductList_S2C_descriptor_;
}

const Msg_MyOriginalProductList_S2C& Msg_MyOriginalProductList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_MyOriginalProductList_S2C* Msg_MyOriginalProductList_S2C::default_instance_ = NULL;

Msg_MyOriginalProductList_S2C* Msg_MyOriginalProductList_S2C::New() const {
  return new Msg_MyOriginalProductList_S2C;
}

void Msg_MyOriginalProductList_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    cur_index_ = 0u;
    total_index_ = 0u;
  }
  product_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_MyOriginalProductList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_index;
        break;
      }

      // optional uint32 cur_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_index_)));
          set_has_cur_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_index;
        break;
      }

      // optional uint32 total_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_index_)));
          set_has_total_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_product_list;
        break;
      }

      // repeated .dgame.OriginalProductInfo product_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_product_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_MyOriginalProductList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 cur_index = 2;
  if (has_cur_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_index(), output);
  }

  // optional uint32 total_index = 3;
  if (has_total_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_index(), output);
  }

  // repeated .dgame.OriginalProductInfo product_list = 4;
  for (int i = 0; i < this->product_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->product_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_MyOriginalProductList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 cur_index = 2;
  if (has_cur_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_index(), target);
  }

  // optional uint32 total_index = 3;
  if (has_total_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_index(), target);
  }

  // repeated .dgame.OriginalProductInfo product_list = 4;
  for (int i = 0; i < this->product_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->product_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_MyOriginalProductList_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 cur_index = 2;
    if (has_cur_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur_index());
    }

    // optional uint32 total_index = 3;
    if (has_total_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_index());
    }

  }
  // repeated .dgame.OriginalProductInfo product_list = 4;
  total_size += 1 * this->product_list_size();
  for (int i = 0; i < this->product_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->product_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_MyOriginalProductList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_MyOriginalProductList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_MyOriginalProductList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_MyOriginalProductList_S2C::MergeFrom(const Msg_MyOriginalProductList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  product_list_.MergeFrom(from.product_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cur_index()) {
      set_cur_index(from.cur_index());
    }
    if (from.has_total_index()) {
      set_total_index(from.total_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_MyOriginalProductList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_MyOriginalProductList_S2C::CopyFrom(const Msg_MyOriginalProductList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_MyOriginalProductList_S2C::IsInitialized() const {

  return true;
}

void Msg_MyOriginalProductList_S2C::Swap(Msg_MyOriginalProductList_S2C* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(cur_index_, other->cur_index_);
    std::swap(total_index_, other->total_index_);
    product_list_.Swap(&other->product_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_MyOriginalProductList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_MyOriginalProductList_S2C_descriptor_;
  metadata.reflection = Msg_MyOriginalProductList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_BindBankAccount_C2S::kAccountNameFieldNumber;
const int Msg_BindBankAccount_C2S::kCardNumberFieldNumber;
#endif  // !_MSC_VER

Msg_BindBankAccount_C2S::Msg_BindBankAccount_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_BindBankAccount_C2S::InitAsDefaultInstance() {
}

Msg_BindBankAccount_C2S::Msg_BindBankAccount_C2S(const Msg_BindBankAccount_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_BindBankAccount_C2S::SharedCtor() {
  _cached_size_ = 0;
  account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  card_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_BindBankAccount_C2S::~Msg_BindBankAccount_C2S() {
  SharedDtor();
}

void Msg_BindBankAccount_C2S::SharedDtor() {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_;
  }
  if (card_number_ != &::google::protobuf::internal::kEmptyString) {
    delete card_number_;
  }
  if (this != default_instance_) {
  }
}

void Msg_BindBankAccount_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_BindBankAccount_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_BindBankAccount_C2S_descriptor_;
}

const Msg_BindBankAccount_C2S& Msg_BindBankAccount_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_BindBankAccount_C2S* Msg_BindBankAccount_C2S::default_instance_ = NULL;

Msg_BindBankAccount_C2S* Msg_BindBankAccount_C2S::New() const {
  return new Msg_BindBankAccount_C2S;
}

void Msg_BindBankAccount_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account_name()) {
      if (account_name_ != &::google::protobuf::internal::kEmptyString) {
        account_name_->clear();
      }
    }
    if (has_card_number()) {
      if (card_number_ != &::google::protobuf::internal::kEmptyString) {
        card_number_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_BindBankAccount_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string account_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_card_number;
        break;
      }

      // required string card_number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->card_number().data(), this->card_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_BindBankAccount_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string account_name = 1;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->account_name(), output);
  }

  // required string card_number = 2;
  if (has_card_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number().data(), this->card_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->card_number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_BindBankAccount_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string account_name = 1;
  if (has_account_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // required string card_number = 2;
  if (has_card_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number().data(), this->card_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->card_number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_BindBankAccount_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string account_name = 1;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // required string card_number = 2;
    if (has_card_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_number());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_BindBankAccount_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_BindBankAccount_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_BindBankAccount_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_BindBankAccount_C2S::MergeFrom(const Msg_BindBankAccount_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_name()) {
      set_account_name(from.account_name());
    }
    if (from.has_card_number()) {
      set_card_number(from.card_number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_BindBankAccount_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_BindBankAccount_C2S::CopyFrom(const Msg_BindBankAccount_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_BindBankAccount_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Msg_BindBankAccount_C2S::Swap(Msg_BindBankAccount_C2S* other) {
  if (other != this) {
    std::swap(account_name_, other->account_name_);
    std::swap(card_number_, other->card_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_BindBankAccount_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_BindBankAccount_C2S_descriptor_;
  metadata.reflection = Msg_BindBankAccount_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_BindBankAccount_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_BindBankAccount_S2C::Msg_BindBankAccount_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_BindBankAccount_S2C::InitAsDefaultInstance() {
}

Msg_BindBankAccount_S2C::Msg_BindBankAccount_S2C(const Msg_BindBankAccount_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_BindBankAccount_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_BindBankAccount_S2C::~Msg_BindBankAccount_S2C() {
  SharedDtor();
}

void Msg_BindBankAccount_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_BindBankAccount_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_BindBankAccount_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_BindBankAccount_S2C_descriptor_;
}

const Msg_BindBankAccount_S2C& Msg_BindBankAccount_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_BindBankAccount_S2C* Msg_BindBankAccount_S2C::default_instance_ = NULL;

Msg_BindBankAccount_S2C* Msg_BindBankAccount_S2C::New() const {
  return new Msg_BindBankAccount_S2C;
}

void Msg_BindBankAccount_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_BindBankAccount_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_BindBankAccount_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_BindBankAccount_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_BindBankAccount_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_BindBankAccount_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_BindBankAccount_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_BindBankAccount_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_BindBankAccount_S2C::MergeFrom(const Msg_BindBankAccount_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_BindBankAccount_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_BindBankAccount_S2C::CopyFrom(const Msg_BindBankAccount_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_BindBankAccount_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_BindBankAccount_S2C::Swap(Msg_BindBankAccount_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_BindBankAccount_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_BindBankAccount_S2C_descriptor_;
  metadata.reflection = Msg_BindBankAccount_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_BindBankAccountList_C2S::Msg_BindBankAccountList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_BindBankAccountList_C2S::InitAsDefaultInstance() {
}

Msg_BindBankAccountList_C2S::Msg_BindBankAccountList_C2S(const Msg_BindBankAccountList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_BindBankAccountList_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_BindBankAccountList_C2S::~Msg_BindBankAccountList_C2S() {
  SharedDtor();
}

void Msg_BindBankAccountList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_BindBankAccountList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_BindBankAccountList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_BindBankAccountList_C2S_descriptor_;
}

const Msg_BindBankAccountList_C2S& Msg_BindBankAccountList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_BindBankAccountList_C2S* Msg_BindBankAccountList_C2S::default_instance_ = NULL;

Msg_BindBankAccountList_C2S* Msg_BindBankAccountList_C2S::New() const {
  return new Msg_BindBankAccountList_C2S;
}

void Msg_BindBankAccountList_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_BindBankAccountList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_BindBankAccountList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_BindBankAccountList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_BindBankAccountList_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_BindBankAccountList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_BindBankAccountList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_BindBankAccountList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_BindBankAccountList_C2S::MergeFrom(const Msg_BindBankAccountList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_BindBankAccountList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_BindBankAccountList_C2S::CopyFrom(const Msg_BindBankAccountList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_BindBankAccountList_C2S::IsInitialized() const {

  return true;
}

void Msg_BindBankAccountList_C2S::Swap(Msg_BindBankAccountList_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_BindBankAccountList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_BindBankAccountList_C2S_descriptor_;
  metadata.reflection = Msg_BindBankAccountList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_BindBankAccountList_S2C::kBankListFieldNumber;
#endif  // !_MSC_VER

Msg_BindBankAccountList_S2C::Msg_BindBankAccountList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_BindBankAccountList_S2C::InitAsDefaultInstance() {
}

Msg_BindBankAccountList_S2C::Msg_BindBankAccountList_S2C(const Msg_BindBankAccountList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_BindBankAccountList_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_BindBankAccountList_S2C::~Msg_BindBankAccountList_S2C() {
  SharedDtor();
}

void Msg_BindBankAccountList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_BindBankAccountList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_BindBankAccountList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_BindBankAccountList_S2C_descriptor_;
}

const Msg_BindBankAccountList_S2C& Msg_BindBankAccountList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_BindBankAccountList_S2C* Msg_BindBankAccountList_S2C::default_instance_ = NULL;

Msg_BindBankAccountList_S2C* Msg_BindBankAccountList_S2C::New() const {
  return new Msg_BindBankAccountList_S2C;
}

void Msg_BindBankAccountList_S2C::Clear() {
  bank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_BindBankAccountList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dgame.BindBankAccountInfo bank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_bank_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_BindBankAccountList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dgame.BindBankAccountInfo bank_list = 1;
  for (int i = 0; i < this->bank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bank_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_BindBankAccountList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dgame.BindBankAccountInfo bank_list = 1;
  for (int i = 0; i < this->bank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bank_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_BindBankAccountList_S2C::ByteSize() const {
  int total_size = 0;

  // repeated .dgame.BindBankAccountInfo bank_list = 1;
  total_size += 1 * this->bank_list_size();
  for (int i = 0; i < this->bank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bank_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_BindBankAccountList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_BindBankAccountList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_BindBankAccountList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_BindBankAccountList_S2C::MergeFrom(const Msg_BindBankAccountList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  bank_list_.MergeFrom(from.bank_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_BindBankAccountList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_BindBankAccountList_S2C::CopyFrom(const Msg_BindBankAccountList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_BindBankAccountList_S2C::IsInitialized() const {

  for (int i = 0; i < bank_list_size(); i++) {
    if (!this->bank_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_BindBankAccountList_S2C::Swap(Msg_BindBankAccountList_S2C* other) {
  if (other != this) {
    bank_list_.Swap(&other->bank_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_BindBankAccountList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_BindBankAccountList_S2C_descriptor_;
  metadata.reflection = Msg_BindBankAccountList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductProfitList_C2S::kIndexFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductProfitList_C2S::Msg_OriginalProductProfitList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductProfitList_C2S::InitAsDefaultInstance() {
}

Msg_OriginalProductProfitList_C2S::Msg_OriginalProductProfitList_C2S(const Msg_OriginalProductProfitList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductProfitList_C2S::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductProfitList_C2S::~Msg_OriginalProductProfitList_C2S() {
  SharedDtor();
}

void Msg_OriginalProductProfitList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductProfitList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductProfitList_C2S_descriptor_;
}

const Msg_OriginalProductProfitList_C2S& Msg_OriginalProductProfitList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductProfitList_C2S* Msg_OriginalProductProfitList_C2S::default_instance_ = NULL;

Msg_OriginalProductProfitList_C2S* Msg_OriginalProductProfitList_C2S::New() const {
  return new Msg_OriginalProductProfitList_C2S;
}

void Msg_OriginalProductProfitList_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductProfitList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductProfitList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductProfitList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductProfitList_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductProfitList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductProfitList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductProfitList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductProfitList_C2S::MergeFrom(const Msg_OriginalProductProfitList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductProfitList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductProfitList_C2S::CopyFrom(const Msg_OriginalProductProfitList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductProfitList_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_OriginalProductProfitList_C2S::Swap(Msg_OriginalProductProfitList_C2S* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductProfitList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductProfitList_C2S_descriptor_;
  metadata.reflection = Msg_OriginalProductProfitList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductProfitList_S2C::kTotalProfitFieldNumber;
const int Msg_OriginalProductProfitList_S2C::kTotalCountFieldNumber;
const int Msg_OriginalProductProfitList_S2C::kCurIndexFieldNumber;
const int Msg_OriginalProductProfitList_S2C::kTotalIndexFieldNumber;
const int Msg_OriginalProductProfitList_S2C::kProfitListFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductProfitList_S2C::Msg_OriginalProductProfitList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductProfitList_S2C::InitAsDefaultInstance() {
}

Msg_OriginalProductProfitList_S2C::Msg_OriginalProductProfitList_S2C(const Msg_OriginalProductProfitList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductProfitList_S2C::SharedCtor() {
  _cached_size_ = 0;
  total_profit_ = 0u;
  total_count_ = 0u;
  cur_index_ = 0u;
  total_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductProfitList_S2C::~Msg_OriginalProductProfitList_S2C() {
  SharedDtor();
}

void Msg_OriginalProductProfitList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductProfitList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductProfitList_S2C_descriptor_;
}

const Msg_OriginalProductProfitList_S2C& Msg_OriginalProductProfitList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductProfitList_S2C* Msg_OriginalProductProfitList_S2C::default_instance_ = NULL;

Msg_OriginalProductProfitList_S2C* Msg_OriginalProductProfitList_S2C::New() const {
  return new Msg_OriginalProductProfitList_S2C;
}

void Msg_OriginalProductProfitList_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    total_profit_ = 0u;
    total_count_ = 0u;
    cur_index_ = 0u;
    total_index_ = 0u;
  }
  profit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductProfitList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total_profit = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_profit_)));
          set_has_total_profit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_count;
        break;
      }

      // optional uint32 total_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_count_)));
          set_has_total_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cur_index;
        break;
      }

      // optional uint32 cur_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_index_)));
          set_has_cur_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_index;
        break;
      }

      // optional uint32 total_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_index_)));
          set_has_total_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_profit_list;
        break;
      }

      // repeated .dgame.OriginalProductProfitBaseInfo profit_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_profit_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_profit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_profit_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductProfitList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 total_profit = 1;
  if (has_total_profit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_profit(), output);
  }

  // optional uint32 total_count = 2;
  if (has_total_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_count(), output);
  }

  // optional uint32 cur_index = 3;
  if (has_cur_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cur_index(), output);
  }

  // optional uint32 total_index = 4;
  if (has_total_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->total_index(), output);
  }

  // repeated .dgame.OriginalProductProfitBaseInfo profit_list = 5;
  for (int i = 0; i < this->profit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->profit_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductProfitList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 total_profit = 1;
  if (has_total_profit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_profit(), target);
  }

  // optional uint32 total_count = 2;
  if (has_total_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_count(), target);
  }

  // optional uint32 cur_index = 3;
  if (has_cur_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cur_index(), target);
  }

  // optional uint32 total_index = 4;
  if (has_total_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->total_index(), target);
  }

  // repeated .dgame.OriginalProductProfitBaseInfo profit_list = 5;
  for (int i = 0; i < this->profit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->profit_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductProfitList_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 total_profit = 1;
    if (has_total_profit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_profit());
    }

    // optional uint32 total_count = 2;
    if (has_total_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_count());
    }

    // optional uint32 cur_index = 3;
    if (has_cur_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur_index());
    }

    // optional uint32 total_index = 4;
    if (has_total_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_index());
    }

  }
  // repeated .dgame.OriginalProductProfitBaseInfo profit_list = 5;
  total_size += 1 * this->profit_list_size();
  for (int i = 0; i < this->profit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->profit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductProfitList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductProfitList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductProfitList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductProfitList_S2C::MergeFrom(const Msg_OriginalProductProfitList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  profit_list_.MergeFrom(from.profit_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total_profit()) {
      set_total_profit(from.total_profit());
    }
    if (from.has_total_count()) {
      set_total_count(from.total_count());
    }
    if (from.has_cur_index()) {
      set_cur_index(from.cur_index());
    }
    if (from.has_total_index()) {
      set_total_index(from.total_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductProfitList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductProfitList_S2C::CopyFrom(const Msg_OriginalProductProfitList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductProfitList_S2C::IsInitialized() const {

  return true;
}

void Msg_OriginalProductProfitList_S2C::Swap(Msg_OriginalProductProfitList_S2C* other) {
  if (other != this) {
    std::swap(total_profit_, other->total_profit_);
    std::swap(total_count_, other->total_count_);
    std::swap(cur_index_, other->cur_index_);
    std::swap(total_index_, other->total_index_);
    profit_list_.Swap(&other->profit_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductProfitList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductProfitList_S2C_descriptor_;
  metadata.reflection = Msg_OriginalProductProfitList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductProfitDetailList_C2S::kIndexFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductProfitDetailList_C2S::Msg_OriginalProductProfitDetailList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductProfitDetailList_C2S::InitAsDefaultInstance() {
}

Msg_OriginalProductProfitDetailList_C2S::Msg_OriginalProductProfitDetailList_C2S(const Msg_OriginalProductProfitDetailList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetailList_C2S::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductProfitDetailList_C2S::~Msg_OriginalProductProfitDetailList_C2S() {
  SharedDtor();
}

void Msg_OriginalProductProfitDetailList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductProfitDetailList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetailList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductProfitDetailList_C2S_descriptor_;
}

const Msg_OriginalProductProfitDetailList_C2S& Msg_OriginalProductProfitDetailList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductProfitDetailList_C2S* Msg_OriginalProductProfitDetailList_C2S::default_instance_ = NULL;

Msg_OriginalProductProfitDetailList_C2S* Msg_OriginalProductProfitDetailList_C2S::New() const {
  return new Msg_OriginalProductProfitDetailList_C2S;
}

void Msg_OriginalProductProfitDetailList_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductProfitDetailList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductProfitDetailList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductProfitDetailList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductProfitDetailList_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductProfitDetailList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductProfitDetailList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductProfitDetailList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductProfitDetailList_C2S::MergeFrom(const Msg_OriginalProductProfitDetailList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductProfitDetailList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetailList_C2S::CopyFrom(const Msg_OriginalProductProfitDetailList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductProfitDetailList_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_OriginalProductProfitDetailList_C2S::Swap(Msg_OriginalProductProfitDetailList_C2S* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductProfitDetailList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductProfitDetailList_C2S_descriptor_;
  metadata.reflection = Msg_OriginalProductProfitDetailList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductProfitDetailList_S2C::kTotalProfitFieldNumber;
const int Msg_OriginalProductProfitDetailList_S2C::kCurIndexFieldNumber;
const int Msg_OriginalProductProfitDetailList_S2C::kTotalIndexFieldNumber;
const int Msg_OriginalProductProfitDetailList_S2C::kProfitListFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductProfitDetailList_S2C::Msg_OriginalProductProfitDetailList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductProfitDetailList_S2C::InitAsDefaultInstance() {
}

Msg_OriginalProductProfitDetailList_S2C::Msg_OriginalProductProfitDetailList_S2C(const Msg_OriginalProductProfitDetailList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetailList_S2C::SharedCtor() {
  _cached_size_ = 0;
  total_profit_ = 0u;
  cur_index_ = 0u;
  total_index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductProfitDetailList_S2C::~Msg_OriginalProductProfitDetailList_S2C() {
  SharedDtor();
}

void Msg_OriginalProductProfitDetailList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductProfitDetailList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetailList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductProfitDetailList_S2C_descriptor_;
}

const Msg_OriginalProductProfitDetailList_S2C& Msg_OriginalProductProfitDetailList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductProfitDetailList_S2C* Msg_OriginalProductProfitDetailList_S2C::default_instance_ = NULL;

Msg_OriginalProductProfitDetailList_S2C* Msg_OriginalProductProfitDetailList_S2C::New() const {
  return new Msg_OriginalProductProfitDetailList_S2C;
}

void Msg_OriginalProductProfitDetailList_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    total_profit_ = 0u;
    cur_index_ = 0u;
    total_index_ = 0u;
  }
  profit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductProfitDetailList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total_profit = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_profit_)));
          set_has_total_profit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_index;
        break;
      }

      // optional uint32 cur_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_index_)));
          set_has_cur_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_index;
        break;
      }

      // optional uint32 total_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_index_)));
          set_has_total_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_profit_list;
        break;
      }

      // repeated .dgame.DayOriginalProductProfit profit_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_profit_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_profit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_profit_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductProfitDetailList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 total_profit = 1;
  if (has_total_profit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_profit(), output);
  }

  // optional uint32 cur_index = 2;
  if (has_cur_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_index(), output);
  }

  // optional uint32 total_index = 3;
  if (has_total_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_index(), output);
  }

  // repeated .dgame.DayOriginalProductProfit profit_list = 4;
  for (int i = 0; i < this->profit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->profit_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductProfitDetailList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 total_profit = 1;
  if (has_total_profit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_profit(), target);
  }

  // optional uint32 cur_index = 2;
  if (has_cur_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_index(), target);
  }

  // optional uint32 total_index = 3;
  if (has_total_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_index(), target);
  }

  // repeated .dgame.DayOriginalProductProfit profit_list = 4;
  for (int i = 0; i < this->profit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->profit_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductProfitDetailList_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 total_profit = 1;
    if (has_total_profit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_profit());
    }

    // optional uint32 cur_index = 2;
    if (has_cur_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur_index());
    }

    // optional uint32 total_index = 3;
    if (has_total_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_index());
    }

  }
  // repeated .dgame.DayOriginalProductProfit profit_list = 4;
  total_size += 1 * this->profit_list_size();
  for (int i = 0; i < this->profit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->profit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductProfitDetailList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductProfitDetailList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductProfitDetailList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductProfitDetailList_S2C::MergeFrom(const Msg_OriginalProductProfitDetailList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  profit_list_.MergeFrom(from.profit_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total_profit()) {
      set_total_profit(from.total_profit());
    }
    if (from.has_cur_index()) {
      set_cur_index(from.cur_index());
    }
    if (from.has_total_index()) {
      set_total_index(from.total_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductProfitDetailList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetailList_S2C::CopyFrom(const Msg_OriginalProductProfitDetailList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductProfitDetailList_S2C::IsInitialized() const {

  for (int i = 0; i < profit_list_size(); i++) {
    if (!this->profit_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_OriginalProductProfitDetailList_S2C::Swap(Msg_OriginalProductProfitDetailList_S2C* other) {
  if (other != this) {
    std::swap(total_profit_, other->total_profit_);
    std::swap(cur_index_, other->cur_index_);
    std::swap(total_index_, other->total_index_);
    profit_list_.Swap(&other->profit_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductProfitDetailList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductProfitDetailList_S2C_descriptor_;
  metadata.reflection = Msg_OriginalProductProfitDetailList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductProfitDetail_C2S::kIdFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductProfitDetail_C2S::Msg_OriginalProductProfitDetail_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductProfitDetail_C2S::InitAsDefaultInstance() {
}

Msg_OriginalProductProfitDetail_C2S::Msg_OriginalProductProfitDetail_C2S(const Msg_OriginalProductProfitDetail_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetail_C2S::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductProfitDetail_C2S::~Msg_OriginalProductProfitDetail_C2S() {
  SharedDtor();
}

void Msg_OriginalProductProfitDetail_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductProfitDetail_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetail_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductProfitDetail_C2S_descriptor_;
}

const Msg_OriginalProductProfitDetail_C2S& Msg_OriginalProductProfitDetail_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductProfitDetail_C2S* Msg_OriginalProductProfitDetail_C2S::default_instance_ = NULL;

Msg_OriginalProductProfitDetail_C2S* Msg_OriginalProductProfitDetail_C2S::New() const {
  return new Msg_OriginalProductProfitDetail_C2S;
}

void Msg_OriginalProductProfitDetail_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductProfitDetail_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductProfitDetail_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductProfitDetail_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductProfitDetail_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductProfitDetail_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductProfitDetail_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductProfitDetail_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductProfitDetail_C2S::MergeFrom(const Msg_OriginalProductProfitDetail_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductProfitDetail_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetail_C2S::CopyFrom(const Msg_OriginalProductProfitDetail_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductProfitDetail_C2S::IsInitialized() const {

  return true;
}

void Msg_OriginalProductProfitDetail_C2S::Swap(Msg_OriginalProductProfitDetail_C2S* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductProfitDetail_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductProfitDetail_C2S_descriptor_;
  metadata.reflection = Msg_OriginalProductProfitDetail_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductProfitDetail_S2C::kIdFieldNumber;
const int Msg_OriginalProductProfitDetail_S2C::kNameFieldNumber;
const int Msg_OriginalProductProfitDetail_S2C::kTotalProfitFieldNumber;
const int Msg_OriginalProductProfitDetail_S2C::kTotalCountFieldNumber;
const int Msg_OriginalProductProfitDetail_S2C::kProfitBaseListFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductProfitDetail_S2C::Msg_OriginalProductProfitDetail_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductProfitDetail_S2C::InitAsDefaultInstance() {
}

Msg_OriginalProductProfitDetail_S2C::Msg_OriginalProductProfitDetail_S2C(const Msg_OriginalProductProfitDetail_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetail_S2C::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  total_profit_ = 0u;
  total_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductProfitDetail_S2C::~Msg_OriginalProductProfitDetail_S2C() {
  SharedDtor();
}

void Msg_OriginalProductProfitDetail_S2C::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductProfitDetail_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductProfitDetail_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductProfitDetail_S2C_descriptor_;
}

const Msg_OriginalProductProfitDetail_S2C& Msg_OriginalProductProfitDetail_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductProfitDetail_S2C* Msg_OriginalProductProfitDetail_S2C::default_instance_ = NULL;

Msg_OriginalProductProfitDetail_S2C* Msg_OriginalProductProfitDetail_S2C::New() const {
  return new Msg_OriginalProductProfitDetail_S2C;
}

void Msg_OriginalProductProfitDetail_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    total_profit_ = 0u;
    total_count_ = 0u;
  }
  profit_base_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductProfitDetail_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_profit;
        break;
      }

      // optional uint32 total_profit = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_profit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_profit_)));
          set_has_total_profit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_count;
        break;
      }

      // optional uint32 total_count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_count_)));
          set_has_total_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_profit_base_list;
        break;
      }

      // repeated .dgame.DayOriginalProductProfitBase profit_base_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_profit_base_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_profit_base_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_profit_base_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductProfitDetail_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional uint32 total_profit = 3;
  if (has_total_profit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_profit(), output);
  }

  // optional uint32 total_count = 4;
  if (has_total_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->total_count(), output);
  }

  // repeated .dgame.DayOriginalProductProfitBase profit_base_list = 5;
  for (int i = 0; i < this->profit_base_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->profit_base_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductProfitDetail_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 total_profit = 3;
  if (has_total_profit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_profit(), target);
  }

  // optional uint32 total_count = 4;
  if (has_total_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->total_count(), target);
  }

  // repeated .dgame.DayOriginalProductProfitBase profit_base_list = 5;
  for (int i = 0; i < this->profit_base_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->profit_base_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductProfitDetail_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 total_profit = 3;
    if (has_total_profit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_profit());
    }

    // optional uint32 total_count = 4;
    if (has_total_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_count());
    }

  }
  // repeated .dgame.DayOriginalProductProfitBase profit_base_list = 5;
  total_size += 1 * this->profit_base_list_size();
  for (int i = 0; i < this->profit_base_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->profit_base_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductProfitDetail_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductProfitDetail_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductProfitDetail_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductProfitDetail_S2C::MergeFrom(const Msg_OriginalProductProfitDetail_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  profit_base_list_.MergeFrom(from.profit_base_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_total_profit()) {
      set_total_profit(from.total_profit());
    }
    if (from.has_total_count()) {
      set_total_count(from.total_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductProfitDetail_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductProfitDetail_S2C::CopyFrom(const Msg_OriginalProductProfitDetail_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductProfitDetail_S2C::IsInitialized() const {

  for (int i = 0; i < profit_base_list_size(); i++) {
    if (!this->profit_base_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_OriginalProductProfitDetail_S2C::Swap(Msg_OriginalProductProfitDetail_S2C* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(total_profit_, other->total_profit_);
    std::swap(total_count_, other->total_count_);
    profit_base_list_.Swap(&other->profit_base_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductProfitDetail_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductProfitDetail_S2C_descriptor_;
  metadata.reflection = Msg_OriginalProductProfitDetail_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductDetail_C2S::kIdFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductDetail_C2S::Msg_OriginalProductDetail_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductDetail_C2S::InitAsDefaultInstance() {
}

Msg_OriginalProductDetail_C2S::Msg_OriginalProductDetail_C2S(const Msg_OriginalProductDetail_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductDetail_C2S::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductDetail_C2S::~Msg_OriginalProductDetail_C2S() {
  SharedDtor();
}

void Msg_OriginalProductDetail_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductDetail_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductDetail_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductDetail_C2S_descriptor_;
}

const Msg_OriginalProductDetail_C2S& Msg_OriginalProductDetail_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductDetail_C2S* Msg_OriginalProductDetail_C2S::default_instance_ = NULL;

Msg_OriginalProductDetail_C2S* Msg_OriginalProductDetail_C2S::New() const {
  return new Msg_OriginalProductDetail_C2S;
}

void Msg_OriginalProductDetail_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductDetail_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductDetail_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductDetail_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductDetail_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductDetail_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductDetail_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductDetail_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductDetail_C2S::MergeFrom(const Msg_OriginalProductDetail_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductDetail_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductDetail_C2S::CopyFrom(const Msg_OriginalProductDetail_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductDetail_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_OriginalProductDetail_C2S::Swap(Msg_OriginalProductDetail_C2S* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductDetail_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductDetail_C2S_descriptor_;
  metadata.reflection = Msg_OriginalProductDetail_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductDetail_S2C::kProductDetailFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductDetail_S2C::Msg_OriginalProductDetail_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductDetail_S2C::InitAsDefaultInstance() {
  product_detail_ = const_cast< ::dgame::OriginalProductDetail*>(&::dgame::OriginalProductDetail::default_instance());
}

Msg_OriginalProductDetail_S2C::Msg_OriginalProductDetail_S2C(const Msg_OriginalProductDetail_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductDetail_S2C::SharedCtor() {
  _cached_size_ = 0;
  product_detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductDetail_S2C::~Msg_OriginalProductDetail_S2C() {
  SharedDtor();
}

void Msg_OriginalProductDetail_S2C::SharedDtor() {
  if (this != default_instance_) {
    delete product_detail_;
  }
}

void Msg_OriginalProductDetail_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductDetail_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductDetail_S2C_descriptor_;
}

const Msg_OriginalProductDetail_S2C& Msg_OriginalProductDetail_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductDetail_S2C* Msg_OriginalProductDetail_S2C::default_instance_ = NULL;

Msg_OriginalProductDetail_S2C* Msg_OriginalProductDetail_S2C::New() const {
  return new Msg_OriginalProductDetail_S2C;
}

void Msg_OriginalProductDetail_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_product_detail()) {
      if (product_detail_ != NULL) product_detail_->::dgame::OriginalProductDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductDetail_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dgame.OriginalProductDetail product_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_product_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductDetail_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .dgame.OriginalProductDetail product_detail = 1;
  if (has_product_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->product_detail(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductDetail_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .dgame.OriginalProductDetail product_detail = 1;
  if (has_product_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->product_detail(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductDetail_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .dgame.OriginalProductDetail product_detail = 1;
    if (has_product_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product_detail());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductDetail_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductDetail_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductDetail_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductDetail_S2C::MergeFrom(const Msg_OriginalProductDetail_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_product_detail()) {
      mutable_product_detail()->::dgame::OriginalProductDetail::MergeFrom(from.product_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductDetail_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductDetail_S2C::CopyFrom(const Msg_OriginalProductDetail_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductDetail_S2C::IsInitialized() const {

  return true;
}

void Msg_OriginalProductDetail_S2C::Swap(Msg_OriginalProductDetail_S2C* other) {
  if (other != this) {
    std::swap(product_detail_, other->product_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductDetail_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductDetail_S2C_descriptor_;
  metadata.reflection = Msg_OriginalProductDetail_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductModify_C2S::kOperationFieldNumber;
const int Msg_OriginalProductModify_C2S::kIdFieldNumber;
const int Msg_OriginalProductModify_C2S::kProductFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductModify_C2S::Msg_OriginalProductModify_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductModify_C2S::InitAsDefaultInstance() {
  product_ = const_cast< ::dgame::OriginalProductDetail*>(&::dgame::OriginalProductDetail::default_instance());
}

Msg_OriginalProductModify_C2S::Msg_OriginalProductModify_C2S(const Msg_OriginalProductModify_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductModify_C2S::SharedCtor() {
  _cached_size_ = 0;
  operation_ = 0u;
  id_ = 0u;
  product_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductModify_C2S::~Msg_OriginalProductModify_C2S() {
  SharedDtor();
}

void Msg_OriginalProductModify_C2S::SharedDtor() {
  if (this != default_instance_) {
    delete product_;
  }
}

void Msg_OriginalProductModify_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductModify_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductModify_C2S_descriptor_;
}

const Msg_OriginalProductModify_C2S& Msg_OriginalProductModify_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductModify_C2S* Msg_OriginalProductModify_C2S::default_instance_ = NULL;

Msg_OriginalProductModify_C2S* Msg_OriginalProductModify_C2S::New() const {
  return new Msg_OriginalProductModify_C2S;
}

void Msg_OriginalProductModify_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    operation_ = 0u;
    id_ = 0u;
    if (has_product()) {
      if (product_ != NULL) product_->::dgame::OriginalProductDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductModify_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 operation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_)));
          set_has_operation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional uint32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_product;
        break;
      }

      // optional .dgame.OriginalProductDetail product = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_product()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductModify_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 operation = 1;
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->operation(), output);
  }

  // optional uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // optional .dgame.OriginalProductDetail product = 3;
  if (has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->product(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductModify_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 operation = 1;
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->operation(), target);
  }

  // optional uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // optional .dgame.OriginalProductDetail product = 3;
  if (has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->product(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductModify_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 operation = 1;
    if (has_operation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operation());
    }

    // optional uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional .dgame.OriginalProductDetail product = 3;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductModify_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductModify_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductModify_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductModify_C2S::MergeFrom(const Msg_OriginalProductModify_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operation()) {
      set_operation(from.operation());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_product()) {
      mutable_product()->::dgame::OriginalProductDetail::MergeFrom(from.product());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductModify_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductModify_C2S::CopyFrom(const Msg_OriginalProductModify_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductModify_C2S::IsInitialized() const {

  return true;
}

void Msg_OriginalProductModify_C2S::Swap(Msg_OriginalProductModify_C2S* other) {
  if (other != this) {
    std::swap(operation_, other->operation_);
    std::swap(id_, other->id_);
    std::swap(product_, other->product_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductModify_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductModify_C2S_descriptor_;
  metadata.reflection = Msg_OriginalProductModify_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_OriginalProductModify_S2C::kOperationFieldNumber;
const int Msg_OriginalProductModify_S2C::kErrorCodeFieldNumber;
const int Msg_OriginalProductModify_S2C::kIdFieldNumber;
#endif  // !_MSC_VER

Msg_OriginalProductModify_S2C::Msg_OriginalProductModify_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_OriginalProductModify_S2C::InitAsDefaultInstance() {
}

Msg_OriginalProductModify_S2C::Msg_OriginalProductModify_S2C(const Msg_OriginalProductModify_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_OriginalProductModify_S2C::SharedCtor() {
  _cached_size_ = 0;
  operation_ = 0u;
  error_code_ = 0u;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_OriginalProductModify_S2C::~Msg_OriginalProductModify_S2C() {
  SharedDtor();
}

void Msg_OriginalProductModify_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_OriginalProductModify_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_OriginalProductModify_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_OriginalProductModify_S2C_descriptor_;
}

const Msg_OriginalProductModify_S2C& Msg_OriginalProductModify_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_OriginalProductModify_S2C* Msg_OriginalProductModify_S2C::default_instance_ = NULL;

Msg_OriginalProductModify_S2C* Msg_OriginalProductModify_S2C::New() const {
  return new Msg_OriginalProductModify_S2C;
}

void Msg_OriginalProductModify_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    operation_ = 0u;
    error_code_ = 0u;
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_OriginalProductModify_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 operation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_)));
          set_has_operation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }

      // optional uint32 error_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional uint32 id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_OriginalProductModify_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 operation = 1;
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->operation(), output);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  // optional uint32 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_OriginalProductModify_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 operation = 1;
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->operation(), target);
  }

  // optional uint32 error_code = 2;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  // optional uint32 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_OriginalProductModify_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 operation = 1;
    if (has_operation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operation());
    }

    // optional uint32 error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

    // optional uint32 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_OriginalProductModify_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_OriginalProductModify_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_OriginalProductModify_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_OriginalProductModify_S2C::MergeFrom(const Msg_OriginalProductModify_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operation()) {
      set_operation(from.operation());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_OriginalProductModify_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_OriginalProductModify_S2C::CopyFrom(const Msg_OriginalProductModify_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_OriginalProductModify_S2C::IsInitialized() const {

  return true;
}

void Msg_OriginalProductModify_S2C::Swap(Msg_OriginalProductModify_S2C* other) {
  if (other != this) {
    std::swap(operation_, other->operation_);
    std::swap(error_code_, other->error_code_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_OriginalProductModify_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_OriginalProductModify_S2C_descriptor_;
  metadata.reflection = Msg_OriginalProductModify_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_ProfitList_C2S::Msg_ProfitList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ProfitList_C2S::InitAsDefaultInstance() {
}

Msg_ProfitList_C2S::Msg_ProfitList_C2S(const Msg_ProfitList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ProfitList_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ProfitList_C2S::~Msg_ProfitList_C2S() {
  SharedDtor();
}

void Msg_ProfitList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ProfitList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ProfitList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ProfitList_C2S_descriptor_;
}

const Msg_ProfitList_C2S& Msg_ProfitList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ProfitList_C2S* Msg_ProfitList_C2S::default_instance_ = NULL;

Msg_ProfitList_C2S* Msg_ProfitList_C2S::New() const {
  return new Msg_ProfitList_C2S;
}

void Msg_ProfitList_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ProfitList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_ProfitList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ProfitList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ProfitList_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ProfitList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ProfitList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ProfitList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ProfitList_C2S::MergeFrom(const Msg_ProfitList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ProfitList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ProfitList_C2S::CopyFrom(const Msg_ProfitList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ProfitList_C2S::IsInitialized() const {

  return true;
}

void Msg_ProfitList_C2S::Swap(Msg_ProfitList_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ProfitList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ProfitList_C2S_descriptor_;
  metadata.reflection = Msg_ProfitList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_ProfitList_S2C::kBalanceFieldNumber;
const int Msg_ProfitList_S2C::kTotalProfitFieldNumber;
const int Msg_ProfitList_S2C::kTotalWithdrawFieldNumber;
const int Msg_ProfitList_S2C::kProfitListFieldNumber;
#endif  // !_MSC_VER

Msg_ProfitList_S2C::Msg_ProfitList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ProfitList_S2C::InitAsDefaultInstance() {
}

Msg_ProfitList_S2C::Msg_ProfitList_S2C(const Msg_ProfitList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ProfitList_S2C::SharedCtor() {
  _cached_size_ = 0;
  balance_ = 0u;
  total_profit_ = 0u;
  total_withdraw_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ProfitList_S2C::~Msg_ProfitList_S2C() {
  SharedDtor();
}

void Msg_ProfitList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ProfitList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ProfitList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ProfitList_S2C_descriptor_;
}

const Msg_ProfitList_S2C& Msg_ProfitList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ProfitList_S2C* Msg_ProfitList_S2C::default_instance_ = NULL;

Msg_ProfitList_S2C* Msg_ProfitList_S2C::New() const {
  return new Msg_ProfitList_S2C;
}

void Msg_ProfitList_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    balance_ = 0u;
    total_profit_ = 0u;
    total_withdraw_ = 0u;
  }
  profit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ProfitList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 balance = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_)));
          set_has_balance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_profit;
        break;
      }

      // required uint32 total_profit = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_profit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_profit_)));
          set_has_total_profit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_withdraw;
        break;
      }

      // required uint32 total_withdraw = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_withdraw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_withdraw_)));
          set_has_total_withdraw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_profit_list;
        break;
      }

      // repeated .dgame.ProfitData profit_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_profit_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_profit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_profit_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_ProfitList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 balance = 1;
  if (has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->balance(), output);
  }

  // required uint32 total_profit = 2;
  if (has_total_profit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_profit(), output);
  }

  // required uint32 total_withdraw = 3;
  if (has_total_withdraw()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_withdraw(), output);
  }

  // repeated .dgame.ProfitData profit_list = 4;
  for (int i = 0; i < this->profit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->profit_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ProfitList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 balance = 1;
  if (has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->balance(), target);
  }

  // required uint32 total_profit = 2;
  if (has_total_profit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_profit(), target);
  }

  // required uint32 total_withdraw = 3;
  if (has_total_withdraw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_withdraw(), target);
  }

  // repeated .dgame.ProfitData profit_list = 4;
  for (int i = 0; i < this->profit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->profit_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ProfitList_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 balance = 1;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance());
    }

    // required uint32 total_profit = 2;
    if (has_total_profit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_profit());
    }

    // required uint32 total_withdraw = 3;
    if (has_total_withdraw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_withdraw());
    }

  }
  // repeated .dgame.ProfitData profit_list = 4;
  total_size += 1 * this->profit_list_size();
  for (int i = 0; i < this->profit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->profit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ProfitList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ProfitList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ProfitList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ProfitList_S2C::MergeFrom(const Msg_ProfitList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  profit_list_.MergeFrom(from.profit_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_balance()) {
      set_balance(from.balance());
    }
    if (from.has_total_profit()) {
      set_total_profit(from.total_profit());
    }
    if (from.has_total_withdraw()) {
      set_total_withdraw(from.total_withdraw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ProfitList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ProfitList_S2C::CopyFrom(const Msg_ProfitList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ProfitList_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  for (int i = 0; i < profit_list_size(); i++) {
    if (!this->profit_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_ProfitList_S2C::Swap(Msg_ProfitList_S2C* other) {
  if (other != this) {
    std::swap(balance_, other->balance_);
    std::swap(total_profit_, other->total_profit_);
    std::swap(total_withdraw_, other->total_withdraw_);
    profit_list_.Swap(&other->profit_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ProfitList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ProfitList_S2C_descriptor_;
  metadata.reflection = Msg_ProfitList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Gold2Money_C2S::kGoldFieldNumber;
#endif  // !_MSC_VER

Msg_Gold2Money_C2S::Msg_Gold2Money_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Gold2Money_C2S::InitAsDefaultInstance() {
}

Msg_Gold2Money_C2S::Msg_Gold2Money_C2S(const Msg_Gold2Money_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Gold2Money_C2S::SharedCtor() {
  _cached_size_ = 0;
  gold_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Gold2Money_C2S::~Msg_Gold2Money_C2S() {
  SharedDtor();
}

void Msg_Gold2Money_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_Gold2Money_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Gold2Money_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Gold2Money_C2S_descriptor_;
}

const Msg_Gold2Money_C2S& Msg_Gold2Money_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Gold2Money_C2S* Msg_Gold2Money_C2S::default_instance_ = NULL;

Msg_Gold2Money_C2S* Msg_Gold2Money_C2S::New() const {
  return new Msg_Gold2Money_C2S;
}

void Msg_Gold2Money_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gold_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Gold2Money_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Gold2Money_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gold = 1;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Gold2Money_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gold = 1;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Gold2Money_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gold = 1;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Gold2Money_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Gold2Money_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Gold2Money_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Gold2Money_C2S::MergeFrom(const Msg_Gold2Money_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Gold2Money_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Gold2Money_C2S::CopyFrom(const Msg_Gold2Money_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Gold2Money_C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_Gold2Money_C2S::Swap(Msg_Gold2Money_C2S* other) {
  if (other != this) {
    std::swap(gold_, other->gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Gold2Money_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Gold2Money_C2S_descriptor_;
  metadata.reflection = Msg_Gold2Money_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_Gold2Money_S2C::kErrorCodeFieldNumber;
#endif  // !_MSC_VER

Msg_Gold2Money_S2C::Msg_Gold2Money_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_Gold2Money_S2C::InitAsDefaultInstance() {
}

Msg_Gold2Money_S2C::Msg_Gold2Money_S2C(const Msg_Gold2Money_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_Gold2Money_S2C::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_Gold2Money_S2C::~Msg_Gold2Money_S2C() {
  SharedDtor();
}

void Msg_Gold2Money_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_Gold2Money_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_Gold2Money_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_Gold2Money_S2C_descriptor_;
}

const Msg_Gold2Money_S2C& Msg_Gold2Money_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_Gold2Money_S2C* Msg_Gold2Money_S2C::default_instance_ = NULL;

Msg_Gold2Money_S2C* Msg_Gold2Money_S2C::New() const {
  return new Msg_Gold2Money_S2C;
}

void Msg_Gold2Money_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_Gold2Money_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_Gold2Money_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_Gold2Money_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_Gold2Money_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_Gold2Money_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_Gold2Money_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_Gold2Money_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_Gold2Money_S2C::MergeFrom(const Msg_Gold2Money_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_Gold2Money_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_Gold2Money_S2C::CopyFrom(const Msg_Gold2Money_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Gold2Money_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_Gold2Money_S2C::Swap(Msg_Gold2Money_S2C* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_Gold2Money_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_Gold2Money_S2C_descriptor_;
  metadata.reflection = Msg_Gold2Money_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_CouponList_C2S::Msg_CouponList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_CouponList_C2S::InitAsDefaultInstance() {
}

Msg_CouponList_C2S::Msg_CouponList_C2S(const Msg_CouponList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_CouponList_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_CouponList_C2S::~Msg_CouponList_C2S() {
  SharedDtor();
}

void Msg_CouponList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_CouponList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CouponList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CouponList_C2S_descriptor_;
}

const Msg_CouponList_C2S& Msg_CouponList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_CouponList_C2S* Msg_CouponList_C2S::default_instance_ = NULL;

Msg_CouponList_C2S* Msg_CouponList_C2S::New() const {
  return new Msg_CouponList_C2S;
}

void Msg_CouponList_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_CouponList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_CouponList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_CouponList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_CouponList_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CouponList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_CouponList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_CouponList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_CouponList_C2S::MergeFrom(const Msg_CouponList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_CouponList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CouponList_C2S::CopyFrom(const Msg_CouponList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CouponList_C2S::IsInitialized() const {

  return true;
}

void Msg_CouponList_C2S::Swap(Msg_CouponList_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_CouponList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CouponList_C2S_descriptor_;
  metadata.reflection = Msg_CouponList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_CouponList_S2C::kCouponListFieldNumber;
#endif  // !_MSC_VER

Msg_CouponList_S2C::Msg_CouponList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_CouponList_S2C::InitAsDefaultInstance() {
}

Msg_CouponList_S2C::Msg_CouponList_S2C(const Msg_CouponList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_CouponList_S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_CouponList_S2C::~Msg_CouponList_S2C() {
  SharedDtor();
}

void Msg_CouponList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_CouponList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CouponList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CouponList_S2C_descriptor_;
}

const Msg_CouponList_S2C& Msg_CouponList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_CouponList_S2C* Msg_CouponList_S2C::default_instance_ = NULL;

Msg_CouponList_S2C* Msg_CouponList_S2C::New() const {
  return new Msg_CouponList_S2C;
}

void Msg_CouponList_S2C::Clear() {
  coupon_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_CouponList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dgame.CouponData coupon_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_coupon_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_coupon_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_coupon_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_CouponList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dgame.CouponData coupon_list = 1;
  for (int i = 0; i < this->coupon_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->coupon_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_CouponList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dgame.CouponData coupon_list = 1;
  for (int i = 0; i < this->coupon_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->coupon_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_CouponList_S2C::ByteSize() const {
  int total_size = 0;

  // repeated .dgame.CouponData coupon_list = 1;
  total_size += 1 * this->coupon_list_size();
  for (int i = 0; i < this->coupon_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->coupon_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CouponList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_CouponList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_CouponList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_CouponList_S2C::MergeFrom(const Msg_CouponList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  coupon_list_.MergeFrom(from.coupon_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_CouponList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CouponList_S2C::CopyFrom(const Msg_CouponList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CouponList_S2C::IsInitialized() const {

  for (int i = 0; i < coupon_list_size(); i++) {
    if (!this->coupon_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_CouponList_S2C::Swap(Msg_CouponList_S2C* other) {
  if (other != this) {
    coupon_list_.Swap(&other->coupon_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_CouponList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CouponList_S2C_descriptor_;
  metadata.reflection = Msg_CouponList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_GlodPercent_C2S::Msg_GlodPercent_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_GlodPercent_C2S::InitAsDefaultInstance() {
}

Msg_GlodPercent_C2S::Msg_GlodPercent_C2S(const Msg_GlodPercent_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_GlodPercent_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_GlodPercent_C2S::~Msg_GlodPercent_C2S() {
  SharedDtor();
}

void Msg_GlodPercent_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_GlodPercent_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_GlodPercent_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_GlodPercent_C2S_descriptor_;
}

const Msg_GlodPercent_C2S& Msg_GlodPercent_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_GlodPercent_C2S* Msg_GlodPercent_C2S::default_instance_ = NULL;

Msg_GlodPercent_C2S* Msg_GlodPercent_C2S::New() const {
  return new Msg_GlodPercent_C2S;
}

void Msg_GlodPercent_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_GlodPercent_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_GlodPercent_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_GlodPercent_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_GlodPercent_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_GlodPercent_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_GlodPercent_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_GlodPercent_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_GlodPercent_C2S::MergeFrom(const Msg_GlodPercent_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_GlodPercent_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_GlodPercent_C2S::CopyFrom(const Msg_GlodPercent_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GlodPercent_C2S::IsInitialized() const {

  return true;
}

void Msg_GlodPercent_C2S::Swap(Msg_GlodPercent_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_GlodPercent_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_GlodPercent_C2S_descriptor_;
  metadata.reflection = Msg_GlodPercent_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_GlodPercent_S2C::kPecentFieldNumber;
#endif  // !_MSC_VER

Msg_GlodPercent_S2C::Msg_GlodPercent_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_GlodPercent_S2C::InitAsDefaultInstance() {
}

Msg_GlodPercent_S2C::Msg_GlodPercent_S2C(const Msg_GlodPercent_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_GlodPercent_S2C::SharedCtor() {
  _cached_size_ = 0;
  pecent_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_GlodPercent_S2C::~Msg_GlodPercent_S2C() {
  SharedDtor();
}

void Msg_GlodPercent_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_GlodPercent_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_GlodPercent_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_GlodPercent_S2C_descriptor_;
}

const Msg_GlodPercent_S2C& Msg_GlodPercent_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_GlodPercent_S2C* Msg_GlodPercent_S2C::default_instance_ = NULL;

Msg_GlodPercent_S2C* Msg_GlodPercent_S2C::New() const {
  return new Msg_GlodPercent_S2C;
}

void Msg_GlodPercent_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pecent_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_GlodPercent_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float pecent = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pecent_)));
          set_has_pecent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_GlodPercent_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required float pecent = 1;
  if (has_pecent()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pecent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_GlodPercent_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required float pecent = 1;
  if (has_pecent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pecent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_GlodPercent_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float pecent = 1;
    if (has_pecent()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_GlodPercent_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_GlodPercent_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_GlodPercent_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_GlodPercent_S2C::MergeFrom(const Msg_GlodPercent_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pecent()) {
      set_pecent(from.pecent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_GlodPercent_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_GlodPercent_S2C::CopyFrom(const Msg_GlodPercent_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GlodPercent_S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Msg_GlodPercent_S2C::Swap(Msg_GlodPercent_S2C* other) {
  if (other != this) {
    std::swap(pecent_, other->pecent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_GlodPercent_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_GlodPercent_S2C_descriptor_;
  metadata.reflection = Msg_GlodPercent_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_TradeDetailList_C2S::Msg_TradeDetailList_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_TradeDetailList_C2S::InitAsDefaultInstance() {
}

Msg_TradeDetailList_C2S::Msg_TradeDetailList_C2S(const Msg_TradeDetailList_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_TradeDetailList_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_TradeDetailList_C2S::~Msg_TradeDetailList_C2S() {
  SharedDtor();
}

void Msg_TradeDetailList_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_TradeDetailList_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_TradeDetailList_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_TradeDetailList_C2S_descriptor_;
}

const Msg_TradeDetailList_C2S& Msg_TradeDetailList_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_TradeDetailList_C2S* Msg_TradeDetailList_C2S::default_instance_ = NULL;

Msg_TradeDetailList_C2S* Msg_TradeDetailList_C2S::New() const {
  return new Msg_TradeDetailList_C2S;
}

void Msg_TradeDetailList_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_TradeDetailList_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_TradeDetailList_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_TradeDetailList_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_TradeDetailList_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_TradeDetailList_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_TradeDetailList_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_TradeDetailList_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_TradeDetailList_C2S::MergeFrom(const Msg_TradeDetailList_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_TradeDetailList_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_TradeDetailList_C2S::CopyFrom(const Msg_TradeDetailList_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_TradeDetailList_C2S::IsInitialized() const {

  return true;
}

void Msg_TradeDetailList_C2S::Swap(Msg_TradeDetailList_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_TradeDetailList_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_TradeDetailList_C2S_descriptor_;
  metadata.reflection = Msg_TradeDetailList_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_TradeDetailList_S2C::kPopFieldNumber;
const int Msg_TradeDetailList_S2C::kPushFieldNumber;
const int Msg_TradeDetailList_S2C::kTradeListFieldNumber;
#endif  // !_MSC_VER

Msg_TradeDetailList_S2C::Msg_TradeDetailList_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_TradeDetailList_S2C::InitAsDefaultInstance() {
}

Msg_TradeDetailList_S2C::Msg_TradeDetailList_S2C(const Msg_TradeDetailList_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_TradeDetailList_S2C::SharedCtor() {
  _cached_size_ = 0;
  pop_ = 0u;
  push_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_TradeDetailList_S2C::~Msg_TradeDetailList_S2C() {
  SharedDtor();
}

void Msg_TradeDetailList_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_TradeDetailList_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_TradeDetailList_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_TradeDetailList_S2C_descriptor_;
}

const Msg_TradeDetailList_S2C& Msg_TradeDetailList_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_TradeDetailList_S2C* Msg_TradeDetailList_S2C::default_instance_ = NULL;

Msg_TradeDetailList_S2C* Msg_TradeDetailList_S2C::New() const {
  return new Msg_TradeDetailList_S2C;
}

void Msg_TradeDetailList_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pop_ = 0u;
    push_ = 0u;
  }
  trade_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_TradeDetailList_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pop_)));
          set_has_pop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_push;
        break;
      }

      // optional uint32 push = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_push:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &push_)));
          set_has_push();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trade_list;
        break;
      }

      // repeated .dgame.TradeInfo trade_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trade_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trade_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trade_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_TradeDetailList_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 pop = 1;
  if (has_pop()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pop(), output);
  }

  // optional uint32 push = 2;
  if (has_push()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->push(), output);
  }

  // repeated .dgame.TradeInfo trade_list = 3;
  for (int i = 0; i < this->trade_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->trade_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_TradeDetailList_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 pop = 1;
  if (has_pop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pop(), target);
  }

  // optional uint32 push = 2;
  if (has_push()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->push(), target);
  }

  // repeated .dgame.TradeInfo trade_list = 3;
  for (int i = 0; i < this->trade_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->trade_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_TradeDetailList_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 pop = 1;
    if (has_pop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pop());
    }

    // optional uint32 push = 2;
    if (has_push()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->push());
    }

  }
  // repeated .dgame.TradeInfo trade_list = 3;
  total_size += 1 * this->trade_list_size();
  for (int i = 0; i < this->trade_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trade_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_TradeDetailList_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_TradeDetailList_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_TradeDetailList_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_TradeDetailList_S2C::MergeFrom(const Msg_TradeDetailList_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  trade_list_.MergeFrom(from.trade_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pop()) {
      set_pop(from.pop());
    }
    if (from.has_push()) {
      set_push(from.push());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_TradeDetailList_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_TradeDetailList_S2C::CopyFrom(const Msg_TradeDetailList_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_TradeDetailList_S2C::IsInitialized() const {

  return true;
}

void Msg_TradeDetailList_S2C::Swap(Msg_TradeDetailList_S2C* other) {
  if (other != this) {
    std::swap(pop_, other->pop_);
    std::swap(push_, other->push_);
    trade_list_.Swap(&other->trade_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_TradeDetailList_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_TradeDetailList_S2C_descriptor_;
  metadata.reflection = Msg_TradeDetailList_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_PrePayOrderCreate_C2S::kTotalFeeFieldNumber;
const int Msg_PrePayOrderCreate_C2S::kPlatformFieldNumber;
#endif  // !_MSC_VER

Msg_PrePayOrderCreate_C2S::Msg_PrePayOrderCreate_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_PrePayOrderCreate_C2S::InitAsDefaultInstance() {
}

Msg_PrePayOrderCreate_C2S::Msg_PrePayOrderCreate_C2S(const Msg_PrePayOrderCreate_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_PrePayOrderCreate_C2S::SharedCtor() {
  _cached_size_ = 0;
  total_fee_ = 0u;
  platform_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_PrePayOrderCreate_C2S::~Msg_PrePayOrderCreate_C2S() {
  SharedDtor();
}

void Msg_PrePayOrderCreate_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_PrePayOrderCreate_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_PrePayOrderCreate_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_PrePayOrderCreate_C2S_descriptor_;
}

const Msg_PrePayOrderCreate_C2S& Msg_PrePayOrderCreate_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_PrePayOrderCreate_C2S* Msg_PrePayOrderCreate_C2S::default_instance_ = NULL;

Msg_PrePayOrderCreate_C2S* Msg_PrePayOrderCreate_C2S::New() const {
  return new Msg_PrePayOrderCreate_C2S;
}

void Msg_PrePayOrderCreate_C2S::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    total_fee_ = 0u;
    platform_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_PrePayOrderCreate_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total_fee = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_fee_)));
          set_has_total_fee();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_platform;
        break;
      }

      // optional uint32 platform = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_platform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
          set_has_platform();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_PrePayOrderCreate_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 total_fee = 1;
  if (has_total_fee()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_fee(), output);
  }

  // optional uint32 platform = 2;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->platform(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_PrePayOrderCreate_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 total_fee = 1;
  if (has_total_fee()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_fee(), target);
  }

  // optional uint32 platform = 2;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->platform(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_PrePayOrderCreate_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 total_fee = 1;
    if (has_total_fee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_fee());
    }

    // optional uint32 platform = 2;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platform());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_PrePayOrderCreate_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_PrePayOrderCreate_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_PrePayOrderCreate_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_PrePayOrderCreate_C2S::MergeFrom(const Msg_PrePayOrderCreate_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total_fee()) {
      set_total_fee(from.total_fee());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_PrePayOrderCreate_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_PrePayOrderCreate_C2S::CopyFrom(const Msg_PrePayOrderCreate_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_PrePayOrderCreate_C2S::IsInitialized() const {

  return true;
}

void Msg_PrePayOrderCreate_C2S::Swap(Msg_PrePayOrderCreate_C2S* other) {
  if (other != this) {
    std::swap(total_fee_, other->total_fee_);
    std::swap(platform_, other->platform_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_PrePayOrderCreate_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_PrePayOrderCreate_C2S_descriptor_;
  metadata.reflection = Msg_PrePayOrderCreate_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_PrePayOrderCreate_S2C::kReturnCodeFieldNumber;
const int Msg_PrePayOrderCreate_S2C::kPrepayIdFieldNumber;
const int Msg_PrePayOrderCreate_S2C::kSignFieldNumber;
const int Msg_PrePayOrderCreate_S2C::kAppidFieldNumber;
const int Msg_PrePayOrderCreate_S2C::kNonceStrFieldNumber;
const int Msg_PrePayOrderCreate_S2C::kTimestampFieldNumber;
const int Msg_PrePayOrderCreate_S2C::kMchIdFieldNumber;
const int Msg_PrePayOrderCreate_S2C::kPlatformFieldNumber;
#endif  // !_MSC_VER

Msg_PrePayOrderCreate_S2C::Msg_PrePayOrderCreate_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_PrePayOrderCreate_S2C::InitAsDefaultInstance() {
}

Msg_PrePayOrderCreate_S2C::Msg_PrePayOrderCreate_S2C(const Msg_PrePayOrderCreate_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_PrePayOrderCreate_S2C::SharedCtor() {
  _cached_size_ = 0;
  return_code_ = 0u;
  prepay_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  appid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nonce_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mch_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_PrePayOrderCreate_S2C::~Msg_PrePayOrderCreate_S2C() {
  SharedDtor();
}

void Msg_PrePayOrderCreate_S2C::SharedDtor() {
  if (prepay_id_ != &::google::protobuf::internal::kEmptyString) {
    delete prepay_id_;
  }
  if (sign_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_;
  }
  if (appid_ != &::google::protobuf::internal::kEmptyString) {
    delete appid_;
  }
  if (nonce_str_ != &::google::protobuf::internal::kEmptyString) {
    delete nonce_str_;
  }
  if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
    delete timestamp_;
  }
  if (mch_id_ != &::google::protobuf::internal::kEmptyString) {
    delete mch_id_;
  }
  if (this != default_instance_) {
  }
}

void Msg_PrePayOrderCreate_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_PrePayOrderCreate_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_PrePayOrderCreate_S2C_descriptor_;
}

const Msg_PrePayOrderCreate_S2C& Msg_PrePayOrderCreate_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_PrePayOrderCreate_S2C* Msg_PrePayOrderCreate_S2C::default_instance_ = NULL;

Msg_PrePayOrderCreate_S2C* Msg_PrePayOrderCreate_S2C::New() const {
  return new Msg_PrePayOrderCreate_S2C;
}

void Msg_PrePayOrderCreate_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    return_code_ = 0u;
    if (has_prepay_id()) {
      if (prepay_id_ != &::google::protobuf::internal::kEmptyString) {
        prepay_id_->clear();
      }
    }
    if (has_sign()) {
      if (sign_ != &::google::protobuf::internal::kEmptyString) {
        sign_->clear();
      }
    }
    if (has_appid()) {
      if (appid_ != &::google::protobuf::internal::kEmptyString) {
        appid_->clear();
      }
    }
    if (has_nonce_str()) {
      if (nonce_str_ != &::google::protobuf::internal::kEmptyString) {
        nonce_str_->clear();
      }
    }
    if (has_timestamp()) {
      if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
        timestamp_->clear();
      }
    }
    if (has_mch_id()) {
      if (mch_id_ != &::google::protobuf::internal::kEmptyString) {
        mch_id_->clear();
      }
    }
    platform_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_PrePayOrderCreate_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 return_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &return_code_)));
          set_has_return_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prepay_id;
        break;
      }

      // optional string prepay_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prepay_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prepay_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->prepay_id().data(), this->prepay_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sign;
        break;
      }

      // optional string sign = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_appid;
        break;
      }

      // optional string appid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_nonce_str;
        break;
      }

      // optional string nonce_str = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nonce_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nonce_str().data(), this->nonce_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_timestamp;
        break;
      }

      // optional string timestamp = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_mch_id;
        break;
      }

      // optional string mch_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mch_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mch_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mch_id().data(), this->mch_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_platform;
        break;
      }

      // optional uint32 platform = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_platform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
          set_has_platform();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_PrePayOrderCreate_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 return_code = 1;
  if (has_return_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->return_code(), output);
  }

  // optional string prepay_id = 2;
  if (has_prepay_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->prepay_id().data(), this->prepay_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->prepay_id(), output);
  }

  // optional string sign = 3;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sign(), output);
  }

  // optional string appid = 4;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->appid(), output);
  }

  // optional string nonce_str = 5;
  if (has_nonce_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nonce_str().data(), this->nonce_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->nonce_str(), output);
  }

  // optional string timestamp = 6;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->timestamp(), output);
  }

  // optional string mch_id = 7;
  if (has_mch_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mch_id().data(), this->mch_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->mch_id(), output);
  }

  // optional uint32 platform = 8;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->platform(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_PrePayOrderCreate_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 return_code = 1;
  if (has_return_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->return_code(), target);
  }

  // optional string prepay_id = 2;
  if (has_prepay_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->prepay_id().data(), this->prepay_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->prepay_id(), target);
  }

  // optional string sign = 3;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sign(), target);
  }

  // optional string appid = 4;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appid(), target);
  }

  // optional string nonce_str = 5;
  if (has_nonce_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nonce_str().data(), this->nonce_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nonce_str(), target);
  }

  // optional string timestamp = 6;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->timestamp(), target);
  }

  // optional string mch_id = 7;
  if (has_mch_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mch_id().data(), this->mch_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->mch_id(), target);
  }

  // optional uint32 platform = 8;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->platform(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_PrePayOrderCreate_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 return_code = 1;
    if (has_return_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->return_code());
    }

    // optional string prepay_id = 2;
    if (has_prepay_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prepay_id());
    }

    // optional string sign = 3;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

    // optional string appid = 4;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string nonce_str = 5;
    if (has_nonce_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nonce_str());
    }

    // optional string timestamp = 6;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timestamp());
    }

    // optional string mch_id = 7;
    if (has_mch_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mch_id());
    }

    // optional uint32 platform = 8;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platform());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_PrePayOrderCreate_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_PrePayOrderCreate_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_PrePayOrderCreate_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_PrePayOrderCreate_S2C::MergeFrom(const Msg_PrePayOrderCreate_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_return_code()) {
      set_return_code(from.return_code());
    }
    if (from.has_prepay_id()) {
      set_prepay_id(from.prepay_id());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_nonce_str()) {
      set_nonce_str(from.nonce_str());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_mch_id()) {
      set_mch_id(from.mch_id());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_PrePayOrderCreate_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_PrePayOrderCreate_S2C::CopyFrom(const Msg_PrePayOrderCreate_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_PrePayOrderCreate_S2C::IsInitialized() const {

  return true;
}

void Msg_PrePayOrderCreate_S2C::Swap(Msg_PrePayOrderCreate_S2C* other) {
  if (other != this) {
    std::swap(return_code_, other->return_code_);
    std::swap(prepay_id_, other->prepay_id_);
    std::swap(sign_, other->sign_);
    std::swap(appid_, other->appid_);
    std::swap(nonce_str_, other->nonce_str_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(mch_id_, other->mch_id_);
    std::swap(platform_, other->platform_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_PrePayOrderCreate_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_PrePayOrderCreate_S2C_descriptor_;
  metadata.reflection = Msg_PrePayOrderCreate_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_ProductSpace_C2S::kCategoryListFieldNumber;
#endif  // !_MSC_VER

Msg_ProductSpace_C2S::Msg_ProductSpace_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ProductSpace_C2S::InitAsDefaultInstance() {
}

Msg_ProductSpace_C2S::Msg_ProductSpace_C2S(const Msg_ProductSpace_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ProductSpace_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ProductSpace_C2S::~Msg_ProductSpace_C2S() {
  SharedDtor();
}

void Msg_ProductSpace_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ProductSpace_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ProductSpace_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ProductSpace_C2S_descriptor_;
}

const Msg_ProductSpace_C2S& Msg_ProductSpace_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ProductSpace_C2S* Msg_ProductSpace_C2S::default_instance_ = NULL;

Msg_ProductSpace_C2S* Msg_ProductSpace_C2S::New() const {
  return new Msg_ProductSpace_C2S;
}

void Msg_ProductSpace_C2S::Clear() {
  category_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ProductSpace_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dgame.ProductSpaceCategoryInfo Category_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Category_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_category_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Category_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_ProductSpace_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dgame.ProductSpaceCategoryInfo Category_list = 1;
  for (int i = 0; i < this->category_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->category_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ProductSpace_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dgame.ProductSpaceCategoryInfo Category_list = 1;
  for (int i = 0; i < this->category_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->category_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ProductSpace_C2S::ByteSize() const {
  int total_size = 0;

  // repeated .dgame.ProductSpaceCategoryInfo Category_list = 1;
  total_size += 1 * this->category_list_size();
  for (int i = 0; i < this->category_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->category_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ProductSpace_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ProductSpace_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ProductSpace_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ProductSpace_C2S::MergeFrom(const Msg_ProductSpace_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  category_list_.MergeFrom(from.category_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ProductSpace_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ProductSpace_C2S::CopyFrom(const Msg_ProductSpace_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ProductSpace_C2S::IsInitialized() const {

  return true;
}

void Msg_ProductSpace_C2S::Swap(Msg_ProductSpace_C2S* other) {
  if (other != this) {
    category_list_.Swap(&other->category_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ProductSpace_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ProductSpace_C2S_descriptor_;
  metadata.reflection = Msg_ProductSpace_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_ProductSpace_S2C::kReturnCodeFieldNumber;
const int Msg_ProductSpace_S2C::kProductListFieldNumber;
#endif  // !_MSC_VER

Msg_ProductSpace_S2C::Msg_ProductSpace_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_ProductSpace_S2C::InitAsDefaultInstance() {
}

Msg_ProductSpace_S2C::Msg_ProductSpace_S2C(const Msg_ProductSpace_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_ProductSpace_S2C::SharedCtor() {
  _cached_size_ = 0;
  return_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_ProductSpace_S2C::~Msg_ProductSpace_S2C() {
  SharedDtor();
}

void Msg_ProductSpace_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_ProductSpace_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_ProductSpace_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_ProductSpace_S2C_descriptor_;
}

const Msg_ProductSpace_S2C& Msg_ProductSpace_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_ProductSpace_S2C* Msg_ProductSpace_S2C::default_instance_ = NULL;

Msg_ProductSpace_S2C* Msg_ProductSpace_S2C::New() const {
  return new Msg_ProductSpace_S2C;
}

void Msg_ProductSpace_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    return_code_ = 0u;
  }
  product_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_ProductSpace_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 return_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &return_code_)));
          set_has_return_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Product_list;
        break;
      }

      // repeated .dgame.ProductSpaceProductInfo Product_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Product_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Product_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_ProductSpace_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 return_code = 1;
  if (has_return_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->return_code(), output);
  }

  // repeated .dgame.ProductSpaceProductInfo Product_list = 2;
  for (int i = 0; i < this->product_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->product_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_ProductSpace_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 return_code = 1;
  if (has_return_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->return_code(), target);
  }

  // repeated .dgame.ProductSpaceProductInfo Product_list = 2;
  for (int i = 0; i < this->product_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->product_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_ProductSpace_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 return_code = 1;
    if (has_return_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->return_code());
    }

  }
  // repeated .dgame.ProductSpaceProductInfo Product_list = 2;
  total_size += 1 * this->product_list_size();
  for (int i = 0; i < this->product_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->product_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_ProductSpace_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_ProductSpace_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_ProductSpace_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_ProductSpace_S2C::MergeFrom(const Msg_ProductSpace_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  product_list_.MergeFrom(from.product_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_return_code()) {
      set_return_code(from.return_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_ProductSpace_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_ProductSpace_S2C::CopyFrom(const Msg_ProductSpace_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ProductSpace_S2C::IsInitialized() const {

  return true;
}

void Msg_ProductSpace_S2C::Swap(Msg_ProductSpace_S2C* other) {
  if (other != this) {
    std::swap(return_code_, other->return_code_);
    product_list_.Swap(&other->product_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_ProductSpace_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_ProductSpace_S2C_descriptor_;
  metadata.reflection = Msg_ProductSpace_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderInfo::kOrderFieldNumber;
const int OrderInfo::kOrderReceiverFieldNumber;
const int OrderInfo::kHasInvoiceFieldNumber;
const int OrderInfo::kOrderInvoiceFieldNumber;
const int OrderInfo::kOrderLogFieldNumber;
#endif  // !_MSC_VER

OrderInfo::OrderInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrderInfo::InitAsDefaultInstance() {
  order_ = const_cast< ::CS::Order*>(&::CS::Order::default_instance());
  order_receiver_ = const_cast< ::CS::OrderReceiver*>(&::CS::OrderReceiver::default_instance());
  order_invoice_ = const_cast< ::CS::OrderInvoice*>(&::CS::OrderInvoice::default_instance());
}

OrderInfo::OrderInfo(const OrderInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrderInfo::SharedCtor() {
  _cached_size_ = 0;
  order_ = NULL;
  order_receiver_ = NULL;
  has_invoice_ = false;
  order_invoice_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderInfo::~OrderInfo() {
  SharedDtor();
}

void OrderInfo::SharedDtor() {
  if (this != default_instance_) {
    delete order_;
    delete order_receiver_;
    delete order_invoice_;
  }
}

void OrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderInfo_descriptor_;
}

const OrderInfo& OrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OrderInfo* OrderInfo::default_instance_ = NULL;

OrderInfo* OrderInfo::New() const {
  return new OrderInfo;
}

void OrderInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order()) {
      if (order_ != NULL) order_->::CS::Order::Clear();
    }
    if (has_order_receiver()) {
      if (order_receiver_ != NULL) order_receiver_->::CS::OrderReceiver::Clear();
    }
    has_invoice_ = false;
    if (has_order_invoice()) {
      if (order_invoice_ != NULL) order_invoice_->::CS::OrderInvoice::Clear();
    }
  }
  order_log_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CS.Order order = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_order_receiver;
        break;
      }

      // optional .CS.OrderReceiver order_receiver = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_receiver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order_receiver()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_has_invoice;
        break;
      }

      // optional bool has_invoice = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_has_invoice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_invoice_)));
          set_has_has_invoice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_order_invoice;
        break;
      }

      // optional .CS.OrderInvoice order_invoice = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_invoice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order_invoice()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_order_log;
        break;
      }

      // repeated .CS.OrderLog order_log = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_log:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_order_log()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_order_log;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .CS.Order order = 1;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->order(), output);
  }

  // optional .CS.OrderReceiver order_receiver = 2;
  if (has_order_receiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->order_receiver(), output);
  }

  // optional bool has_invoice = 3;
  if (has_has_invoice()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_invoice(), output);
  }

  // optional .CS.OrderInvoice order_invoice = 4;
  if (has_order_invoice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->order_invoice(), output);
  }

  // repeated .CS.OrderLog order_log = 5;
  for (int i = 0; i < this->order_log_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->order_log(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .CS.Order order = 1;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->order(), target);
  }

  // optional .CS.OrderReceiver order_receiver = 2;
  if (has_order_receiver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->order_receiver(), target);
  }

  // optional bool has_invoice = 3;
  if (has_has_invoice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_invoice(), target);
  }

  // optional .CS.OrderInvoice order_invoice = 4;
  if (has_order_invoice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->order_invoice(), target);
  }

  // repeated .CS.OrderLog order_log = 5;
  for (int i = 0; i < this->order_log_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->order_log(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrderInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CS.Order order = 1;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order());
    }

    // optional .CS.OrderReceiver order_receiver = 2;
    if (has_order_receiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order_receiver());
    }

    // optional bool has_invoice = 3;
    if (has_has_invoice()) {
      total_size += 1 + 1;
    }

    // optional .CS.OrderInvoice order_invoice = 4;
    if (has_order_invoice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order_invoice());
    }

  }
  // repeated .CS.OrderLog order_log = 5;
  total_size += 1 * this->order_log_size();
  for (int i = 0; i < this->order_log_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->order_log(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderInfo::MergeFrom(const OrderInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  order_log_.MergeFrom(from.order_log_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order()) {
      mutable_order()->::CS::Order::MergeFrom(from.order());
    }
    if (from.has_order_receiver()) {
      mutable_order_receiver()->::CS::OrderReceiver::MergeFrom(from.order_receiver());
    }
    if (from.has_has_invoice()) {
      set_has_invoice(from.has_invoice());
    }
    if (from.has_order_invoice()) {
      mutable_order_invoice()->::CS::OrderInvoice::MergeFrom(from.order_invoice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderInfo::CopyFrom(const OrderInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInfo::IsInitialized() const {

  if (has_order()) {
    if (!this->order().IsInitialized()) return false;
  }
  return true;
}

void OrderInfo::Swap(OrderInfo* other) {
  if (other != this) {
    std::swap(order_, other->order_);
    std::swap(order_receiver_, other->order_receiver_);
    std::swap(has_invoice_, other->has_invoice_);
    std::swap(order_invoice_, other->order_invoice_);
    order_log_.Swap(&other->order_log_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderInfo_descriptor_;
  metadata.reflection = OrderInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Order::kIdFieldNumber;
const int Order::kOrderCodeFieldNumber;
const int Order::kStatusFieldNumber;
const int Order::kOrderTimeFieldNumber;
const int Order::kGoodsListFieldNumber;
const int Order::kActIdFieldNumber;
const int Order::kTotalPriceFieldNumber;
const int Order::kTotalNumFieldNumber;
#endif  // !_MSC_VER

Order::Order()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Order::InitAsDefaultInstance() {
}

Order::Order(const Order& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Order::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  status_ = 0u;
  order_time_ = GOOGLE_LONGLONG(0);
  act_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  total_price_ = 0;
  total_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Order::~Order() {
  SharedDtor();
}

void Order::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (act_id_ != &::google::protobuf::internal::kEmptyString) {
    delete act_id_;
  }
  if (this != default_instance_) {
  }
}

void Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Order_descriptor_;
}

const Order& Order::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Order* Order::default_instance_ = NULL;

Order* Order::New() const {
  return new Order;
}

void Order::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    status_ = 0u;
    order_time_ = GOOGLE_LONGLONG(0);
    if (has_act_id()) {
      if (act_id_ != &::google::protobuf::internal::kEmptyString) {
        act_id_->clear();
      }
    }
    total_price_ = 0;
    total_num_ = 0u;
  }
  goods_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_order_code;
        break;
      }

      // required string order_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional uint32 status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_order_time;
        break;
      }

      // optional int64 order_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_order_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &order_time_)));
          set_has_order_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_goods_list;
        break;
      }

      // repeated .CS.OrderGoods goods_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_goods_list;
        if (input->ExpectTag(50)) goto parse_act_id;
        break;
      }

      // optional string act_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_act_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->act_id().data(), this->act_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_total_price;
        break;
      }

      // optional float total_price = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_total_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_price_)));
          set_has_total_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_total_num;
        break;
      }

      // optional uint32 total_num = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
          set_has_total_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required string order_code = 2;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->order_code(), output);
  }

  // optional uint32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  // optional int64 order_time = 4;
  if (has_order_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->order_time(), output);
  }

  // repeated .CS.OrderGoods goods_list = 5;
  for (int i = 0; i < this->goods_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->goods_list(i), output);
  }

  // optional string act_id = 6;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->act_id().data(), this->act_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->act_id(), output);
  }

  // optional float total_price = 7;
  if (has_total_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->total_price(), output);
  }

  // optional uint32 total_num = 8;
  if (has_total_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->total_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Order::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required string order_code = 2;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->order_code(), target);
  }

  // optional uint32 status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  // optional int64 order_time = 4;
  if (has_order_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->order_time(), target);
  }

  // repeated .CS.OrderGoods goods_list = 5;
  for (int i = 0; i < this->goods_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->goods_list(i), target);
  }

  // optional string act_id = 6;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->act_id().data(), this->act_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->act_id(), target);
  }

  // optional float total_price = 7;
  if (has_total_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->total_price(), target);
  }

  // optional uint32 total_num = 8;
  if (has_total_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->total_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Order::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required string order_code = 2;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional uint32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional int64 order_time = 4;
    if (has_order_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->order_time());
    }

    // optional string act_id = 6;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->act_id());
    }

    // optional float total_price = 7;
    if (has_total_price()) {
      total_size += 1 + 4;
    }

    // optional uint32 total_num = 8;
    if (has_total_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_num());
    }

  }
  // repeated .CS.OrderGoods goods_list = 5;
  total_size += 1 * this->goods_list_size();
  for (int i = 0; i < this->goods_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Order* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Order*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_list_.MergeFrom(from.goods_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_order_time()) {
      set_order_time(from.order_time());
    }
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_total_price()) {
      set_total_price(from.total_price());
    }
    if (from.has_total_num()) {
      set_total_num(from.total_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < goods_list_size(); i++) {
    if (!this->goods_list(i).IsInitialized()) return false;
  }
  return true;
}

void Order::Swap(Order* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(order_code_, other->order_code_);
    std::swap(status_, other->status_);
    std::swap(order_time_, other->order_time_);
    goods_list_.Swap(&other->goods_list_);
    std::swap(act_id_, other->act_id_);
    std::swap(total_price_, other->total_price_);
    std::swap(total_num_, other->total_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Order_descriptor_;
  metadata.reflection = Order_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderGoods::kIdFieldNumber;
const int OrderGoods::kNameFieldNumber;
const int OrderGoods::kPriceFieldNumber;
const int OrderGoods::kNumFieldNumber;
const int OrderGoods::kImageUrlFieldNumber;
const int OrderGoods::kShapeFieldNumber;
const int OrderGoods::kSignFieldNumber;
const int OrderGoods::kProductIdFieldNumber;
const int OrderGoods::kOpusIdFieldNumber;
const int OrderGoods::kWareIdFieldNumber;
const int OrderGoods::kGoodsPartListFieldNumber;
#endif  // !_MSC_VER

OrderGoods::OrderGoods()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrderGoods::InitAsDefaultInstance() {
}

OrderGoods::OrderGoods(const OrderGoods& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrderGoods::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  price_ = 0;
  num_ = 0u;
  image_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  shape_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  opus_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ware_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderGoods::~OrderGoods() {
  SharedDtor();
}

void OrderGoods::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (image_url_ != &::google::protobuf::internal::kEmptyString) {
    delete image_url_;
  }
  if (shape_ != &::google::protobuf::internal::kEmptyString) {
    delete shape_;
  }
  if (sign_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_;
  }
  if (product_id_ != &::google::protobuf::internal::kEmptyString) {
    delete product_id_;
  }
  if (opus_id_ != &::google::protobuf::internal::kEmptyString) {
    delete opus_id_;
  }
  if (ware_id_ != &::google::protobuf::internal::kEmptyString) {
    delete ware_id_;
  }
  if (this != default_instance_) {
  }
}

void OrderGoods::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderGoods::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderGoods_descriptor_;
}

const OrderGoods& OrderGoods::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OrderGoods* OrderGoods::default_instance_ = NULL;

OrderGoods* OrderGoods::New() const {
  return new OrderGoods;
}

void OrderGoods::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    price_ = 0;
    num_ = 0u;
    if (has_image_url()) {
      if (image_url_ != &::google::protobuf::internal::kEmptyString) {
        image_url_->clear();
      }
    }
    if (has_shape()) {
      if (shape_ != &::google::protobuf::internal::kEmptyString) {
        shape_->clear();
      }
    }
    if (has_sign()) {
      if (sign_ != &::google::protobuf::internal::kEmptyString) {
        sign_->clear();
      }
    }
    if (has_product_id()) {
      if (product_id_ != &::google::protobuf::internal::kEmptyString) {
        product_id_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_opus_id()) {
      if (opus_id_ != &::google::protobuf::internal::kEmptyString) {
        opus_id_->clear();
      }
    }
    if (has_ware_id()) {
      if (ware_id_ != &::google::protobuf::internal::kEmptyString) {
        ware_id_->clear();
      }
    }
  }
  goods_part_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderGoods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_price;
        break;
      }

      // optional float price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_num;
        break;
      }

      // optional uint32 num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_image_url;
        break;
      }

      // optional string image_url = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_image_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->image_url().data(), this->image_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_shape;
        break;
      }

      // optional string shape = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shape()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->shape().data(), this->shape().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_sign;
        break;
      }

      // optional string sign = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_product_id;
        break;
      }

      // optional string product_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->product_id().data(), this->product_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_opus_id;
        break;
      }

      // optional string opus_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_opus_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opus_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->opus_id().data(), this->opus_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_ware_id;
        break;
      }

      // optional string ware_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ware_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ware_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ware_id().data(), this->ware_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_goods_part_list;
        break;
      }

      // repeated .CS.GoodsPart goods_part_list = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_part_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_part_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_goods_part_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrderGoods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional float price = 3;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->price(), output);
  }

  // optional uint32 num = 4;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num(), output);
  }

  // optional string image_url = 5;
  if (has_image_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_url().data(), this->image_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->image_url(), output);
  }

  // optional string shape = 6;
  if (has_shape()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shape().data(), this->shape().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->shape(), output);
  }

  // optional string sign = 7;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->sign(), output);
  }

  // optional string product_id = 8;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->product_id(), output);
  }

  // optional string opus_id = 9;
  if (has_opus_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opus_id().data(), this->opus_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->opus_id(), output);
  }

  // optional string ware_id = 10;
  if (has_ware_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ware_id().data(), this->ware_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->ware_id(), output);
  }

  // repeated .CS.GoodsPart goods_part_list = 11;
  for (int i = 0; i < this->goods_part_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->goods_part_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrderGoods::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional float price = 3;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->price(), target);
  }

  // optional uint32 num = 4;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num(), target);
  }

  // optional string image_url = 5;
  if (has_image_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_url().data(), this->image_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->image_url(), target);
  }

  // optional string shape = 6;
  if (has_shape()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shape().data(), this->shape().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->shape(), target);
  }

  // optional string sign = 7;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sign(), target);
  }

  // optional string product_id = 8;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->product_id(), target);
  }

  // optional string opus_id = 9;
  if (has_opus_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opus_id().data(), this->opus_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->opus_id(), target);
  }

  // optional string ware_id = 10;
  if (has_ware_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ware_id().data(), this->ware_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ware_id(), target);
  }

  // repeated .CS.GoodsPart goods_part_list = 11;
  for (int i = 0; i < this->goods_part_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->goods_part_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrderGoods::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional float price = 3;
    if (has_price()) {
      total_size += 1 + 4;
    }

    // optional uint32 num = 4;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional string image_url = 5;
    if (has_image_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_url());
    }

    // optional string shape = 6;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shape());
    }

    // optional string sign = 7;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

    // optional string product_id = 8;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string opus_id = 9;
    if (has_opus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->opus_id());
    }

    // optional string ware_id = 10;
    if (has_ware_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ware_id());
    }

  }
  // repeated .CS.GoodsPart goods_part_list = 11;
  total_size += 1 * this->goods_part_list_size();
  for (int i = 0; i < this->goods_part_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_part_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderGoods::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderGoods* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderGoods*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderGoods::MergeFrom(const OrderGoods& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_part_list_.MergeFrom(from.goods_part_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_image_url()) {
      set_image_url(from.image_url());
    }
    if (from.has_shape()) {
      set_shape(from.shape());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
    if (from.has_product_id()) {
      set_product_id(from.product_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_opus_id()) {
      set_opus_id(from.opus_id());
    }
    if (from.has_ware_id()) {
      set_ware_id(from.ware_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderGoods::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderGoods::CopyFrom(const OrderGoods& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderGoods::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OrderGoods::Swap(OrderGoods* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(price_, other->price_);
    std::swap(num_, other->num_);
    std::swap(image_url_, other->image_url_);
    std::swap(shape_, other->shape_);
    std::swap(sign_, other->sign_);
    std::swap(product_id_, other->product_id_);
    std::swap(opus_id_, other->opus_id_);
    std::swap(ware_id_, other->ware_id_);
    goods_part_list_.Swap(&other->goods_part_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderGoods::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderGoods_descriptor_;
  metadata.reflection = OrderGoods_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderReceiver::kNameFieldNumber;
const int OrderReceiver::kPhoneFieldNumber;
const int OrderReceiver::kAddressFieldNumber;
#endif  // !_MSC_VER

OrderReceiver::OrderReceiver()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrderReceiver::InitAsDefaultInstance() {
}

OrderReceiver::OrderReceiver(const OrderReceiver& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrderReceiver::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderReceiver::~OrderReceiver() {
  SharedDtor();
}

void OrderReceiver::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (this != default_instance_) {
  }
}

void OrderReceiver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderReceiver::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderReceiver_descriptor_;
}

const OrderReceiver& OrderReceiver::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OrderReceiver* OrderReceiver::default_instance_ = NULL;

OrderReceiver* OrderReceiver::New() const {
  return new OrderReceiver;
}

void OrderReceiver::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::kEmptyString) {
        phone_->clear();
      }
    }
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderReceiver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_phone;
        break;
      }

      // optional string phone = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_address;
        break;
      }

      // optional string address = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrderReceiver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional string phone = 2;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->phone(), output);
  }

  // optional string address = 3;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->address(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrderReceiver::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string phone = 2;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  // optional string address = 3;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->address(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrderReceiver::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string phone = 2;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional string address = 3;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderReceiver::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderReceiver* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderReceiver*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderReceiver::MergeFrom(const OrderReceiver& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_phone()) {
      set_phone(from.phone());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderReceiver::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderReceiver::CopyFrom(const OrderReceiver& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderReceiver::IsInitialized() const {

  return true;
}

void OrderReceiver::Swap(OrderReceiver* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(phone_, other->phone_);
    std::swap(address_, other->address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderReceiver::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderReceiver_descriptor_;
  metadata.reflection = OrderReceiver_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderInvoice::kTitleFieldNumber;
const int OrderInvoice::kContentFieldNumber;
#endif  // !_MSC_VER

OrderInvoice::OrderInvoice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrderInvoice::InitAsDefaultInstance() {
}

OrderInvoice::OrderInvoice(const OrderInvoice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrderInvoice::SharedCtor() {
  _cached_size_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderInvoice::~OrderInvoice() {
  SharedDtor();
}

void OrderInvoice::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void OrderInvoice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderInvoice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderInvoice_descriptor_;
}

const OrderInvoice& OrderInvoice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OrderInvoice* OrderInvoice::default_instance_ = NULL;

OrderInvoice* OrderInvoice::New() const {
  return new OrderInvoice;
}

void OrderInvoice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderInvoice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string title = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // optional string content = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrderInvoice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->title(), output);
  }

  // optional string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrderInvoice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // optional string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrderInvoice::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string title = 1;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderInvoice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderInvoice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderInvoice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderInvoice::MergeFrom(const OrderInvoice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderInvoice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderInvoice::CopyFrom(const OrderInvoice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInvoice::IsInitialized() const {

  return true;
}

void OrderInvoice::Swap(OrderInvoice* other) {
  if (other != this) {
    std::swap(title_, other->title_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderInvoice::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderInvoice_descriptor_;
  metadata.reflection = OrderInvoice_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderLog::kCreateDateFieldNumber;
const int OrderLog::kContentFieldNumber;
#endif  // !_MSC_VER

OrderLog::OrderLog()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrderLog::InitAsDefaultInstance() {
}

OrderLog::OrderLog(const OrderLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrderLog::SharedCtor() {
  _cached_size_ = 0;
  create_date_ = GOOGLE_LONGLONG(0);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderLog::~OrderLog() {
  SharedDtor();
}

void OrderLog::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void OrderLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderLog_descriptor_;
}

const OrderLog& OrderLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OrderLog* OrderLog::default_instance_ = NULL;

OrderLog* OrderLog::New() const {
  return new OrderLog;
}

void OrderLog::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    create_date_ = GOOGLE_LONGLONG(0);
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 create_date = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_date_)));
          set_has_create_date();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // optional string content = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrderLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 create_date = 1;
  if (has_create_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->create_date(), output);
  }

  // optional string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrderLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 create_date = 1;
  if (has_create_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->create_date(), target);
  }

  // optional string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrderLog::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 create_date = 1;
    if (has_create_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->create_date());
    }

    // optional string content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderLog::MergeFrom(const OrderLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_create_date()) {
      set_create_date(from.create_date());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderLog::CopyFrom(const OrderLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderLog::IsInitialized() const {

  return true;
}

void OrderLog::Swap(OrderLog* other) {
  if (other != this) {
    std::swap(create_date_, other->create_date_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderLog_descriptor_;
  metadata.reflection = OrderLog_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderQuery::kStatusFieldNumber;
#endif  // !_MSC_VER

OrderQuery::OrderQuery()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrderQuery::InitAsDefaultInstance() {
}

OrderQuery::OrderQuery(const OrderQuery& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrderQuery::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderQuery::~OrderQuery() {
  SharedDtor();
}

void OrderQuery::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OrderQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderQuery_descriptor_;
}

const OrderQuery& OrderQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OrderQuery* OrderQuery::default_instance_ = NULL;

OrderQuery* OrderQuery::New() const {
  return new OrderQuery;
}

void OrderQuery::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrderQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrderQuery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrderQuery::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderQuery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderQuery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderQuery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderQuery::MergeFrom(const OrderQuery& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderQuery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderQuery::CopyFrom(const OrderQuery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderQuery::IsInitialized() const {

  return true;
}

void OrderQuery::Swap(OrderQuery* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderQuery_descriptor_;
  metadata.reflection = OrderQuery_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int query_all_order_req::kCurPageFieldNumber;
const int query_all_order_req::kPageSizeFieldNumber;
#endif  // !_MSC_VER

query_all_order_req::query_all_order_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void query_all_order_req::InitAsDefaultInstance() {
}

query_all_order_req::query_all_order_req(const query_all_order_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void query_all_order_req::SharedCtor() {
  _cached_size_ = 0;
  cur_page_ = 0u;
  page_size_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

query_all_order_req::~query_all_order_req() {
  SharedDtor();
}

void query_all_order_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void query_all_order_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* query_all_order_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return query_all_order_req_descriptor_;
}

const query_all_order_req& query_all_order_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

query_all_order_req* query_all_order_req::default_instance_ = NULL;

query_all_order_req* query_all_order_req::New() const {
  return new query_all_order_req;
}

void query_all_order_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_page_ = 0u;
    page_size_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool query_all_order_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cur_page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_page_size;
        break;
      }

      // optional uint32 page_size = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_)));
          set_has_page_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void query_all_order_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 cur_page = 1;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_page(), output);
  }

  // optional uint32 page_size = 2;
  if (has_page_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_size(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* query_all_order_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 cur_page = 1;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_page(), target);
  }

  // optional uint32 page_size = 2;
  if (has_page_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_size(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int query_all_order_req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 cur_page = 1;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur_page());
    }

    // optional uint32 page_size = 2;
    if (has_page_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_size());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void query_all_order_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const query_all_order_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const query_all_order_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void query_all_order_req::MergeFrom(const query_all_order_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_page_size()) {
      set_page_size(from.page_size());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void query_all_order_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void query_all_order_req::CopyFrom(const query_all_order_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool query_all_order_req::IsInitialized() const {

  return true;
}

void query_all_order_req::Swap(query_all_order_req* other) {
  if (other != this) {
    std::swap(cur_page_, other->cur_page_);
    std::swap(page_size_, other->page_size_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata query_all_order_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = query_all_order_req_descriptor_;
  metadata.reflection = query_all_order_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int query_all_order_res::kOrderListFieldNumber;
const int query_all_order_res::kTotalPageFieldNumber;
const int query_all_order_res::kResultCodeFieldNumber;
const int query_all_order_res::kResultDesFieldNumber;
const int query_all_order_res::kTotalNumFieldNumber;
#endif  // !_MSC_VER

query_all_order_res::query_all_order_res()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void query_all_order_res::InitAsDefaultInstance() {
}

query_all_order_res::query_all_order_res(const query_all_order_res& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void query_all_order_res::SharedCtor() {
  _cached_size_ = 0;
  total_page_ = 0u;
  result_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  total_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

query_all_order_res::~query_all_order_res() {
  SharedDtor();
}

void query_all_order_res::SharedDtor() {
  if (result_code_ != &::google::protobuf::internal::kEmptyString) {
    delete result_code_;
  }
  if (result_des_ != &::google::protobuf::internal::kEmptyString) {
    delete result_des_;
  }
  if (this != default_instance_) {
  }
}

void query_all_order_res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* query_all_order_res::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return query_all_order_res_descriptor_;
}

const query_all_order_res& query_all_order_res::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

query_all_order_res* query_all_order_res::default_instance_ = NULL;

query_all_order_res* query_all_order_res::New() const {
  return new query_all_order_res;
}

void query_all_order_res::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    total_page_ = 0u;
    if (has_result_code()) {
      if (result_code_ != &::google::protobuf::internal::kEmptyString) {
        result_code_->clear();
      }
    }
    if (has_result_des()) {
      if (result_des_ != &::google::protobuf::internal::kEmptyString) {
        result_des_->clear();
      }
    }
    total_num_ = 0u;
  }
  order_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool query_all_order_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CS.Order order_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_order_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_order_list;
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }

      // optional uint32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_result_code;
        break;
      }

      // optional string result_code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result_code().data(), this->result_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_result_des;
        break;
      }

      // optional string result_des = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_des:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_des()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result_des().data(), this->result_des().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_num;
        break;
      }

      // optional uint32 total_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
          set_has_total_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void query_all_order_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CS.Order order_list = 1;
  for (int i = 0; i < this->order_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->order_list(i), output);
  }

  // optional uint32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_page(), output);
  }

  // optional string result_code = 3;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_code().data(), this->result_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->result_code(), output);
  }

  // optional string result_des = 4;
  if (has_result_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_des().data(), this->result_des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->result_des(), output);
  }

  // optional uint32 total_num = 5;
  if (has_total_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->total_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* query_all_order_res::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CS.Order order_list = 1;
  for (int i = 0; i < this->order_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->order_list(i), target);
  }

  // optional uint32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_page(), target);
  }

  // optional string result_code = 3;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_code().data(), this->result_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->result_code(), target);
  }

  // optional string result_des = 4;
  if (has_result_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_des().data(), this->result_des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->result_des(), target);
  }

  // optional uint32 total_num = 5;
  if (has_total_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->total_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int query_all_order_res::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_page());
    }

    // optional string result_code = 3;
    if (has_result_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_code());
    }

    // optional string result_des = 4;
    if (has_result_des()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_des());
    }

    // optional uint32 total_num = 5;
    if (has_total_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_num());
    }

  }
  // repeated .CS.Order order_list = 1;
  total_size += 1 * this->order_list_size();
  for (int i = 0; i < this->order_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->order_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void query_all_order_res::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const query_all_order_res* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const query_all_order_res*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void query_all_order_res::MergeFrom(const query_all_order_res& from) {
  GOOGLE_CHECK_NE(&from, this);
  order_list_.MergeFrom(from.order_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_result_code()) {
      set_result_code(from.result_code());
    }
    if (from.has_result_des()) {
      set_result_des(from.result_des());
    }
    if (from.has_total_num()) {
      set_total_num(from.total_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void query_all_order_res::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void query_all_order_res::CopyFrom(const query_all_order_res& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool query_all_order_res::IsInitialized() const {

  for (int i = 0; i < order_list_size(); i++) {
    if (!this->order_list(i).IsInitialized()) return false;
  }
  return true;
}

void query_all_order_res::Swap(query_all_order_res* other) {
  if (other != this) {
    order_list_.Swap(&other->order_list_);
    std::swap(total_page_, other->total_page_);
    std::swap(result_code_, other->result_code_);
    std::swap(result_des_, other->result_des_);
    std::swap(total_num_, other->total_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata query_all_order_res::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = query_all_order_res_descriptor_;
  metadata.reflection = query_all_order_res_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int query_con_order_req::kCurPageFieldNumber;
const int query_con_order_req::kPageSizeFieldNumber;
const int query_con_order_req::kOrderQueryFieldNumber;
#endif  // !_MSC_VER

query_con_order_req::query_con_order_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void query_con_order_req::InitAsDefaultInstance() {
  order_query_ = const_cast< ::CS::OrderQuery*>(&::CS::OrderQuery::default_instance());
}

query_con_order_req::query_con_order_req(const query_con_order_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void query_con_order_req::SharedCtor() {
  _cached_size_ = 0;
  cur_page_ = 0u;
  page_size_ = 0u;
  order_query_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

query_con_order_req::~query_con_order_req() {
  SharedDtor();
}

void query_con_order_req::SharedDtor() {
  if (this != default_instance_) {
    delete order_query_;
  }
}

void query_con_order_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* query_con_order_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return query_con_order_req_descriptor_;
}

const query_con_order_req& query_con_order_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

query_con_order_req* query_con_order_req::default_instance_ = NULL;

query_con_order_req* query_con_order_req::New() const {
  return new query_con_order_req;
}

void query_con_order_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_page_ = 0u;
    page_size_ = 0u;
    if (has_order_query()) {
      if (order_query_ != NULL) order_query_->::CS::OrderQuery::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool query_con_order_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cur_page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_page_size;
        break;
      }

      // optional uint32 page_size = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_)));
          set_has_page_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_order_query;
        break;
      }

      // optional .CS.OrderQuery order_query = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order_query()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void query_con_order_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 cur_page = 1;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_page(), output);
  }

  // optional uint32 page_size = 2;
  if (has_page_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_size(), output);
  }

  // optional .CS.OrderQuery order_query = 3;
  if (has_order_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->order_query(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* query_con_order_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 cur_page = 1;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_page(), target);
  }

  // optional uint32 page_size = 2;
  if (has_page_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_size(), target);
  }

  // optional .CS.OrderQuery order_query = 3;
  if (has_order_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->order_query(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int query_con_order_req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 cur_page = 1;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur_page());
    }

    // optional uint32 page_size = 2;
    if (has_page_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_size());
    }

    // optional .CS.OrderQuery order_query = 3;
    if (has_order_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order_query());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void query_con_order_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const query_con_order_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const query_con_order_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void query_con_order_req::MergeFrom(const query_con_order_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_page_size()) {
      set_page_size(from.page_size());
    }
    if (from.has_order_query()) {
      mutable_order_query()->::CS::OrderQuery::MergeFrom(from.order_query());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void query_con_order_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void query_con_order_req::CopyFrom(const query_con_order_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool query_con_order_req::IsInitialized() const {

  return true;
}

void query_con_order_req::Swap(query_con_order_req* other) {
  if (other != this) {
    std::swap(cur_page_, other->cur_page_);
    std::swap(page_size_, other->page_size_);
    std::swap(order_query_, other->order_query_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata query_con_order_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = query_con_order_req_descriptor_;
  metadata.reflection = query_con_order_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int query_con_order_res::kOrderListFieldNumber;
const int query_con_order_res::kTotalPageFieldNumber;
const int query_con_order_res::kResultCodeFieldNumber;
const int query_con_order_res::kResultDesFieldNumber;
const int query_con_order_res::kTotalNumFieldNumber;
#endif  // !_MSC_VER

query_con_order_res::query_con_order_res()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void query_con_order_res::InitAsDefaultInstance() {
}

query_con_order_res::query_con_order_res(const query_con_order_res& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void query_con_order_res::SharedCtor() {
  _cached_size_ = 0;
  total_page_ = 0u;
  result_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  total_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

query_con_order_res::~query_con_order_res() {
  SharedDtor();
}

void query_con_order_res::SharedDtor() {
  if (result_code_ != &::google::protobuf::internal::kEmptyString) {
    delete result_code_;
  }
  if (result_des_ != &::google::protobuf::internal::kEmptyString) {
    delete result_des_;
  }
  if (this != default_instance_) {
  }
}

void query_con_order_res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* query_con_order_res::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return query_con_order_res_descriptor_;
}

const query_con_order_res& query_con_order_res::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

query_con_order_res* query_con_order_res::default_instance_ = NULL;

query_con_order_res* query_con_order_res::New() const {
  return new query_con_order_res;
}

void query_con_order_res::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    total_page_ = 0u;
    if (has_result_code()) {
      if (result_code_ != &::google::protobuf::internal::kEmptyString) {
        result_code_->clear();
      }
    }
    if (has_result_des()) {
      if (result_des_ != &::google::protobuf::internal::kEmptyString) {
        result_des_->clear();
      }
    }
    total_num_ = 0u;
  }
  order_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool query_con_order_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CS.Order order_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_order_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_order_list;
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }

      // optional uint32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_result_code;
        break;
      }

      // optional string result_code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result_code().data(), this->result_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_result_des;
        break;
      }

      // optional string result_des = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_des:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_des()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result_des().data(), this->result_des().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_num;
        break;
      }

      // optional uint32 total_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
          set_has_total_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void query_con_order_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CS.Order order_list = 1;
  for (int i = 0; i < this->order_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->order_list(i), output);
  }

  // optional uint32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_page(), output);
  }

  // optional string result_code = 3;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_code().data(), this->result_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->result_code(), output);
  }

  // optional string result_des = 4;
  if (has_result_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_des().data(), this->result_des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->result_des(), output);
  }

  // optional uint32 total_num = 5;
  if (has_total_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->total_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* query_con_order_res::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CS.Order order_list = 1;
  for (int i = 0; i < this->order_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->order_list(i), target);
  }

  // optional uint32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_page(), target);
  }

  // optional string result_code = 3;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_code().data(), this->result_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->result_code(), target);
  }

  // optional string result_des = 4;
  if (has_result_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_des().data(), this->result_des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->result_des(), target);
  }

  // optional uint32 total_num = 5;
  if (has_total_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->total_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int query_con_order_res::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_page());
    }

    // optional string result_code = 3;
    if (has_result_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_code());
    }

    // optional string result_des = 4;
    if (has_result_des()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_des());
    }

    // optional uint32 total_num = 5;
    if (has_total_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_num());
    }

  }
  // repeated .CS.Order order_list = 1;
  total_size += 1 * this->order_list_size();
  for (int i = 0; i < this->order_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->order_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void query_con_order_res::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const query_con_order_res* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const query_con_order_res*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void query_con_order_res::MergeFrom(const query_con_order_res& from) {
  GOOGLE_CHECK_NE(&from, this);
  order_list_.MergeFrom(from.order_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_result_code()) {
      set_result_code(from.result_code());
    }
    if (from.has_result_des()) {
      set_result_des(from.result_des());
    }
    if (from.has_total_num()) {
      set_total_num(from.total_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void query_con_order_res::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void query_con_order_res::CopyFrom(const query_con_order_res& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool query_con_order_res::IsInitialized() const {

  for (int i = 0; i < order_list_size(); i++) {
    if (!this->order_list(i).IsInitialized()) return false;
  }
  return true;
}

void query_con_order_res::Swap(query_con_order_res* other) {
  if (other != this) {
    order_list_.Swap(&other->order_list_);
    std::swap(total_page_, other->total_page_);
    std::swap(result_code_, other->result_code_);
    std::swap(result_des_, other->result_des_);
    std::swap(total_num_, other->total_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata query_con_order_res::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = query_con_order_res_descriptor_;
  metadata.reflection = query_con_order_res_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int query_single_order_req::kOrderCodeFieldNumber;
#endif  // !_MSC_VER

query_single_order_req::query_single_order_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void query_single_order_req::InitAsDefaultInstance() {
}

query_single_order_req::query_single_order_req(const query_single_order_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void query_single_order_req::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

query_single_order_req::~query_single_order_req() {
  SharedDtor();
}

void query_single_order_req::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void query_single_order_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* query_single_order_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return query_single_order_req_descriptor_;
}

const query_single_order_req& query_single_order_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

query_single_order_req* query_single_order_req::default_instance_ = NULL;

query_single_order_req* query_single_order_req::New() const {
  return new query_single_order_req;
}

void query_single_order_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool query_single_order_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void query_single_order_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* query_single_order_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int query_single_order_req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void query_single_order_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const query_single_order_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const query_single_order_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void query_single_order_req::MergeFrom(const query_single_order_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void query_single_order_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void query_single_order_req::CopyFrom(const query_single_order_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool query_single_order_req::IsInitialized() const {

  return true;
}

void query_single_order_req::Swap(query_single_order_req* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata query_single_order_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = query_single_order_req_descriptor_;
  metadata.reflection = query_single_order_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int query_single_order_res::kOrderInfoFieldNumber;
const int query_single_order_res::kResultCodeFieldNumber;
const int query_single_order_res::kResultDesFieldNumber;
#endif  // !_MSC_VER

query_single_order_res::query_single_order_res()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void query_single_order_res::InitAsDefaultInstance() {
  orderinfo_ = const_cast< ::CS::OrderInfo*>(&::CS::OrderInfo::default_instance());
}

query_single_order_res::query_single_order_res(const query_single_order_res& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void query_single_order_res::SharedCtor() {
  _cached_size_ = 0;
  orderinfo_ = NULL;
  result_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

query_single_order_res::~query_single_order_res() {
  SharedDtor();
}

void query_single_order_res::SharedDtor() {
  if (result_code_ != &::google::protobuf::internal::kEmptyString) {
    delete result_code_;
  }
  if (result_des_ != &::google::protobuf::internal::kEmptyString) {
    delete result_des_;
  }
  if (this != default_instance_) {
    delete orderinfo_;
  }
}

void query_single_order_res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* query_single_order_res::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return query_single_order_res_descriptor_;
}

const query_single_order_res& query_single_order_res::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

query_single_order_res* query_single_order_res::default_instance_ = NULL;

query_single_order_res* query_single_order_res::New() const {
  return new query_single_order_res;
}

void query_single_order_res::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_orderinfo()) {
      if (orderinfo_ != NULL) orderinfo_->::CS::OrderInfo::Clear();
    }
    if (has_result_code()) {
      if (result_code_ != &::google::protobuf::internal::kEmptyString) {
        result_code_->clear();
      }
    }
    if (has_result_des()) {
      if (result_des_ != &::google::protobuf::internal::kEmptyString) {
        result_des_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool query_single_order_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CS.OrderInfo orderInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_orderinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_result_code;
        break;
      }

      // optional string result_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result_code().data(), this->result_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_result_des;
        break;
      }

      // optional string result_des = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_des:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_des()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result_des().data(), this->result_des().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void query_single_order_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .CS.OrderInfo orderInfo = 1;
  if (has_orderinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->orderinfo(), output);
  }

  // optional string result_code = 2;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_code().data(), this->result_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->result_code(), output);
  }

  // optional string result_des = 3;
  if (has_result_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_des().data(), this->result_des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->result_des(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* query_single_order_res::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .CS.OrderInfo orderInfo = 1;
  if (has_orderinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->orderinfo(), target);
  }

  // optional string result_code = 2;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_code().data(), this->result_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result_code(), target);
  }

  // optional string result_des = 3;
  if (has_result_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result_des().data(), this->result_des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->result_des(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int query_single_order_res::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CS.OrderInfo orderInfo = 1;
    if (has_orderinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->orderinfo());
    }

    // optional string result_code = 2;
    if (has_result_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_code());
    }

    // optional string result_des = 3;
    if (has_result_des()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result_des());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void query_single_order_res::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const query_single_order_res* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const query_single_order_res*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void query_single_order_res::MergeFrom(const query_single_order_res& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderinfo()) {
      mutable_orderinfo()->::CS::OrderInfo::MergeFrom(from.orderinfo());
    }
    if (from.has_result_code()) {
      set_result_code(from.result_code());
    }
    if (from.has_result_des()) {
      set_result_des(from.result_des());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void query_single_order_res::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void query_single_order_res::CopyFrom(const query_single_order_res& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool query_single_order_res::IsInitialized() const {

  if (has_orderinfo()) {
    if (!this->orderinfo().IsInitialized()) return false;
  }
  return true;
}

void query_single_order_res::Swap(query_single_order_res* other) {
  if (other != this) {
    std::swap(orderinfo_, other->orderinfo_);
    std::swap(result_code_, other->result_code_);
    std::swap(result_des_, other->result_des_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata query_single_order_res::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = query_single_order_res_descriptor_;
  metadata.reflection = query_single_order_res_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Msg_CooperationProductSpace_C2S::Msg_CooperationProductSpace_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_CooperationProductSpace_C2S::InitAsDefaultInstance() {
}

Msg_CooperationProductSpace_C2S::Msg_CooperationProductSpace_C2S(const Msg_CooperationProductSpace_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_CooperationProductSpace_C2S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_CooperationProductSpace_C2S::~Msg_CooperationProductSpace_C2S() {
  SharedDtor();
}

void Msg_CooperationProductSpace_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_CooperationProductSpace_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CooperationProductSpace_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CooperationProductSpace_C2S_descriptor_;
}

const Msg_CooperationProductSpace_C2S& Msg_CooperationProductSpace_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_CooperationProductSpace_C2S* Msg_CooperationProductSpace_C2S::default_instance_ = NULL;

Msg_CooperationProductSpace_C2S* Msg_CooperationProductSpace_C2S::New() const {
  return new Msg_CooperationProductSpace_C2S;
}

void Msg_CooperationProductSpace_C2S::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_CooperationProductSpace_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Msg_CooperationProductSpace_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_CooperationProductSpace_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_CooperationProductSpace_C2S::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CooperationProductSpace_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_CooperationProductSpace_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_CooperationProductSpace_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_CooperationProductSpace_C2S::MergeFrom(const Msg_CooperationProductSpace_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_CooperationProductSpace_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CooperationProductSpace_C2S::CopyFrom(const Msg_CooperationProductSpace_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CooperationProductSpace_C2S::IsInitialized() const {

  return true;
}

void Msg_CooperationProductSpace_C2S::Swap(Msg_CooperationProductSpace_C2S* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_CooperationProductSpace_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CooperationProductSpace_C2S_descriptor_;
  metadata.reflection = Msg_CooperationProductSpace_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Msg_CooperationProductSpace_S2C::kReturnCodeFieldNumber;
const int Msg_CooperationProductSpace_S2C::kProductListFieldNumber;
#endif  // !_MSC_VER

Msg_CooperationProductSpace_S2C::Msg_CooperationProductSpace_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Msg_CooperationProductSpace_S2C::InitAsDefaultInstance() {
}

Msg_CooperationProductSpace_S2C::Msg_CooperationProductSpace_S2C(const Msg_CooperationProductSpace_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Msg_CooperationProductSpace_S2C::SharedCtor() {
  _cached_size_ = 0;
  return_code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Msg_CooperationProductSpace_S2C::~Msg_CooperationProductSpace_S2C() {
  SharedDtor();
}

void Msg_CooperationProductSpace_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_CooperationProductSpace_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CooperationProductSpace_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CooperationProductSpace_S2C_descriptor_;
}

const Msg_CooperationProductSpace_S2C& Msg_CooperationProductSpace_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Msg_CooperationProductSpace_S2C* Msg_CooperationProductSpace_S2C::default_instance_ = NULL;

Msg_CooperationProductSpace_S2C* Msg_CooperationProductSpace_S2C::New() const {
  return new Msg_CooperationProductSpace_S2C;
}

void Msg_CooperationProductSpace_S2C::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    return_code_ = 0u;
  }
  product_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Msg_CooperationProductSpace_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 return_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &return_code_)));
          set_has_return_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Product_list;
        break;
      }

      // repeated .dgame.CooperationProductInfo Product_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Product_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Product_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Msg_CooperationProductSpace_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 return_code = 1;
  if (has_return_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->return_code(), output);
  }

  // repeated .dgame.CooperationProductInfo Product_list = 2;
  for (int i = 0; i < this->product_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->product_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Msg_CooperationProductSpace_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 return_code = 1;
  if (has_return_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->return_code(), target);
  }

  // repeated .dgame.CooperationProductInfo Product_list = 2;
  for (int i = 0; i < this->product_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->product_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Msg_CooperationProductSpace_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 return_code = 1;
    if (has_return_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->return_code());
    }

  }
  // repeated .dgame.CooperationProductInfo Product_list = 2;
  total_size += 1 * this->product_list_size();
  for (int i = 0; i < this->product_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->product_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CooperationProductSpace_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Msg_CooperationProductSpace_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Msg_CooperationProductSpace_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Msg_CooperationProductSpace_S2C::MergeFrom(const Msg_CooperationProductSpace_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  product_list_.MergeFrom(from.product_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_return_code()) {
      set_return_code(from.return_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Msg_CooperationProductSpace_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CooperationProductSpace_S2C::CopyFrom(const Msg_CooperationProductSpace_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CooperationProductSpace_S2C::IsInitialized() const {

  for (int i = 0; i < product_list_size(); i++) {
    if (!this->product_list(i).IsInitialized()) return false;
  }
  return true;
}

void Msg_CooperationProductSpace_S2C::Swap(Msg_CooperationProductSpace_S2C* other) {
  if (other != this) {
    std::swap(return_code_, other->return_code_);
    product_list_.Swap(&other->product_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Msg_CooperationProductSpace_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CooperationProductSpace_S2C_descriptor_;
  metadata.reflection = Msg_CooperationProductSpace_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PayReq::kTypeFieldNumber;
const int PayReq::kIpFieldNumber;
const int PayReq::kSubjectFieldNumber;
const int PayReq::kBodyFieldNumber;
const int PayReq::kTotalFeeFieldNumber;
const int PayReq::kAppenvFieldNumber;
const int PayReq::kOutContextFieldNumber;
const int PayReq::kOrderSnFieldNumber;
#endif  // !_MSC_VER

PayReq::PayReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PayReq::InitAsDefaultInstance() {
}

PayReq::PayReq(const PayReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PayReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totalfee_ = 0u;
  appenv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  outcontext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ordersn_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PayReq::~PayReq() {
  SharedDtor();
}

void PayReq::SharedDtor() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (subject_ != &::google::protobuf::internal::kEmptyString) {
    delete subject_;
  }
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    delete body_;
  }
  if (appenv_ != &::google::protobuf::internal::kEmptyString) {
    delete appenv_;
  }
  if (outcontext_ != &::google::protobuf::internal::kEmptyString) {
    delete outcontext_;
  }
  if (ordersn_ != &::google::protobuf::internal::kEmptyString) {
    delete ordersn_;
  }
  if (this != default_instance_) {
  }
}

void PayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PayReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PayReq_descriptor_;
}

const PayReq& PayReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

PayReq* PayReq::default_instance_ = NULL;

PayReq* PayReq::New() const {
  return new PayReq;
}

void PayReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::kEmptyString) {
        ip_->clear();
      }
    }
    if (has_subject()) {
      if (subject_ != &::google::protobuf::internal::kEmptyString) {
        subject_->clear();
      }
    }
    if (has_body()) {
      if (body_ != &::google::protobuf::internal::kEmptyString) {
        body_->clear();
      }
    }
    totalfee_ = 0u;
    if (has_appenv()) {
      if (appenv_ != &::google::protobuf::internal::kEmptyString) {
        appenv_->clear();
      }
    }
    if (has_outcontext()) {
      if (outcontext_ != &::google::protobuf::internal::kEmptyString) {
        outcontext_->clear();
      }
    }
    if (has_ordersn()) {
      if (ordersn_ != &::google::protobuf::internal::kEmptyString) {
        ordersn_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ip;
        break;
      }

      // optional string ip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_subject;
        break;
      }

      // optional string subject = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->subject().data(), this->subject().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_body;
        break;
      }

      // optional string body = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->body().data(), this->body().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_totalFee;
        break;
      }

      // required uint32 totalFee = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_totalFee:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalfee_)));
          set_has_totalfee();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_appenv;
        break;
      }

      // optional string appenv = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appenv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appenv()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->appenv().data(), this->appenv().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_outContext;
        break;
      }

      // optional string outContext = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_outContext:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outcontext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->outcontext().data(), this->outcontext().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_orderSn;
        break;
      }

      // required string orderSn = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orderSn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordersn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ordersn().data(), this->ordersn().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->ip(), output);
  }

  // optional string subject = 3;
  if (has_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->subject(), output);
  }

  // optional string body = 4;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->body(), output);
  }

  // required uint32 totalFee = 5;
  if (has_totalfee()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->totalfee(), output);
  }

  // optional string appenv = 6;
  if (has_appenv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appenv().data(), this->appenv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->appenv(), output);
  }

  // optional string outContext = 7;
  if (has_outcontext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->outcontext().data(), this->outcontext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->outcontext(), output);
  }

  // required string orderSn = 8;
  if (has_ordersn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordersn().data(), this->ordersn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->ordersn(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PayReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // optional string subject = 3;
  if (has_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subject(), target);
  }

  // optional string body = 4;
  if (has_body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->body().data(), this->body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->body(), target);
  }

  // required uint32 totalFee = 5;
  if (has_totalfee()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->totalfee(), target);
  }

  // optional string appenv = 6;
  if (has_appenv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appenv().data(), this->appenv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->appenv(), target);
  }

  // optional string outContext = 7;
  if (has_outcontext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->outcontext().data(), this->outcontext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->outcontext(), target);
  }

  // required string orderSn = 8;
  if (has_ordersn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ordersn().data(), this->ordersn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->ordersn(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PayReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string subject = 3;
    if (has_subject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subject());
    }

    // optional string body = 4;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body());
    }

    // required uint32 totalFee = 5;
    if (has_totalfee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalfee());
    }

    // optional string appenv = 6;
    if (has_appenv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appenv());
    }

    // optional string outContext = 7;
    if (has_outcontext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->outcontext());
    }

    // required string orderSn = 8;
    if (has_ordersn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ordersn());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PayReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PayReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PayReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PayReq::MergeFrom(const PayReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_subject()) {
      set_subject(from.subject());
    }
    if (from.has_body()) {
      set_body(from.body());
    }
    if (from.has_totalfee()) {
      set_totalfee(from.totalfee());
    }
    if (from.has_appenv()) {
      set_appenv(from.appenv());
    }
    if (from.has_outcontext()) {
      set_outcontext(from.outcontext());
    }
    if (from.has_ordersn()) {
      set_ordersn(from.ordersn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PayReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayReq::CopyFrom(const PayReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000091) != 0x00000091) return false;

  return true;
}

void PayReq::Swap(PayReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(ip_, other->ip_);
    std::swap(subject_, other->subject_);
    std::swap(body_, other->body_);
    std::swap(totalfee_, other->totalfee_);
    std::swap(appenv_, other->appenv_);
    std::swap(outcontext_, other->outcontext_);
    std::swap(ordersn_, other->ordersn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PayReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PayReq_descriptor_;
  metadata.reflection = PayReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PayResp::kDataFieldNumber;
#endif  // !_MSC_VER

PayResp::PayResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PayResp::InitAsDefaultInstance() {
}

PayResp::PayResp(const PayResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PayResp::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PayResp::~PayResp() {
  SharedDtor();
}

void PayResp::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void PayResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PayResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PayResp_descriptor_;
}

const PayResp& PayResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

PayResp* PayResp::default_instance_ = NULL;

PayResp* PayResp::New() const {
  return new PayResp;
}

void PayResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PayResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PayResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PayResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PayResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PayResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PayResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PayResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PayResp::MergeFrom(const PayResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PayResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayResp::CopyFrom(const PayResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PayResp::Swap(PayResp* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PayResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PayResp_descriptor_;
  metadata.reflection = PayResp_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateOrderReq_PayType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateOrderReq_PayType_descriptor_;
}
bool CreateOrderReq_PayType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CreateOrderReq_PayType CreateOrderReq::ZFB;
const CreateOrderReq_PayType CreateOrderReq::WECHAT;
const CreateOrderReq_PayType CreateOrderReq::PayType_MIN;
const CreateOrderReq_PayType CreateOrderReq::PayType_MAX;
const int CreateOrderReq::PayType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CreateOrderReq::kOrderTimeFieldNumber;
const int CreateOrderReq::kActIdFieldNumber;
const int CreateOrderReq::kReceiverNameFieldNumber;
const int CreateOrderReq::kReceiverPhoneFieldNumber;
const int CreateOrderReq::kReceiverAddressFieldNumber;
const int CreateOrderReq::kHasInvoiceFieldNumber;
const int CreateOrderReq::kInvoiceTitleFieldNumber;
const int CreateOrderReq::kInvoiceContentFieldNumber;
const int CreateOrderReq::kPayWayFieldNumber;
const int CreateOrderReq::kGoodsListFieldNumber;
const int CreateOrderReq::kDescFieldNumber;
const int CreateOrderReq::kZipCodeFieldNumber;
#endif  // !_MSC_VER

CreateOrderReq::CreateOrderReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreateOrderReq::InitAsDefaultInstance() {
}

CreateOrderReq::CreateOrderReq(const CreateOrderReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreateOrderReq::SharedCtor() {
  _cached_size_ = 0;
  order_time_ = GOOGLE_LONGLONG(0);
  act_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receiver_phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receiver_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  has_invoice_ = false;
  invoice_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  invoice_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pay_way_ = 1;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  zip_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateOrderReq::~CreateOrderReq() {
  SharedDtor();
}

void CreateOrderReq::SharedDtor() {
  if (act_id_ != &::google::protobuf::internal::kEmptyString) {
    delete act_id_;
  }
  if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_name_;
  }
  if (receiver_phone_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_phone_;
  }
  if (receiver_address_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_address_;
  }
  if (invoice_title_ != &::google::protobuf::internal::kEmptyString) {
    delete invoice_title_;
  }
  if (invoice_content_ != &::google::protobuf::internal::kEmptyString) {
    delete invoice_content_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (zip_code_ != &::google::protobuf::internal::kEmptyString) {
    delete zip_code_;
  }
  if (this != default_instance_) {
  }
}

void CreateOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateOrderReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateOrderReq_descriptor_;
}

const CreateOrderReq& CreateOrderReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

CreateOrderReq* CreateOrderReq::default_instance_ = NULL;

CreateOrderReq* CreateOrderReq::New() const {
  return new CreateOrderReq;
}

void CreateOrderReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    order_time_ = GOOGLE_LONGLONG(0);
    if (has_act_id()) {
      if (act_id_ != &::google::protobuf::internal::kEmptyString) {
        act_id_->clear();
      }
    }
    if (has_receiver_name()) {
      if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
        receiver_name_->clear();
      }
    }
    if (has_receiver_phone()) {
      if (receiver_phone_ != &::google::protobuf::internal::kEmptyString) {
        receiver_phone_->clear();
      }
    }
    if (has_receiver_address()) {
      if (receiver_address_ != &::google::protobuf::internal::kEmptyString) {
        receiver_address_->clear();
      }
    }
    has_invoice_ = false;
    if (has_invoice_title()) {
      if (invoice_title_ != &::google::protobuf::internal::kEmptyString) {
        invoice_title_->clear();
      }
    }
    if (has_invoice_content()) {
      if (invoice_content_ != &::google::protobuf::internal::kEmptyString) {
        invoice_content_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    pay_way_ = 1;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    if (has_zip_code()) {
      if (zip_code_ != &::google::protobuf::internal::kEmptyString) {
        zip_code_->clear();
      }
    }
  }
  goods_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 order_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &order_time_)));
          set_has_order_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_id;
        break;
      }

      // required string act_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_act_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->act_id().data(), this->act_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_receiver_name;
        break;
      }

      // optional string receiver_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_name().data(), this->receiver_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_receiver_phone;
        break;
      }

      // optional string receiver_phone = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_phone().data(), this->receiver_phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_receiver_address;
        break;
      }

      // optional string receiver_address = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_address().data(), this->receiver_address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_has_invoice;
        break;
      }

      // optional bool has_invoice = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_has_invoice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_invoice_)));
          set_has_has_invoice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_invoice_title;
        break;
      }

      // optional string invoice_title = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_invoice_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invoice_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->invoice_title().data(), this->invoice_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_invoice_content;
        break;
      }

      // optional string invoice_content = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_invoice_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invoice_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->invoice_content().data(), this->invoice_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_pay_way;
        break;
      }

      // optional .CS.CreateOrderReq.PayType pay_way = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pay_way:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::CreateOrderReq_PayType_IsValid(value)) {
            set_pay_way(static_cast< ::CS::CreateOrderReq_PayType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_goods_list;
        break;
      }

      // repeated .CS.Goods goods_list = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_goods_list;
        if (input->ExpectTag(90)) goto parse_desc;
        break;
      }

      // optional string desc = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_zip_code;
        break;
      }

      // optional string zip_code = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_zip_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zip_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->zip_code().data(), this->zip_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreateOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 order_time = 1;
  if (has_order_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->order_time(), output);
  }

  // required string act_id = 2;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->act_id().data(), this->act_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->act_id(), output);
  }

  // optional string receiver_name = 3;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->receiver_name(), output);
  }

  // optional string receiver_phone = 4;
  if (has_receiver_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_phone().data(), this->receiver_phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->receiver_phone(), output);
  }

  // optional string receiver_address = 5;
  if (has_receiver_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_address().data(), this->receiver_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->receiver_address(), output);
  }

  // optional bool has_invoice = 6;
  if (has_has_invoice()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->has_invoice(), output);
  }

  // optional string invoice_title = 7;
  if (has_invoice_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invoice_title().data(), this->invoice_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->invoice_title(), output);
  }

  // optional string invoice_content = 8;
  if (has_invoice_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invoice_content().data(), this->invoice_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->invoice_content(), output);
  }

  // optional .CS.CreateOrderReq.PayType pay_way = 9;
  if (has_pay_way()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->pay_way(), output);
  }

  // repeated .CS.Goods goods_list = 10;
  for (int i = 0; i < this->goods_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->goods_list(i), output);
  }

  // optional string desc = 11;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->desc(), output);
  }

  // optional string zip_code = 12;
  if (has_zip_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->zip_code().data(), this->zip_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->zip_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreateOrderReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 order_time = 1;
  if (has_order_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->order_time(), target);
  }

  // required string act_id = 2;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->act_id().data(), this->act_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->act_id(), target);
  }

  // optional string receiver_name = 3;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->receiver_name(), target);
  }

  // optional string receiver_phone = 4;
  if (has_receiver_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_phone().data(), this->receiver_phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->receiver_phone(), target);
  }

  // optional string receiver_address = 5;
  if (has_receiver_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_address().data(), this->receiver_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->receiver_address(), target);
  }

  // optional bool has_invoice = 6;
  if (has_has_invoice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->has_invoice(), target);
  }

  // optional string invoice_title = 7;
  if (has_invoice_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invoice_title().data(), this->invoice_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->invoice_title(), target);
  }

  // optional string invoice_content = 8;
  if (has_invoice_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invoice_content().data(), this->invoice_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->invoice_content(), target);
  }

  // optional .CS.CreateOrderReq.PayType pay_way = 9;
  if (has_pay_way()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->pay_way(), target);
  }

  // repeated .CS.Goods goods_list = 10;
  for (int i = 0; i < this->goods_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->goods_list(i), target);
  }

  // optional string desc = 11;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->desc(), target);
  }

  // optional string zip_code = 12;
  if (has_zip_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->zip_code().data(), this->zip_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->zip_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreateOrderReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 order_time = 1;
    if (has_order_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->order_time());
    }

    // required string act_id = 2;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->act_id());
    }

    // optional string receiver_name = 3;
    if (has_receiver_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_name());
    }

    // optional string receiver_phone = 4;
    if (has_receiver_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_phone());
    }

    // optional string receiver_address = 5;
    if (has_receiver_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_address());
    }

    // optional bool has_invoice = 6;
    if (has_has_invoice()) {
      total_size += 1 + 1;
    }

    // optional string invoice_title = 7;
    if (has_invoice_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invoice_title());
    }

    // optional string invoice_content = 8;
    if (has_invoice_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invoice_content());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .CS.CreateOrderReq.PayType pay_way = 9;
    if (has_pay_way()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pay_way());
    }

    // optional string desc = 11;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional string zip_code = 12;
    if (has_zip_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zip_code());
    }

  }
  // repeated .CS.Goods goods_list = 10;
  total_size += 1 * this->goods_list_size();
  for (int i = 0; i < this->goods_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateOrderReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateOrderReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateOrderReq::MergeFrom(const CreateOrderReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_list_.MergeFrom(from.goods_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_time()) {
      set_order_time(from.order_time());
    }
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_receiver_name()) {
      set_receiver_name(from.receiver_name());
    }
    if (from.has_receiver_phone()) {
      set_receiver_phone(from.receiver_phone());
    }
    if (from.has_receiver_address()) {
      set_receiver_address(from.receiver_address());
    }
    if (from.has_has_invoice()) {
      set_has_invoice(from.has_invoice());
    }
    if (from.has_invoice_title()) {
      set_invoice_title(from.invoice_title());
    }
    if (from.has_invoice_content()) {
      set_invoice_content(from.invoice_content());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pay_way()) {
      set_pay_way(from.pay_way());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_zip_code()) {
      set_zip_code(from.zip_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrderReq::CopyFrom(const CreateOrderReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrderReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void CreateOrderReq::Swap(CreateOrderReq* other) {
  if (other != this) {
    std::swap(order_time_, other->order_time_);
    std::swap(act_id_, other->act_id_);
    std::swap(receiver_name_, other->receiver_name_);
    std::swap(receiver_phone_, other->receiver_phone_);
    std::swap(receiver_address_, other->receiver_address_);
    std::swap(has_invoice_, other->has_invoice_);
    std::swap(invoice_title_, other->invoice_title_);
    std::swap(invoice_content_, other->invoice_content_);
    std::swap(pay_way_, other->pay_way_);
    goods_list_.Swap(&other->goods_list_);
    std::swap(desc_, other->desc_);
    std::swap(zip_code_, other->zip_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateOrderReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateOrderReq_descriptor_;
  metadata.reflection = CreateOrderReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Goods::kNameFieldNumber;
const int Goods::kPriceFieldNumber;
const int Goods::kNumFieldNumber;
const int Goods::kImageUrlFieldNumber;
const int Goods::kProductIdFieldNumber;
const int Goods::kOpusIdFieldNumber;
const int Goods::kWareIdFieldNumber;
const int Goods::kGoodsPartListFieldNumber;
#endif  // !_MSC_VER

Goods::Goods()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Goods::InitAsDefaultInstance() {
}

Goods::Goods(const Goods& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Goods::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  price_ = 0;
  num_ = 0u;
  image_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  opus_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ware_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Goods::~Goods() {
  SharedDtor();
}

void Goods::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (image_url_ != &::google::protobuf::internal::kEmptyString) {
    delete image_url_;
  }
  if (product_id_ != &::google::protobuf::internal::kEmptyString) {
    delete product_id_;
  }
  if (opus_id_ != &::google::protobuf::internal::kEmptyString) {
    delete opus_id_;
  }
  if (ware_id_ != &::google::protobuf::internal::kEmptyString) {
    delete ware_id_;
  }
  if (this != default_instance_) {
  }
}

void Goods::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Goods::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Goods_descriptor_;
}

const Goods& Goods::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Goods* Goods::default_instance_ = NULL;

Goods* Goods::New() const {
  return new Goods;
}

void Goods::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    price_ = 0;
    num_ = 0u;
    if (has_image_url()) {
      if (image_url_ != &::google::protobuf::internal::kEmptyString) {
        image_url_->clear();
      }
    }
    if (has_product_id()) {
      if (product_id_ != &::google::protobuf::internal::kEmptyString) {
        product_id_->clear();
      }
    }
    if (has_opus_id()) {
      if (opus_id_ != &::google::protobuf::internal::kEmptyString) {
        opus_id_->clear();
      }
    }
    if (has_ware_id()) {
      if (ware_id_ != &::google::protobuf::internal::kEmptyString) {
        ware_id_->clear();
      }
    }
  }
  goods_part_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Goods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_price;
        break;
      }

      // optional float price = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // optional uint32 num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_image_url;
        break;
      }

      // optional string image_url = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_image_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->image_url().data(), this->image_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_product_id;
        break;
      }

      // optional string product_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->product_id().data(), this->product_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_opus_id;
        break;
      }

      // optional string opus_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_opus_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opus_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->opus_id().data(), this->opus_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_ware_id;
        break;
      }

      // optional string ware_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ware_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ware_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ware_id().data(), this->ware_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_goods_part_list;
        break;
      }

      // repeated .CS.GoodsPart goods_part_list = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_part_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_part_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_goods_part_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Goods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional float price = 2;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->price(), output);
  }

  // optional uint32 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  // optional string image_url = 4;
  if (has_image_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_url().data(), this->image_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->image_url(), output);
  }

  // optional string product_id = 5;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->product_id(), output);
  }

  // optional string opus_id = 6;
  if (has_opus_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opus_id().data(), this->opus_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->opus_id(), output);
  }

  // optional string ware_id = 7;
  if (has_ware_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ware_id().data(), this->ware_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->ware_id(), output);
  }

  // repeated .CS.GoodsPart goods_part_list = 8;
  for (int i = 0; i < this->goods_part_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->goods_part_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Goods::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float price = 2;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->price(), target);
  }

  // optional uint32 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  // optional string image_url = 4;
  if (has_image_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_url().data(), this->image_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->image_url(), target);
  }

  // optional string product_id = 5;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->product_id(), target);
  }

  // optional string opus_id = 6;
  if (has_opus_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opus_id().data(), this->opus_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->opus_id(), target);
  }

  // optional string ware_id = 7;
  if (has_ware_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ware_id().data(), this->ware_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ware_id(), target);
  }

  // repeated .CS.GoodsPart goods_part_list = 8;
  for (int i = 0; i < this->goods_part_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->goods_part_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Goods::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional float price = 2;
    if (has_price()) {
      total_size += 1 + 4;
    }

    // optional uint32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional string image_url = 4;
    if (has_image_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_url());
    }

    // optional string product_id = 5;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

    // optional string opus_id = 6;
    if (has_opus_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->opus_id());
    }

    // optional string ware_id = 7;
    if (has_ware_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ware_id());
    }

  }
  // repeated .CS.GoodsPart goods_part_list = 8;
  total_size += 1 * this->goods_part_list_size();
  for (int i = 0; i < this->goods_part_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_part_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Goods::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Goods* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Goods*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Goods::MergeFrom(const Goods& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_part_list_.MergeFrom(from.goods_part_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_image_url()) {
      set_image_url(from.image_url());
    }
    if (from.has_product_id()) {
      set_product_id(from.product_id());
    }
    if (from.has_opus_id()) {
      set_opus_id(from.opus_id());
    }
    if (from.has_ware_id()) {
      set_ware_id(from.ware_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Goods::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Goods::CopyFrom(const Goods& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Goods::IsInitialized() const {

  return true;
}

void Goods::Swap(Goods* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(price_, other->price_);
    std::swap(num_, other->num_);
    std::swap(image_url_, other->image_url_);
    std::swap(product_id_, other->product_id_);
    std::swap(opus_id_, other->opus_id_);
    std::swap(ware_id_, other->ware_id_);
    goods_part_list_.Swap(&other->goods_part_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Goods::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Goods_descriptor_;
  metadata.reflection = Goods_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GoodsPart::kPartIdFieldNumber;
const int GoodsPart::kMatIdFieldNumber;
#endif  // !_MSC_VER

GoodsPart::GoodsPart()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GoodsPart::InitAsDefaultInstance() {
}

GoodsPart::GoodsPart(const GoodsPart& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GoodsPart::SharedCtor() {
  _cached_size_ = 0;
  part_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mat_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GoodsPart::~GoodsPart() {
  SharedDtor();
}

void GoodsPart::SharedDtor() {
  if (part_id_ != &::google::protobuf::internal::kEmptyString) {
    delete part_id_;
  }
  if (mat_id_ != &::google::protobuf::internal::kEmptyString) {
    delete mat_id_;
  }
  if (this != default_instance_) {
  }
}

void GoodsPart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsPart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsPart_descriptor_;
}

const GoodsPart& GoodsPart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

GoodsPart* GoodsPart::default_instance_ = NULL;

GoodsPart* GoodsPart::New() const {
  return new GoodsPart;
}

void GoodsPart::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_part_id()) {
      if (part_id_ != &::google::protobuf::internal::kEmptyString) {
        part_id_->clear();
      }
    }
    if (has_mat_id()) {
      if (mat_id_ != &::google::protobuf::internal::kEmptyString) {
        mat_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GoodsPart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string part_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_part_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->part_id().data(), this->part_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mat_id;
        break;
      }

      // optional string mat_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mat_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mat_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mat_id().data(), this->mat_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GoodsPart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string part_id = 1;
  if (has_part_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->part_id().data(), this->part_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->part_id(), output);
  }

  // optional string mat_id = 2;
  if (has_mat_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mat_id().data(), this->mat_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->mat_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GoodsPart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string part_id = 1;
  if (has_part_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->part_id().data(), this->part_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->part_id(), target);
  }

  // optional string mat_id = 2;
  if (has_mat_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mat_id().data(), this->mat_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mat_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GoodsPart::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string part_id = 1;
    if (has_part_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->part_id());
    }

    // optional string mat_id = 2;
    if (has_mat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mat_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsPart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GoodsPart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GoodsPart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsPart::MergeFrom(const GoodsPart& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_part_id()) {
      set_part_id(from.part_id());
    }
    if (from.has_mat_id()) {
      set_mat_id(from.mat_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GoodsPart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsPart::CopyFrom(const GoodsPart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsPart::IsInitialized() const {

  return true;
}

void GoodsPart::Swap(GoodsPart* other) {
  if (other != this) {
    std::swap(part_id_, other->part_id_);
    std::swap(mat_id_, other->mat_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GoodsPart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsPart_descriptor_;
  metadata.reflection = GoodsPart_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateOrderRes::kOrderCodeFieldNumber;
#endif  // !_MSC_VER

CreateOrderRes::CreateOrderRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreateOrderRes::InitAsDefaultInstance() {
}

CreateOrderRes::CreateOrderRes(const CreateOrderRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreateOrderRes::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateOrderRes::~CreateOrderRes() {
  SharedDtor();
}

void CreateOrderRes::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void CreateOrderRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateOrderRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateOrderRes_descriptor_;
}

const CreateOrderRes& CreateOrderRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

CreateOrderRes* CreateOrderRes::default_instance_ = NULL;

CreateOrderRes* CreateOrderRes::New() const {
  return new CreateOrderRes;
}

void CreateOrderRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateOrderRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreateOrderRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreateOrderRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreateOrderRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateOrderRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateOrderRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateOrderRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateOrderRes::MergeFrom(const CreateOrderRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateOrderRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrderRes::CopyFrom(const CreateOrderRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrderRes::IsInitialized() const {

  return true;
}

void CreateOrderRes::Swap(CreateOrderRes* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateOrderRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateOrderRes_descriptor_;
  metadata.reflection = CreateOrderRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GoodsProductStatusReq::kGoodsIdFieldNumber;
#endif  // !_MSC_VER

GoodsProductStatusReq::GoodsProductStatusReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GoodsProductStatusReq::InitAsDefaultInstance() {
}

GoodsProductStatusReq::GoodsProductStatusReq(const GoodsProductStatusReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GoodsProductStatusReq::SharedCtor() {
  _cached_size_ = 0;
  goods_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GoodsProductStatusReq::~GoodsProductStatusReq() {
  SharedDtor();
}

void GoodsProductStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GoodsProductStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsProductStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsProductStatusReq_descriptor_;
}

const GoodsProductStatusReq& GoodsProductStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

GoodsProductStatusReq* GoodsProductStatusReq::default_instance_ = NULL;

GoodsProductStatusReq* GoodsProductStatusReq::New() const {
  return new GoodsProductStatusReq;
}

void GoodsProductStatusReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    goods_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GoodsProductStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 goods_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goods_id_)));
          set_has_goods_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GoodsProductStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 goods_id = 1;
  if (has_goods_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goods_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GoodsProductStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 goods_id = 1;
  if (has_goods_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goods_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GoodsProductStatusReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 goods_id = 1;
    if (has_goods_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goods_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsProductStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GoodsProductStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GoodsProductStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsProductStatusReq::MergeFrom(const GoodsProductStatusReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods_id()) {
      set_goods_id(from.goods_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GoodsProductStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsProductStatusReq::CopyFrom(const GoodsProductStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsProductStatusReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GoodsProductStatusReq::Swap(GoodsProductStatusReq* other) {
  if (other != this) {
    std::swap(goods_id_, other->goods_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GoodsProductStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsProductStatusReq_descriptor_;
  metadata.reflection = GoodsProductStatusReq_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GoodsProductStatusRes_ProductStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsProductStatusRes_ProductStatus_descriptor_;
}
bool GoodsProductStatusRes_ProductStatus_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::WAIT_PRODUCTION;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::PRODUCTING;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::WIRING;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::PEND;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::STAMPING;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::CHECK;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::INBOUND;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::ProductStatus_MIN;
const GoodsProductStatusRes_ProductStatus GoodsProductStatusRes::ProductStatus_MAX;
const int GoodsProductStatusRes::ProductStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GoodsProductStatusRes::kGoodsNameFieldNumber;
const int GoodsProductStatusRes::kGoodsStatusFieldNumber;
#endif  // !_MSC_VER

GoodsProductStatusRes::GoodsProductStatusRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GoodsProductStatusRes::InitAsDefaultInstance() {
}

GoodsProductStatusRes::GoodsProductStatusRes(const GoodsProductStatusRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GoodsProductStatusRes::SharedCtor() {
  _cached_size_ = 0;
  goods_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  goods_status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GoodsProductStatusRes::~GoodsProductStatusRes() {
  SharedDtor();
}

void GoodsProductStatusRes::SharedDtor() {
  if (goods_name_ != &::google::protobuf::internal::kEmptyString) {
    delete goods_name_;
  }
  if (this != default_instance_) {
  }
}

void GoodsProductStatusRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsProductStatusRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsProductStatusRes_descriptor_;
}

const GoodsProductStatusRes& GoodsProductStatusRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

GoodsProductStatusRes* GoodsProductStatusRes::default_instance_ = NULL;

GoodsProductStatusRes* GoodsProductStatusRes::New() const {
  return new GoodsProductStatusRes;
}

void GoodsProductStatusRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods_name()) {
      if (goods_name_ != &::google::protobuf::internal::kEmptyString) {
        goods_name_->clear();
      }
    }
    goods_status_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GoodsProductStatusRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string goods_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goods_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->goods_name().data(), this->goods_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_goods_status;
        break;
      }

      // optional .CS.GoodsProductStatusRes.ProductStatus goods_status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goods_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::GoodsProductStatusRes_ProductStatus_IsValid(value)) {
            set_goods_status(static_cast< ::CS::GoodsProductStatusRes_ProductStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GoodsProductStatusRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string goods_name = 1;
  if (has_goods_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->goods_name().data(), this->goods_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->goods_name(), output);
  }

  // optional .CS.GoodsProductStatusRes.ProductStatus goods_status = 2;
  if (has_goods_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->goods_status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GoodsProductStatusRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string goods_name = 1;
  if (has_goods_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->goods_name().data(), this->goods_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->goods_name(), target);
  }

  // optional .CS.GoodsProductStatusRes.ProductStatus goods_status = 2;
  if (has_goods_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->goods_status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GoodsProductStatusRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string goods_name = 1;
    if (has_goods_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->goods_name());
    }

    // optional .CS.GoodsProductStatusRes.ProductStatus goods_status = 2;
    if (has_goods_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->goods_status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsProductStatusRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GoodsProductStatusRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GoodsProductStatusRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsProductStatusRes::MergeFrom(const GoodsProductStatusRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods_name()) {
      set_goods_name(from.goods_name());
    }
    if (from.has_goods_status()) {
      set_goods_status(from.goods_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GoodsProductStatusRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsProductStatusRes::CopyFrom(const GoodsProductStatusRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsProductStatusRes::IsInitialized() const {

  return true;
}

void GoodsProductStatusRes::Swap(GoodsProductStatusRes* other) {
  if (other != this) {
    std::swap(goods_name_, other->goods_name_);
    std::swap(goods_status_, other->goods_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GoodsProductStatusRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsProductStatusRes_descriptor_;
  metadata.reflection = GoodsProductStatusRes_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ChooseOrderPayWayReq_PayType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChooseOrderPayWayReq_PayType_descriptor_;
}
bool ChooseOrderPayWayReq_PayType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ChooseOrderPayWayReq_PayType ChooseOrderPayWayReq::ZFB;
const ChooseOrderPayWayReq_PayType ChooseOrderPayWayReq::WECHAT;
const ChooseOrderPayWayReq_PayType ChooseOrderPayWayReq::PayType_MIN;
const ChooseOrderPayWayReq_PayType ChooseOrderPayWayReq::PayType_MAX;
const int ChooseOrderPayWayReq::PayType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ChooseOrderPayWayReq::kOrderCodeFieldNumber;
const int ChooseOrderPayWayReq::kPayWayFieldNumber;
#endif  // !_MSC_VER

ChooseOrderPayWayReq::ChooseOrderPayWayReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChooseOrderPayWayReq::InitAsDefaultInstance() {
}

ChooseOrderPayWayReq::ChooseOrderPayWayReq(const ChooseOrderPayWayReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChooseOrderPayWayReq::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pay_way_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChooseOrderPayWayReq::~ChooseOrderPayWayReq() {
  SharedDtor();
}

void ChooseOrderPayWayReq::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void ChooseOrderPayWayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChooseOrderPayWayReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChooseOrderPayWayReq_descriptor_;
}

const ChooseOrderPayWayReq& ChooseOrderPayWayReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

ChooseOrderPayWayReq* ChooseOrderPayWayReq::default_instance_ = NULL;

ChooseOrderPayWayReq* ChooseOrderPayWayReq::New() const {
  return new ChooseOrderPayWayReq;
}

void ChooseOrderPayWayReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    pay_way_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChooseOrderPayWayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pay_way;
        break;
      }

      // optional .CS.ChooseOrderPayWayReq.PayType pay_way = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pay_way:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::ChooseOrderPayWayReq_PayType_IsValid(value)) {
            set_pay_way(static_cast< ::CS::ChooseOrderPayWayReq_PayType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChooseOrderPayWayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional .CS.ChooseOrderPayWayReq.PayType pay_way = 2;
  if (has_pay_way()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pay_way(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChooseOrderPayWayReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional .CS.ChooseOrderPayWayReq.PayType pay_way = 2;
  if (has_pay_way()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pay_way(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChooseOrderPayWayReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional .CS.ChooseOrderPayWayReq.PayType pay_way = 2;
    if (has_pay_way()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pay_way());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChooseOrderPayWayReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChooseOrderPayWayReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChooseOrderPayWayReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChooseOrderPayWayReq::MergeFrom(const ChooseOrderPayWayReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_pay_way()) {
      set_pay_way(from.pay_way());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChooseOrderPayWayReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChooseOrderPayWayReq::CopyFrom(const ChooseOrderPayWayReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChooseOrderPayWayReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ChooseOrderPayWayReq::Swap(ChooseOrderPayWayReq* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(pay_way_, other->pay_way_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChooseOrderPayWayReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChooseOrderPayWayReq_descriptor_;
  metadata.reflection = ChooseOrderPayWayReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChooseOrderPayWayRes::kOrderCodeFieldNumber;
#endif  // !_MSC_VER

ChooseOrderPayWayRes::ChooseOrderPayWayRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChooseOrderPayWayRes::InitAsDefaultInstance() {
}

ChooseOrderPayWayRes::ChooseOrderPayWayRes(const ChooseOrderPayWayRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChooseOrderPayWayRes::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChooseOrderPayWayRes::~ChooseOrderPayWayRes() {
  SharedDtor();
}

void ChooseOrderPayWayRes::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void ChooseOrderPayWayRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChooseOrderPayWayRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChooseOrderPayWayRes_descriptor_;
}

const ChooseOrderPayWayRes& ChooseOrderPayWayRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

ChooseOrderPayWayRes* ChooseOrderPayWayRes::default_instance_ = NULL;

ChooseOrderPayWayRes* ChooseOrderPayWayRes::New() const {
  return new ChooseOrderPayWayRes;
}

void ChooseOrderPayWayRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChooseOrderPayWayRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChooseOrderPayWayRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChooseOrderPayWayRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChooseOrderPayWayRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChooseOrderPayWayRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChooseOrderPayWayRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChooseOrderPayWayRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChooseOrderPayWayRes::MergeFrom(const ChooseOrderPayWayRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChooseOrderPayWayRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChooseOrderPayWayRes::CopyFrom(const ChooseOrderPayWayRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChooseOrderPayWayRes::IsInitialized() const {

  return true;
}

void ChooseOrderPayWayRes::Swap(ChooseOrderPayWayRes* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChooseOrderPayWayRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChooseOrderPayWayRes_descriptor_;
  metadata.reflection = ChooseOrderPayWayRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteOrderReq::kOrderCodeFieldNumber;
#endif  // !_MSC_VER

DeleteOrderReq::DeleteOrderReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DeleteOrderReq::InitAsDefaultInstance() {
}

DeleteOrderReq::DeleteOrderReq(const DeleteOrderReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DeleteOrderReq::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteOrderReq::~DeleteOrderReq() {
  SharedDtor();
}

void DeleteOrderReq::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void DeleteOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteOrderReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteOrderReq_descriptor_;
}

const DeleteOrderReq& DeleteOrderReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

DeleteOrderReq* DeleteOrderReq::default_instance_ = NULL;

DeleteOrderReq* DeleteOrderReq::New() const {
  return new DeleteOrderReq;
}

void DeleteOrderReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DeleteOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DeleteOrderReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DeleteOrderReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteOrderReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteOrderReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteOrderReq::MergeFrom(const DeleteOrderReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrderReq::CopyFrom(const DeleteOrderReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrderReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DeleteOrderReq::Swap(DeleteOrderReq* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteOrderReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteOrderReq_descriptor_;
  metadata.reflection = DeleteOrderReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteOrderRes::kOrderCodeFieldNumber;
const int DeleteOrderRes::kResultFieldNumber;
#endif  // !_MSC_VER

DeleteOrderRes::DeleteOrderRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DeleteOrderRes::InitAsDefaultInstance() {
}

DeleteOrderRes::DeleteOrderRes(const DeleteOrderRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DeleteOrderRes::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteOrderRes::~DeleteOrderRes() {
  SharedDtor();
}

void DeleteOrderRes::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void DeleteOrderRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteOrderRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteOrderRes_descriptor_;
}

const DeleteOrderRes& DeleteOrderRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

DeleteOrderRes* DeleteOrderRes::default_instance_ = NULL;

DeleteOrderRes* DeleteOrderRes::New() const {
  return new DeleteOrderRes;
}

void DeleteOrderRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteOrderRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .CS.OrderCmdResult result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::OrderCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::OrderCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DeleteOrderRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DeleteOrderRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DeleteOrderRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional .CS.OrderCmdResult result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteOrderRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteOrderRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteOrderRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteOrderRes::MergeFrom(const DeleteOrderRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteOrderRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrderRes::CopyFrom(const DeleteOrderRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrderRes::IsInitialized() const {

  return true;
}

void DeleteOrderRes::Swap(DeleteOrderRes* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteOrderRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteOrderRes_descriptor_;
  metadata.reflection = DeleteOrderRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CancelOrderReq::kOrderCodeFieldNumber;
const int CancelOrderReq::kCancelReasonFieldNumber;
#endif  // !_MSC_VER

CancelOrderReq::CancelOrderReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CancelOrderReq::InitAsDefaultInstance() {
}

CancelOrderReq::CancelOrderReq(const CancelOrderReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CancelOrderReq::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cancel_reason_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CancelOrderReq::~CancelOrderReq() {
  SharedDtor();
}

void CancelOrderReq::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void CancelOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelOrderReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelOrderReq_descriptor_;
}

const CancelOrderReq& CancelOrderReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

CancelOrderReq* CancelOrderReq::default_instance_ = NULL;

CancelOrderReq* CancelOrderReq::New() const {
  return new CancelOrderReq;
}

void CancelOrderReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    cancel_reason_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CancelOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cancel_reason;
        break;
      }

      // optional .dgame.OrderCancelReason cancel_reason = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cancel_reason:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dgame::OrderCancelReason_IsValid(value)) {
            set_cancel_reason(static_cast< ::dgame::OrderCancelReason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CancelOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional .dgame.OrderCancelReason cancel_reason = 2;
  if (has_cancel_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cancel_reason(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CancelOrderReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional .dgame.OrderCancelReason cancel_reason = 2;
  if (has_cancel_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cancel_reason(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CancelOrderReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional .dgame.OrderCancelReason cancel_reason = 2;
    if (has_cancel_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cancel_reason());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CancelOrderReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CancelOrderReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CancelOrderReq::MergeFrom(const CancelOrderReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_cancel_reason()) {
      set_cancel_reason(from.cancel_reason());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CancelOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOrderReq::CopyFrom(const CancelOrderReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOrderReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CancelOrderReq::Swap(CancelOrderReq* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(cancel_reason_, other->cancel_reason_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CancelOrderReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CancelOrderReq_descriptor_;
  metadata.reflection = CancelOrderReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CancelOrderRes::kOrderCodeFieldNumber;
const int CancelOrderRes::kResultFieldNumber;
#endif  // !_MSC_VER

CancelOrderRes::CancelOrderRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CancelOrderRes::InitAsDefaultInstance() {
}

CancelOrderRes::CancelOrderRes(const CancelOrderRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CancelOrderRes::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CancelOrderRes::~CancelOrderRes() {
  SharedDtor();
}

void CancelOrderRes::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void CancelOrderRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelOrderRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelOrderRes_descriptor_;
}

const CancelOrderRes& CancelOrderRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

CancelOrderRes* CancelOrderRes::default_instance_ = NULL;

CancelOrderRes* CancelOrderRes::New() const {
  return new CancelOrderRes;
}

void CancelOrderRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CancelOrderRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .CS.OrderCmdResult result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::OrderCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::OrderCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CancelOrderRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CancelOrderRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CancelOrderRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional .CS.OrderCmdResult result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelOrderRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CancelOrderRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CancelOrderRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CancelOrderRes::MergeFrom(const CancelOrderRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CancelOrderRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOrderRes::CopyFrom(const CancelOrderRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOrderRes::IsInitialized() const {

  return true;
}

void CancelOrderRes::Swap(CancelOrderRes* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CancelOrderRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CancelOrderRes_descriptor_;
  metadata.reflection = CancelOrderRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConfirmGrOrderReq::kOrderCodeFieldNumber;
#endif  // !_MSC_VER

ConfirmGrOrderReq::ConfirmGrOrderReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ConfirmGrOrderReq::InitAsDefaultInstance() {
}

ConfirmGrOrderReq::ConfirmGrOrderReq(const ConfirmGrOrderReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ConfirmGrOrderReq::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfirmGrOrderReq::~ConfirmGrOrderReq() {
  SharedDtor();
}

void ConfirmGrOrderReq::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void ConfirmGrOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmGrOrderReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfirmGrOrderReq_descriptor_;
}

const ConfirmGrOrderReq& ConfirmGrOrderReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

ConfirmGrOrderReq* ConfirmGrOrderReq::default_instance_ = NULL;

ConfirmGrOrderReq* ConfirmGrOrderReq::New() const {
  return new ConfirmGrOrderReq;
}

void ConfirmGrOrderReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConfirmGrOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ConfirmGrOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ConfirmGrOrderReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ConfirmGrOrderReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmGrOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConfirmGrOrderReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConfirmGrOrderReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfirmGrOrderReq::MergeFrom(const ConfirmGrOrderReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConfirmGrOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmGrOrderReq::CopyFrom(const ConfirmGrOrderReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmGrOrderReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ConfirmGrOrderReq::Swap(ConfirmGrOrderReq* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConfirmGrOrderReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfirmGrOrderReq_descriptor_;
  metadata.reflection = ConfirmGrOrderReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConfirmGrOrderRes::kOrderCodeFieldNumber;
const int ConfirmGrOrderRes::kResultFieldNumber;
#endif  // !_MSC_VER

ConfirmGrOrderRes::ConfirmGrOrderRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ConfirmGrOrderRes::InitAsDefaultInstance() {
}

ConfirmGrOrderRes::ConfirmGrOrderRes(const ConfirmGrOrderRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ConfirmGrOrderRes::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfirmGrOrderRes::~ConfirmGrOrderRes() {
  SharedDtor();
}

void ConfirmGrOrderRes::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void ConfirmGrOrderRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmGrOrderRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfirmGrOrderRes_descriptor_;
}

const ConfirmGrOrderRes& ConfirmGrOrderRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

ConfirmGrOrderRes* ConfirmGrOrderRes::default_instance_ = NULL;

ConfirmGrOrderRes* ConfirmGrOrderRes::New() const {
  return new ConfirmGrOrderRes;
}

void ConfirmGrOrderRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConfirmGrOrderRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .CS.OrderCmdResult result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::OrderCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::OrderCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ConfirmGrOrderRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ConfirmGrOrderRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ConfirmGrOrderRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional .CS.OrderCmdResult result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmGrOrderRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConfirmGrOrderRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConfirmGrOrderRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfirmGrOrderRes::MergeFrom(const ConfirmGrOrderRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConfirmGrOrderRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmGrOrderRes::CopyFrom(const ConfirmGrOrderRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmGrOrderRes::IsInitialized() const {

  return true;
}

void ConfirmGrOrderRes::Swap(ConfirmGrOrderRes* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConfirmGrOrderRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfirmGrOrderRes_descriptor_;
  metadata.reflection = ConfirmGrOrderRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JudgeOrderReq::kOrderCodeFieldNumber;
const int JudgeOrderReq::kJudgeTimeFieldNumber;
const int JudgeOrderReq::kGoodsJudgeListFieldNumber;
#endif  // !_MSC_VER

JudgeOrderReq::JudgeOrderReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JudgeOrderReq::InitAsDefaultInstance() {
}

JudgeOrderReq::JudgeOrderReq(const JudgeOrderReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JudgeOrderReq::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  judge_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JudgeOrderReq::~JudgeOrderReq() {
  SharedDtor();
}

void JudgeOrderReq::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void JudgeOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JudgeOrderReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JudgeOrderReq_descriptor_;
}

const JudgeOrderReq& JudgeOrderReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

JudgeOrderReq* JudgeOrderReq::default_instance_ = NULL;

JudgeOrderReq* JudgeOrderReq::New() const {
  return new JudgeOrderReq;
}

void JudgeOrderReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    judge_time_ = GOOGLE_LONGLONG(0);
  }
  goods_judge_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JudgeOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_judge_time;
        break;
      }

      // optional int64 judge_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_judge_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &judge_time_)));
          set_has_judge_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_judge_list;
        break;
      }

      // repeated .CS.GoodsJudge goods_judge_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_judge_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_judge_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_judge_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JudgeOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional int64 judge_time = 2;
  if (has_judge_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->judge_time(), output);
  }

  // repeated .CS.GoodsJudge goods_judge_list = 3;
  for (int i = 0; i < this->goods_judge_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->goods_judge_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JudgeOrderReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional int64 judge_time = 2;
  if (has_judge_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->judge_time(), target);
  }

  // repeated .CS.GoodsJudge goods_judge_list = 3;
  for (int i = 0; i < this->goods_judge_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->goods_judge_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JudgeOrderReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional int64 judge_time = 2;
    if (has_judge_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->judge_time());
    }

  }
  // repeated .CS.GoodsJudge goods_judge_list = 3;
  total_size += 1 * this->goods_judge_list_size();
  for (int i = 0; i < this->goods_judge_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_judge_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JudgeOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JudgeOrderReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JudgeOrderReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JudgeOrderReq::MergeFrom(const JudgeOrderReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_judge_list_.MergeFrom(from.goods_judge_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_judge_time()) {
      set_judge_time(from.judge_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JudgeOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JudgeOrderReq::CopyFrom(const JudgeOrderReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JudgeOrderReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < goods_judge_list_size(); i++) {
    if (!this->goods_judge_list(i).IsInitialized()) return false;
  }
  return true;
}

void JudgeOrderReq::Swap(JudgeOrderReq* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(judge_time_, other->judge_time_);
    goods_judge_list_.Swap(&other->goods_judge_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JudgeOrderReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JudgeOrderReq_descriptor_;
  metadata.reflection = JudgeOrderReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JudgeOrderRes::kOrderCodeFieldNumber;
const int JudgeOrderRes::kResultFieldNumber;
#endif  // !_MSC_VER

JudgeOrderRes::JudgeOrderRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JudgeOrderRes::InitAsDefaultInstance() {
}

JudgeOrderRes::JudgeOrderRes(const JudgeOrderRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JudgeOrderRes::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JudgeOrderRes::~JudgeOrderRes() {
  SharedDtor();
}

void JudgeOrderRes::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void JudgeOrderRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JudgeOrderRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JudgeOrderRes_descriptor_;
}

const JudgeOrderRes& JudgeOrderRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

JudgeOrderRes* JudgeOrderRes::default_instance_ = NULL;

JudgeOrderRes* JudgeOrderRes::New() const {
  return new JudgeOrderRes;
}

void JudgeOrderRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JudgeOrderRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .CS.OrderCmdResult result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::OrderCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::OrderCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JudgeOrderRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JudgeOrderRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JudgeOrderRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional .CS.OrderCmdResult result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JudgeOrderRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JudgeOrderRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JudgeOrderRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JudgeOrderRes::MergeFrom(const JudgeOrderRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JudgeOrderRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JudgeOrderRes::CopyFrom(const JudgeOrderRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JudgeOrderRes::IsInitialized() const {

  return true;
}

void JudgeOrderRes::Swap(JudgeOrderRes* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JudgeOrderRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JudgeOrderRes_descriptor_;
  metadata.reflection = JudgeOrderRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GoodsJudge::kContentFieldNumber;
const int GoodsJudge::kJudgeTimeFieldNumber;
const int GoodsJudge::kLevelFieldNumber;
const int GoodsJudge::kGoodsIdFieldNumber;
#endif  // !_MSC_VER

GoodsJudge::GoodsJudge()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GoodsJudge::InitAsDefaultInstance() {
}

GoodsJudge::GoodsJudge(const GoodsJudge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GoodsJudge::SharedCtor() {
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  judge_time_ = GOOGLE_LONGLONG(0);
  level_ = 0;
  goods_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GoodsJudge::~GoodsJudge() {
  SharedDtor();
}

void GoodsJudge::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (goods_id_ != &::google::protobuf::internal::kEmptyString) {
    delete goods_id_;
  }
  if (this != default_instance_) {
  }
}

void GoodsJudge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsJudge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoodsJudge_descriptor_;
}

const GoodsJudge& GoodsJudge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

GoodsJudge* GoodsJudge::default_instance_ = NULL;

GoodsJudge* GoodsJudge::New() const {
  return new GoodsJudge;
}

void GoodsJudge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    judge_time_ = GOOGLE_LONGLONG(0);
    level_ = 0;
    if (has_goods_id()) {
      if (goods_id_ != &::google::protobuf::internal::kEmptyString) {
        goods_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GoodsJudge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_judge_time;
        break;
      }

      // optional int64 judge_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_judge_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &judge_time_)));
          set_has_judge_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_goods_id;
        break;
      }

      // required string goods_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goods_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->goods_id().data(), this->goods_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GoodsJudge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(), output);
  }

  // optional int64 judge_time = 2;
  if (has_judge_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->judge_time(), output);
  }

  // optional int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required string goods_id = 4;
  if (has_goods_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->goods_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GoodsJudge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // optional int64 judge_time = 2;
  if (has_judge_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->judge_time(), target);
  }

  // optional int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required string goods_id = 4;
  if (has_goods_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->goods_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GoodsJudge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional int64 judge_time = 2;
    if (has_judge_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->judge_time());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required string goods_id = 4;
    if (has_goods_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->goods_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsJudge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GoodsJudge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GoodsJudge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GoodsJudge::MergeFrom(const GoodsJudge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_judge_time()) {
      set_judge_time(from.judge_time());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_goods_id()) {
      set_goods_id(from.goods_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GoodsJudge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsJudge::CopyFrom(const GoodsJudge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsJudge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;

  return true;
}

void GoodsJudge::Swap(GoodsJudge* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(judge_time_, other->judge_time_);
    std::swap(level_, other->level_);
    std::swap(goods_id_, other->goods_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GoodsJudge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoodsJudge_descriptor_;
  metadata.reflection = GoodsJudge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DelayOrderReq::kOrderCodeFieldNumber;
const int DelayOrderReq::kReasonFieldNumber;
#endif  // !_MSC_VER

DelayOrderReq::DelayOrderReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DelayOrderReq::InitAsDefaultInstance() {
}

DelayOrderReq::DelayOrderReq(const DelayOrderReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DelayOrderReq::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DelayOrderReq::~DelayOrderReq() {
  SharedDtor();
}

void DelayOrderReq::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (reason_ != &::google::protobuf::internal::kEmptyString) {
    delete reason_;
  }
  if (this != default_instance_) {
  }
}

void DelayOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelayOrderReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DelayOrderReq_descriptor_;
}

const DelayOrderReq& DelayOrderReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

DelayOrderReq* DelayOrderReq::default_instance_ = NULL;

DelayOrderReq* DelayOrderReq::New() const {
  return new DelayOrderReq;
}

void DelayOrderReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    if (has_reason()) {
      if (reason_ != &::google::protobuf::internal::kEmptyString) {
        reason_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DelayOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reason;
        break;
      }

      // optional string reason = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DelayOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional string reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->reason(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DelayOrderReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional string reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DelayOrderReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional string reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelayOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DelayOrderReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DelayOrderReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DelayOrderReq::MergeFrom(const DelayOrderReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_reason()) {
      set_reason(from.reason());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DelayOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelayOrderReq::CopyFrom(const DelayOrderReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelayOrderReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DelayOrderReq::Swap(DelayOrderReq* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(reason_, other->reason_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DelayOrderReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DelayOrderReq_descriptor_;
  metadata.reflection = DelayOrderReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DelayOrderRes::kOrderCodeFieldNumber;
const int DelayOrderRes::kResultFieldNumber;
#endif  // !_MSC_VER

DelayOrderRes::DelayOrderRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DelayOrderRes::InitAsDefaultInstance() {
}

DelayOrderRes::DelayOrderRes(const DelayOrderRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DelayOrderRes::SharedCtor() {
  _cached_size_ = 0;
  order_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DelayOrderRes::~DelayOrderRes() {
  SharedDtor();
}

void DelayOrderRes::SharedDtor() {
  if (order_code_ != &::google::protobuf::internal::kEmptyString) {
    delete order_code_;
  }
  if (this != default_instance_) {
  }
}

void DelayOrderRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelayOrderRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DelayOrderRes_descriptor_;
}

const DelayOrderRes& DelayOrderRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

DelayOrderRes* DelayOrderRes::default_instance_ = NULL;

DelayOrderRes* DelayOrderRes::New() const {
  return new DelayOrderRes;
}

void DelayOrderRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_order_code()) {
      if (order_code_ != &::google::protobuf::internal::kEmptyString) {
        order_code_->clear();
      }
    }
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DelayOrderRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_code().data(), this->order_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .CS.OrderCmdResult result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::OrderCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::OrderCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DelayOrderRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->order_code(), output);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DelayOrderRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string order_code = 1;
  if (has_order_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_code().data(), this->order_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_code(), target);
  }

  // optional .CS.OrderCmdResult result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DelayOrderRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string order_code = 1;
    if (has_order_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_code());
    }

    // optional .CS.OrderCmdResult result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelayOrderRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DelayOrderRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DelayOrderRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DelayOrderRes::MergeFrom(const DelayOrderRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_code()) {
      set_order_code(from.order_code());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DelayOrderRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelayOrderRes::CopyFrom(const DelayOrderRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelayOrderRes::IsInitialized() const {

  return true;
}

void DelayOrderRes::Swap(DelayOrderRes* other) {
  if (other != this) {
    std::swap(order_code_, other->order_code_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DelayOrderRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DelayOrderRes_descriptor_;
  metadata.reflection = DelayOrderRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpusReq::kOpusIdFieldNumber;
const int OpusReq::kRetCodeFieldNumber;
#endif  // !_MSC_VER

OpusReq::OpusReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OpusReq::InitAsDefaultInstance() {
}

OpusReq::OpusReq(const OpusReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OpusReq::SharedCtor() {
  _cached_size_ = 0;
  opusid_ = GOOGLE_LONGLONG(0);
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpusReq::~OpusReq() {
  SharedDtor();
}

void OpusReq::SharedDtor() {
  if (retcode_ != &::google::protobuf::internal::kEmptyString) {
    delete retcode_;
  }
  if (this != default_instance_) {
  }
}

void OpusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpusReq_descriptor_;
}

const OpusReq& OpusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OpusReq* OpusReq::default_instance_ = NULL;

OpusReq* OpusReq::New() const {
  return new OpusReq;
}

void OpusReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    opusid_ = GOOGLE_LONGLONG(0);
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::kEmptyString) {
        retcode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 opusId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &opusid_)));
          set_has_opusid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_retCode;
        break;
      }

      // optional string retCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_retCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OpusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 opusId = 1;
  if (has_opusid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->opusid(), output);
  }

  // optional string retCode = 2;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OpusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 opusId = 1;
  if (has_opusid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->opusid(), target);
  }

  // optional string retCode = 2;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OpusReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 opusId = 1;
    if (has_opusid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->opusid());
    }

    // optional string retCode = 2;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpusReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpusReq::MergeFrom(const OpusReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opusid()) {
      set_opusid(from.opusid());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpusReq::CopyFrom(const OpusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpusReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OpusReq::Swap(OpusReq* other) {
  if (other != this) {
    std::swap(opusid_, other->opusid_);
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpusReq_descriptor_;
  metadata.reflection = OpusReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OwnOpusReq::kUserIdFieldNumber;
const int OwnOpusReq::kRetCodeFieldNumber;
#endif  // !_MSC_VER

OwnOpusReq::OwnOpusReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OwnOpusReq::InitAsDefaultInstance() {
}

OwnOpusReq::OwnOpusReq(const OwnOpusReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OwnOpusReq::SharedCtor() {
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(0);
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OwnOpusReq::~OwnOpusReq() {
  SharedDtor();
}

void OwnOpusReq::SharedDtor() {
  if (retcode_ != &::google::protobuf::internal::kEmptyString) {
    delete retcode_;
  }
  if (this != default_instance_) {
  }
}

void OwnOpusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OwnOpusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OwnOpusReq_descriptor_;
}

const OwnOpusReq& OwnOpusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OwnOpusReq* OwnOpusReq::default_instance_ = NULL;

OwnOpusReq* OwnOpusReq::New() const {
  return new OwnOpusReq;
}

void OwnOpusReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    userid_ = GOOGLE_LONGLONG(0);
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::kEmptyString) {
        retcode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OwnOpusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 userId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_retCode;
        break;
      }

      // optional string retCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_retCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OwnOpusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 userId = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  // optional string retCode = 2;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OwnOpusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 userId = 1;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  // optional string retCode = 2;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OwnOpusReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 userId = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userid());
    }

    // optional string retCode = 2;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OwnOpusReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OwnOpusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OwnOpusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OwnOpusReq::MergeFrom(const OwnOpusReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OwnOpusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OwnOpusReq::CopyFrom(const OwnOpusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OwnOpusReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OwnOpusReq::Swap(OwnOpusReq* other) {
  if (other != this) {
    std::swap(userid_, other->userid_);
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OwnOpusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OwnOpusReq_descriptor_;
  metadata.reflection = OwnOpusReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpusBo::kIdFieldNumber;
const int OpusBo::kNameFieldNumber;
const int OpusBo::kSnFieldNumber;
const int OpusBo::kStyleFieldNumber;
const int OpusBo::kSizeFieldNumber;
const int OpusBo::kIsRecommendFieldNumber;
const int OpusBo::kPartAttributeFieldNumber;
const int OpusBo::kIsGoodsFieldNumber;
const int OpusBo::kDescriptionFieldNumber;
const int OpusBo::kOpusShotFieldNumber;
const int OpusBo::kUserIdFieldNumber;
const int OpusBo::kUserNameFieldNumber;
const int OpusBo::kCreateDateFieldNumber;
const int OpusBo::kStatusFieldNumber;
const int OpusBo::kRemarkFieldNumber;
const int OpusBo::kOpusListFieldNumber;
const int OpusBo::kCodeFieldNumber;
const int OpusBo::kRetCodeFieldNumber;
#endif  // !_MSC_VER

OpusBo::OpusBo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OpusBo::InitAsDefaultInstance() {
}

OpusBo::OpusBo(const OpusBo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OpusBo::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sn_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  style_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  size_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  isrecommend_ = 0;
  partattribute_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  isgoods_ = 0;
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  opusshot_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  userid_ = GOOGLE_LONGLONG(0);
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  createdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  status_ = 0;
  remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpusBo::~OpusBo() {
  SharedDtor();
}

void OpusBo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (sn_ != &::google::protobuf::internal::kEmptyString) {
    delete sn_;
  }
  if (style_ != &::google::protobuf::internal::kEmptyString) {
    delete style_;
  }
  if (size_ != &::google::protobuf::internal::kEmptyString) {
    delete size_;
  }
  if (partattribute_ != &::google::protobuf::internal::kEmptyString) {
    delete partattribute_;
  }
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (opusshot_ != &::google::protobuf::internal::kEmptyString) {
    delete opusshot_;
  }
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (createdate_ != &::google::protobuf::internal::kEmptyString) {
    delete createdate_;
  }
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    delete remark_;
  }
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (retcode_ != &::google::protobuf::internal::kEmptyString) {
    delete retcode_;
  }
  if (this != default_instance_) {
  }
}

void OpusBo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpusBo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpusBo_descriptor_;
}

const OpusBo& OpusBo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OpusBo* OpusBo::default_instance_ = NULL;

OpusBo* OpusBo::New() const {
  return new OpusBo;
}

void OpusBo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_sn()) {
      if (sn_ != &::google::protobuf::internal::kEmptyString) {
        sn_->clear();
      }
    }
    if (has_style()) {
      if (style_ != &::google::protobuf::internal::kEmptyString) {
        style_->clear();
      }
    }
    if (has_size()) {
      if (size_ != &::google::protobuf::internal::kEmptyString) {
        size_->clear();
      }
    }
    isrecommend_ = 0;
    if (has_partattribute()) {
      if (partattribute_ != &::google::protobuf::internal::kEmptyString) {
        partattribute_->clear();
      }
    }
    isgoods_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::kEmptyString) {
        description_->clear();
      }
    }
    if (has_opusshot()) {
      if (opusshot_ != &::google::protobuf::internal::kEmptyString) {
        opusshot_->clear();
      }
    }
    userid_ = GOOGLE_LONGLONG(0);
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::kEmptyString) {
        username_->clear();
      }
    }
    if (has_createdate()) {
      if (createdate_ != &::google::protobuf::internal::kEmptyString) {
        createdate_->clear();
      }
    }
    status_ = 0;
    if (has_remark()) {
      if (remark_ != &::google::protobuf::internal::kEmptyString) {
        remark_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::kEmptyString) {
        code_->clear();
      }
    }
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::kEmptyString) {
        retcode_->clear();
      }
    }
  }
  opuslist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpusBo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sn;
        break;
      }

      // optional string sn = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_style;
        break;
      }

      // optional string style = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_style:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_style()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->style().data(), this->style().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_size;
        break;
      }

      // optional string size = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_size:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_size()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->size().data(), this->size().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_isRecommend;
        break;
      }

      // optional int32 isRecommend = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isRecommend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isrecommend_)));
          set_has_isrecommend();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_partAttribute;
        break;
      }

      // optional string partAttribute = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_partAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partattribute()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->partattribute().data(), this->partattribute().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_isGoods;
        break;
      }

      // optional int32 isGoods = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isGoods:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isgoods_)));
          set_has_isgoods();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_description;
        break;
      }

      // optional string description = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_opusShot;
        break;
      }

      // optional string opusShot = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_opusShot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opusshot()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->opusshot().data(), this->opusshot().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_userId;
        break;
      }

      // optional int64 userId = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_createDate;
        break;
      }

      // optional string createDate = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_createDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->createdate().data(), this->createdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_opusList;
        break;
      }

      // repeated .CS.OpusBo opusList = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_opusList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_opuslist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_opusList;
        if (input->ExpectTag(114)) goto parse_code;
        break;
      }

      // optional string code = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_status;
        break;
      }

      // optional int32 status = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_remark;
        break;
      }

      // optional string remark = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->remark().data(), this->remark().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_userName;
        break;
      }

      // optional string userName = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_retCode;
        break;
      }

      // optional string retCode = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_retCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OpusBo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional string sn = 3;
  if (has_sn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sn(), output);
  }

  // optional string style = 4;
  if (has_style()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->style().data(), this->style().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->style(), output);
  }

  // optional string size = 5;
  if (has_size()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->size().data(), this->size().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->size(), output);
  }

  // optional int32 isRecommend = 6;
  if (has_isrecommend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->isrecommend(), output);
  }

  // optional string partAttribute = 7;
  if (has_partattribute()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partattribute().data(), this->partattribute().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->partattribute(), output);
  }

  // optional int32 isGoods = 8;
  if (has_isgoods()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->isgoods(), output);
  }

  // optional string description = 9;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->description(), output);
  }

  // optional string opusShot = 10;
  if (has_opusshot()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opusshot().data(), this->opusshot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->opusshot(), output);
  }

  // optional int64 userId = 11;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->userid(), output);
  }

  // optional string createDate = 12;
  if (has_createdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->createdate(), output);
  }

  // repeated .CS.OpusBo opusList = 13;
  for (int i = 0; i < this->opuslist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->opuslist(i), output);
  }

  // optional string code = 14;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->code(), output);
  }

  // optional int32 status = 15;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->status(), output);
  }

  // optional string remark = 16;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->remark(), output);
  }

  // optional string userName = 17;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->username(), output);
  }

  // optional string retCode = 18;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OpusBo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string sn = 3;
  if (has_sn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sn(), target);
  }

  // optional string style = 4;
  if (has_style()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->style().data(), this->style().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->style(), target);
  }

  // optional string size = 5;
  if (has_size()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->size().data(), this->size().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->size(), target);
  }

  // optional int32 isRecommend = 6;
  if (has_isrecommend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->isrecommend(), target);
  }

  // optional string partAttribute = 7;
  if (has_partattribute()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partattribute().data(), this->partattribute().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->partattribute(), target);
  }

  // optional int32 isGoods = 8;
  if (has_isgoods()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->isgoods(), target);
  }

  // optional string description = 9;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->description(), target);
  }

  // optional string opusShot = 10;
  if (has_opusshot()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opusshot().data(), this->opusshot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->opusshot(), target);
  }

  // optional int64 userId = 11;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->userid(), target);
  }

  // optional string createDate = 12;
  if (has_createdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->createdate(), target);
  }

  // repeated .CS.OpusBo opusList = 13;
  for (int i = 0; i < this->opuslist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->opuslist(i), target);
  }

  // optional string code = 14;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->code(), target);
  }

  // optional int32 status = 15;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->status(), target);
  }

  // optional string remark = 16;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->remark(), target);
  }

  // optional string userName = 17;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->username(), target);
  }

  // optional string retCode = 18;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OpusBo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string sn = 3;
    if (has_sn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sn());
    }

    // optional string style = 4;
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->style());
    }

    // optional string size = 5;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->size());
    }

    // optional int32 isRecommend = 6;
    if (has_isrecommend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isrecommend());
    }

    // optional string partAttribute = 7;
    if (has_partattribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partattribute());
    }

    // optional int32 isGoods = 8;
    if (has_isgoods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isgoods());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string description = 9;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string opusShot = 10;
    if (has_opusshot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->opusshot());
    }

    // optional int64 userId = 11;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userid());
    }

    // optional string userName = 17;
    if (has_username()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string createDate = 12;
    if (has_createdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdate());
    }

    // optional int32 status = 15;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional string remark = 16;
    if (has_remark()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remark());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string code = 14;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string retCode = 18;
    if (has_retcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

  }
  // repeated .CS.OpusBo opusList = 13;
  total_size += 1 * this->opuslist_size();
  for (int i = 0; i < this->opuslist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->opuslist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpusBo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpusBo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpusBo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpusBo::MergeFrom(const OpusBo& from) {
  GOOGLE_CHECK_NE(&from, this);
  opuslist_.MergeFrom(from.opuslist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_sn()) {
      set_sn(from.sn());
    }
    if (from.has_style()) {
      set_style(from.style());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_isrecommend()) {
      set_isrecommend(from.isrecommend());
    }
    if (from.has_partattribute()) {
      set_partattribute(from.partattribute());
    }
    if (from.has_isgoods()) {
      set_isgoods(from.isgoods());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_opusshot()) {
      set_opusshot(from.opusshot());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_createdate()) {
      set_createdate(from.createdate());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_remark()) {
      set_remark(from.remark());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpusBo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpusBo::CopyFrom(const OpusBo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpusBo::IsInitialized() const {

  return true;
}

void OpusBo::Swap(OpusBo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(sn_, other->sn_);
    std::swap(style_, other->style_);
    std::swap(size_, other->size_);
    std::swap(isrecommend_, other->isrecommend_);
    std::swap(partattribute_, other->partattribute_);
    std::swap(isgoods_, other->isgoods_);
    std::swap(description_, other->description_);
    std::swap(opusshot_, other->opusshot_);
    std::swap(userid_, other->userid_);
    std::swap(username_, other->username_);
    std::swap(createdate_, other->createdate_);
    std::swap(status_, other->status_);
    std::swap(remark_, other->remark_);
    opuslist_.Swap(&other->opuslist_);
    std::swap(code_, other->code_);
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpusBo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpusBo_descriptor_;
  metadata.reflection = OpusBo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpusCoopReq::kActIdFieldNumber;
const int OpusCoopReq::kCategoryIdFieldNumber;
const int OpusCoopReq::kStyleFieldNumber;
const int OpusCoopReq::kRetCodeFieldNumber;
#endif  // !_MSC_VER

OpusCoopReq::OpusCoopReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OpusCoopReq::InitAsDefaultInstance() {
}

OpusCoopReq::OpusCoopReq(const OpusCoopReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OpusCoopReq::SharedCtor() {
  _cached_size_ = 0;
  actid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  categoryid_ = GOOGLE_LONGLONG(0);
  style_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpusCoopReq::~OpusCoopReq() {
  SharedDtor();
}

void OpusCoopReq::SharedDtor() {
  if (actid_ != &::google::protobuf::internal::kEmptyString) {
    delete actid_;
  }
  if (style_ != &::google::protobuf::internal::kEmptyString) {
    delete style_;
  }
  if (retcode_ != &::google::protobuf::internal::kEmptyString) {
    delete retcode_;
  }
  if (this != default_instance_) {
  }
}

void OpusCoopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpusCoopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpusCoopReq_descriptor_;
}

const OpusCoopReq& OpusCoopReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OpusCoopReq* OpusCoopReq::default_instance_ = NULL;

OpusCoopReq* OpusCoopReq::New() const {
  return new OpusCoopReq;
}

void OpusCoopReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_actid()) {
      if (actid_ != &::google::protobuf::internal::kEmptyString) {
        actid_->clear();
      }
    }
    categoryid_ = GOOGLE_LONGLONG(0);
    if (has_style()) {
      if (style_ != &::google::protobuf::internal::kEmptyString) {
        style_->clear();
      }
    }
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::kEmptyString) {
        retcode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpusCoopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string actId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->actid().data(), this->actid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_categoryId;
        break;
      }

      // optional int64 categoryId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_categoryId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &categoryid_)));
          set_has_categoryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_style;
        break;
      }

      // optional string style = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_style:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_style()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->style().data(), this->style().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_retCode;
        break;
      }

      // optional string retCode = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_retCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OpusCoopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string actId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actid().data(), this->actid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->actid(), output);
  }

  // optional int64 categoryId = 2;
  if (has_categoryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->categoryid(), output);
  }

  // optional string style = 3;
  if (has_style()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->style().data(), this->style().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->style(), output);
  }

  // optional string retCode = 4;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OpusCoopReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string actId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actid().data(), this->actid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->actid(), target);
  }

  // optional int64 categoryId = 2;
  if (has_categoryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->categoryid(), target);
  }

  // optional string style = 3;
  if (has_style()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->style().data(), this->style().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->style(), target);
  }

  // optional string retCode = 4;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OpusCoopReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string actId = 1;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actid());
    }

    // optional int64 categoryId = 2;
    if (has_categoryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->categoryid());
    }

    // optional string style = 3;
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->style());
    }

    // optional string retCode = 4;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpusCoopReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpusCoopReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpusCoopReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpusCoopReq::MergeFrom(const OpusCoopReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actid()) {
      set_actid(from.actid());
    }
    if (from.has_categoryid()) {
      set_categoryid(from.categoryid());
    }
    if (from.has_style()) {
      set_style(from.style());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpusCoopReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpusCoopReq::CopyFrom(const OpusCoopReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpusCoopReq::IsInitialized() const {

  return true;
}

void OpusCoopReq::Swap(OpusCoopReq* other) {
  if (other != this) {
    std::swap(actid_, other->actid_);
    std::swap(categoryid_, other->categoryid_);
    std::swap(style_, other->style_);
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpusCoopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpusCoopReq_descriptor_;
  metadata.reflection = OpusCoopReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PublishOpusCoopReq::kActIdFieldNumber;
const int PublishOpusCoopReq::kOpusIdFieldNumber;
const int PublishOpusCoopReq::kUserIdFieldNumber;
const int PublishOpusCoopReq::kRemarkFieldNumber;
const int PublishOpusCoopReq::kRetCodeFieldNumber;
#endif  // !_MSC_VER

PublishOpusCoopReq::PublishOpusCoopReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PublishOpusCoopReq::InitAsDefaultInstance() {
}

PublishOpusCoopReq::PublishOpusCoopReq(const PublishOpusCoopReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PublishOpusCoopReq::SharedCtor() {
  _cached_size_ = 0;
  actid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  opusid_ = GOOGLE_LONGLONG(0);
  userid_ = GOOGLE_LONGLONG(0);
  remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PublishOpusCoopReq::~PublishOpusCoopReq() {
  SharedDtor();
}

void PublishOpusCoopReq::SharedDtor() {
  if (actid_ != &::google::protobuf::internal::kEmptyString) {
    delete actid_;
  }
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    delete remark_;
  }
  if (retcode_ != &::google::protobuf::internal::kEmptyString) {
    delete retcode_;
  }
  if (this != default_instance_) {
  }
}

void PublishOpusCoopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PublishOpusCoopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PublishOpusCoopReq_descriptor_;
}

const PublishOpusCoopReq& PublishOpusCoopReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

PublishOpusCoopReq* PublishOpusCoopReq::default_instance_ = NULL;

PublishOpusCoopReq* PublishOpusCoopReq::New() const {
  return new PublishOpusCoopReq;
}

void PublishOpusCoopReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_actid()) {
      if (actid_ != &::google::protobuf::internal::kEmptyString) {
        actid_->clear();
      }
    }
    opusid_ = GOOGLE_LONGLONG(0);
    userid_ = GOOGLE_LONGLONG(0);
    if (has_remark()) {
      if (remark_ != &::google::protobuf::internal::kEmptyString) {
        remark_->clear();
      }
    }
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::kEmptyString) {
        retcode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PublishOpusCoopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string actId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->actid().data(), this->actid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opusId;
        break;
      }

      // required int64 opusId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opusId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &opusid_)));
          set_has_opusid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        break;
      }

      // required int64 userId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_remark;
        break;
      }

      // required string remark = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->remark().data(), this->remark().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_retCode;
        break;
      }

      // optional string retCode = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_retCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PublishOpusCoopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string actId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actid().data(), this->actid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->actid(), output);
  }

  // required int64 opusId = 2;
  if (has_opusid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->opusid(), output);
  }

  // required int64 userId = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->userid(), output);
  }

  // required string remark = 4;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->remark(), output);
  }

  // optional string retCode = 5;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PublishOpusCoopReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string actId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actid().data(), this->actid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->actid(), target);
  }

  // required int64 opusId = 2;
  if (has_opusid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->opusid(), target);
  }

  // required int64 userId = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->userid(), target);
  }

  // required string remark = 4;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->remark(), target);
  }

  // optional string retCode = 5;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PublishOpusCoopReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string actId = 1;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actid());
    }

    // required int64 opusId = 2;
    if (has_opusid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->opusid());
    }

    // required int64 userId = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userid());
    }

    // required string remark = 4;
    if (has_remark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remark());
    }

    // optional string retCode = 5;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PublishOpusCoopReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PublishOpusCoopReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PublishOpusCoopReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PublishOpusCoopReq::MergeFrom(const PublishOpusCoopReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actid()) {
      set_actid(from.actid());
    }
    if (from.has_opusid()) {
      set_opusid(from.opusid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_remark()) {
      set_remark(from.remark());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PublishOpusCoopReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishOpusCoopReq::CopyFrom(const PublishOpusCoopReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishOpusCoopReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void PublishOpusCoopReq::Swap(PublishOpusCoopReq* other) {
  if (other != this) {
    std::swap(actid_, other->actid_);
    std::swap(opusid_, other->opusid_);
    std::swap(userid_, other->userid_);
    std::swap(remark_, other->remark_);
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PublishOpusCoopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PublishOpusCoopReq_descriptor_;
  metadata.reflection = PublishOpusCoopReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddOpusCoopReq::kActIdFieldNumber;
const int AddOpusCoopReq::kOpusIdFieldNumber;
const int AddOpusCoopReq::kUserIdFieldNumber;
const int AddOpusCoopReq::kRetCodeFieldNumber;
#endif  // !_MSC_VER

AddOpusCoopReq::AddOpusCoopReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AddOpusCoopReq::InitAsDefaultInstance() {
}

AddOpusCoopReq::AddOpusCoopReq(const AddOpusCoopReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AddOpusCoopReq::SharedCtor() {
  _cached_size_ = 0;
  actid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  opusid_ = GOOGLE_LONGLONG(0);
  userid_ = GOOGLE_LONGLONG(0);
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddOpusCoopReq::~AddOpusCoopReq() {
  SharedDtor();
}

void AddOpusCoopReq::SharedDtor() {
  if (actid_ != &::google::protobuf::internal::kEmptyString) {
    delete actid_;
  }
  if (retcode_ != &::google::protobuf::internal::kEmptyString) {
    delete retcode_;
  }
  if (this != default_instance_) {
  }
}

void AddOpusCoopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddOpusCoopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddOpusCoopReq_descriptor_;
}

const AddOpusCoopReq& AddOpusCoopReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

AddOpusCoopReq* AddOpusCoopReq::default_instance_ = NULL;

AddOpusCoopReq* AddOpusCoopReq::New() const {
  return new AddOpusCoopReq;
}

void AddOpusCoopReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_actid()) {
      if (actid_ != &::google::protobuf::internal::kEmptyString) {
        actid_->clear();
      }
    }
    opusid_ = GOOGLE_LONGLONG(0);
    userid_ = GOOGLE_LONGLONG(0);
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::kEmptyString) {
        retcode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddOpusCoopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string actId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->actid().data(), this->actid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opusId;
        break;
      }

      // required int64 opusId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opusId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &opusid_)));
          set_has_opusid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        break;
      }

      // required int64 userId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_retCode;
        break;
      }

      // optional string retCode = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_retCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AddOpusCoopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string actId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actid().data(), this->actid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->actid(), output);
  }

  // required int64 opusId = 2;
  if (has_opusid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->opusid(), output);
  }

  // required int64 userId = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->userid(), output);
  }

  // optional string retCode = 4;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AddOpusCoopReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string actId = 1;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actid().data(), this->actid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->actid(), target);
  }

  // required int64 opusId = 2;
  if (has_opusid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->opusid(), target);
  }

  // required int64 userId = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->userid(), target);
  }

  // optional string retCode = 4;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AddOpusCoopReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string actId = 1;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actid());
    }

    // required int64 opusId = 2;
    if (has_opusid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->opusid());
    }

    // required int64 userId = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userid());
    }

    // optional string retCode = 4;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddOpusCoopReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddOpusCoopReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddOpusCoopReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddOpusCoopReq::MergeFrom(const AddOpusCoopReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actid()) {
      set_actid(from.actid());
    }
    if (from.has_opusid()) {
      set_opusid(from.opusid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddOpusCoopReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOpusCoopReq::CopyFrom(const AddOpusCoopReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOpusCoopReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AddOpusCoopReq::Swap(AddOpusCoopReq* other) {
  if (other != this) {
    std::swap(actid_, other->actid_);
    std::swap(opusid_, other->opusid_);
    std::swap(userid_, other->userid_);
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddOpusCoopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddOpusCoopReq_descriptor_;
  metadata.reflection = AddOpusCoopReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OpusCoopBo::kIdFieldNumber;
const int OpusCoopBo::kNameFieldNumber;
const int OpusCoopBo::kOpusIdFieldNumber;
const int OpusCoopBo::kOpusShotFieldNumber;
const int OpusCoopBo::kUserIdFieldNumber;
const int OpusCoopBo::kUserNameFieldNumber;
const int OpusCoopBo::kCoopUserIdFieldNumber;
const int OpusCoopBo::kCoopUserNameFieldNumber;
const int OpusCoopBo::kStatusFieldNumber;
const int OpusCoopBo::kTypeFieldNumber;
const int OpusCoopBo::kRemarkFieldNumber;
const int OpusCoopBo::kCreateDateFieldNumber;
const int OpusCoopBo::kUpdateDateFieldNumber;
const int OpusCoopBo::kOpusCoopListFieldNumber;
const int OpusCoopBo::kCodeFieldNumber;
const int OpusCoopBo::kRetCodeFieldNumber;
#endif  // !_MSC_VER

OpusCoopBo::OpusCoopBo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OpusCoopBo::InitAsDefaultInstance() {
}

OpusCoopBo::OpusCoopBo(const OpusCoopBo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OpusCoopBo::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  opusid_ = GOOGLE_LONGLONG(0);
  opusshot_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  userid_ = GOOGLE_LONGLONG(0);
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  coopuserid_ = GOOGLE_LONGLONG(0);
  coopusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  status_ = 0;
  type_ = 0;
  remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  createdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  updatedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpusCoopBo::~OpusCoopBo() {
  SharedDtor();
}

void OpusCoopBo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (opusshot_ != &::google::protobuf::internal::kEmptyString) {
    delete opusshot_;
  }
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (coopusername_ != &::google::protobuf::internal::kEmptyString) {
    delete coopusername_;
  }
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    delete remark_;
  }
  if (createdate_ != &::google::protobuf::internal::kEmptyString) {
    delete createdate_;
  }
  if (updatedate_ != &::google::protobuf::internal::kEmptyString) {
    delete updatedate_;
  }
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (retcode_ != &::google::protobuf::internal::kEmptyString) {
    delete retcode_;
  }
  if (this != default_instance_) {
  }
}

void OpusCoopBo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpusCoopBo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpusCoopBo_descriptor_;
}

const OpusCoopBo& OpusCoopBo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

OpusCoopBo* OpusCoopBo::default_instance_ = NULL;

OpusCoopBo* OpusCoopBo::New() const {
  return new OpusCoopBo;
}

void OpusCoopBo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    opusid_ = GOOGLE_LONGLONG(0);
    if (has_opusshot()) {
      if (opusshot_ != &::google::protobuf::internal::kEmptyString) {
        opusshot_->clear();
      }
    }
    userid_ = GOOGLE_LONGLONG(0);
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::kEmptyString) {
        username_->clear();
      }
    }
    coopuserid_ = GOOGLE_LONGLONG(0);
    if (has_coopusername()) {
      if (coopusername_ != &::google::protobuf::internal::kEmptyString) {
        coopusername_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    status_ = 0;
    type_ = 0;
    if (has_remark()) {
      if (remark_ != &::google::protobuf::internal::kEmptyString) {
        remark_->clear();
      }
    }
    if (has_createdate()) {
      if (createdate_ != &::google::protobuf::internal::kEmptyString) {
        createdate_->clear();
      }
    }
    if (has_updatedate()) {
      if (updatedate_ != &::google::protobuf::internal::kEmptyString) {
        updatedate_->clear();
      }
    }
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::kEmptyString) {
        code_->clear();
      }
    }
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::kEmptyString) {
        retcode_->clear();
      }
    }
  }
  opuscooplist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OpusCoopBo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_opusId;
        break;
      }

      // optional int64 opusId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opusId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &opusid_)));
          set_has_opusid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_userId;
        break;
      }

      // optional int64 userId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_coopUserId;
        break;
      }

      // optional int64 coopUserId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coopUserId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &coopuserid_)));
          set_has_coopuserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_status;
        break;
      }

      // optional int32 status = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }

      // optional int32 type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_remark;
        break;
      }

      // optional string remark = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->remark().data(), this->remark().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_createDate;
        break;
      }

      // optional string createDate = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_createDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->createdate().data(), this->createdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_opusCoopList;
        break;
      }

      // repeated .CS.OpusCoopBo opusCoopList = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_opusCoopList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_opuscooplist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_opusCoopList;
        if (input->ExpectTag(90)) goto parse_code;
        break;
      }

      // optional string code = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_userName;
        break;
      }

      // optional string userName = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_coopUserName;
        break;
      }

      // optional string coopUserName = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_coopUserName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coopusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->coopusername().data(), this->coopusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_opusShot;
        break;
      }

      // optional string opusShot = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_opusShot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opusshot()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->opusshot().data(), this->opusshot().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_retCode;
        break;
      }

      // optional string retCode = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_retCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_updateDate;
        break;
      }

      // optional string updateDate = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_updateDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->updatedate().data(), this->updatedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OpusCoopBo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int64 opusId = 3;
  if (has_opusid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->opusid(), output);
  }

  // optional int64 userId = 4;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->userid(), output);
  }

  // optional int64 coopUserId = 5;
  if (has_coopuserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->coopuserid(), output);
  }

  // optional int32 status = 6;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->status(), output);
  }

  // optional int32 type = 7;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->type(), output);
  }

  // optional string remark = 8;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->remark(), output);
  }

  // optional string createDate = 9;
  if (has_createdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->createdate(), output);
  }

  // repeated .CS.OpusCoopBo opusCoopList = 10;
  for (int i = 0; i < this->opuscooplist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->opuscooplist(i), output);
  }

  // optional string code = 11;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->code(), output);
  }

  // optional string userName = 12;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->username(), output);
  }

  // optional string coopUserName = 13;
  if (has_coopusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->coopusername().data(), this->coopusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->coopusername(), output);
  }

  // optional string opusShot = 14;
  if (has_opusshot()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opusshot().data(), this->opusshot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->opusshot(), output);
  }

  // optional string retCode = 15;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->retcode(), output);
  }

  // optional string updateDate = 16;
  if (has_updatedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->updatedate().data(), this->updatedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->updatedate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OpusCoopBo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int64 opusId = 3;
  if (has_opusid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->opusid(), target);
  }

  // optional int64 userId = 4;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->userid(), target);
  }

  // optional int64 coopUserId = 5;
  if (has_coopuserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->coopuserid(), target);
  }

  // optional int32 status = 6;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->status(), target);
  }

  // optional int32 type = 7;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->type(), target);
  }

  // optional string remark = 8;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->remark(), target);
  }

  // optional string createDate = 9;
  if (has_createdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->createdate(), target);
  }

  // repeated .CS.OpusCoopBo opusCoopList = 10;
  for (int i = 0; i < this->opuscooplist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->opuscooplist(i), target);
  }

  // optional string code = 11;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->code(), target);
  }

  // optional string userName = 12;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->username(), target);
  }

  // optional string coopUserName = 13;
  if (has_coopusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->coopusername().data(), this->coopusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->coopusername(), target);
  }

  // optional string opusShot = 14;
  if (has_opusshot()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->opusshot().data(), this->opusshot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->opusshot(), target);
  }

  // optional string retCode = 15;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->retcode(), target);
  }

  // optional string updateDate = 16;
  if (has_updatedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->updatedate().data(), this->updatedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->updatedate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OpusCoopBo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 opusId = 3;
    if (has_opusid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->opusid());
    }

    // optional string opusShot = 14;
    if (has_opusshot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->opusshot());
    }

    // optional int64 userId = 4;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userid());
    }

    // optional string userName = 12;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional int64 coopUserId = 5;
    if (has_coopuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->coopuserid());
    }

    // optional string coopUserName = 13;
    if (has_coopusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->coopusername());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 status = 6;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional int32 type = 7;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string remark = 8;
    if (has_remark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remark());
    }

    // optional string createDate = 9;
    if (has_createdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdate());
    }

    // optional string updateDate = 16;
    if (has_updatedate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->updatedate());
    }

    // optional string code = 11;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string retCode = 15;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

  }
  // repeated .CS.OpusCoopBo opusCoopList = 10;
  total_size += 1 * this->opuscooplist_size();
  for (int i = 0; i < this->opuscooplist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->opuscooplist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpusCoopBo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OpusCoopBo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OpusCoopBo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpusCoopBo::MergeFrom(const OpusCoopBo& from) {
  GOOGLE_CHECK_NE(&from, this);
  opuscooplist_.MergeFrom(from.opuscooplist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_opusid()) {
      set_opusid(from.opusid());
    }
    if (from.has_opusshot()) {
      set_opusshot(from.opusshot());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_coopuserid()) {
      set_coopuserid(from.coopuserid());
    }
    if (from.has_coopusername()) {
      set_coopusername(from.coopusername());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_remark()) {
      set_remark(from.remark());
    }
    if (from.has_createdate()) {
      set_createdate(from.createdate());
    }
    if (from.has_updatedate()) {
      set_updatedate(from.updatedate());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OpusCoopBo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpusCoopBo::CopyFrom(const OpusCoopBo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpusCoopBo::IsInitialized() const {

  return true;
}

void OpusCoopBo::Swap(OpusCoopBo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(opusid_, other->opusid_);
    std::swap(opusshot_, other->opusshot_);
    std::swap(userid_, other->userid_);
    std::swap(username_, other->username_);
    std::swap(coopuserid_, other->coopuserid_);
    std::swap(coopusername_, other->coopusername_);
    std::swap(status_, other->status_);
    std::swap(type_, other->type_);
    std::swap(remark_, other->remark_);
    std::swap(createdate_, other->createdate_);
    std::swap(updatedate_, other->updatedate_);
    opuscooplist_.Swap(&other->opuscooplist_);
    std::swap(code_, other->code_);
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OpusCoopBo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpusCoopBo_descriptor_;
  metadata.reflection = OpusCoopBo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PaySyncResultReq::kResultStatusFieldNumber;
const int PaySyncResultReq::kResultFieldNumber;
#endif  // !_MSC_VER

PaySyncResultReq::PaySyncResultReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PaySyncResultReq::InitAsDefaultInstance() {
}

PaySyncResultReq::PaySyncResultReq(const PaySyncResultReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PaySyncResultReq::SharedCtor() {
  _cached_size_ = 0;
  resultstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaySyncResultReq::~PaySyncResultReq() {
  SharedDtor();
}

void PaySyncResultReq::SharedDtor() {
  if (resultstatus_ != &::google::protobuf::internal::kEmptyString) {
    delete resultstatus_;
  }
  if (result_ != &::google::protobuf::internal::kEmptyString) {
    delete result_;
  }
  if (this != default_instance_) {
  }
}

void PaySyncResultReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaySyncResultReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaySyncResultReq_descriptor_;
}

const PaySyncResultReq& PaySyncResultReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

PaySyncResultReq* PaySyncResultReq::default_instance_ = NULL;

PaySyncResultReq* PaySyncResultReq::New() const {
  return new PaySyncResultReq;
}

void PaySyncResultReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_resultstatus()) {
      if (resultstatus_ != &::google::protobuf::internal::kEmptyString) {
        resultstatus_->clear();
      }
    }
    if (has_result()) {
      if (result_ != &::google::protobuf::internal::kEmptyString) {
        result_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PaySyncResultReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultStatus = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->resultstatus().data(), this->resultstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_result;
        break;
      }

      // required string result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PaySyncResultReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string resultStatus = 1;
  if (has_resultstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resultstatus().data(), this->resultstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->resultstatus(), output);
  }

  // required string result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PaySyncResultReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string resultStatus = 1;
  if (has_resultstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resultstatus().data(), this->resultstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resultstatus(), target);
  }

  // required string result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PaySyncResultReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultStatus = 1;
    if (has_resultstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultstatus());
    }

    // required string result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaySyncResultReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PaySyncResultReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PaySyncResultReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PaySyncResultReq::MergeFrom(const PaySyncResultReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultstatus()) {
      set_resultstatus(from.resultstatus());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PaySyncResultReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaySyncResultReq::CopyFrom(const PaySyncResultReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaySyncResultReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PaySyncResultReq::Swap(PaySyncResultReq* other) {
  if (other != this) {
    std::swap(resultstatus_, other->resultstatus_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PaySyncResultReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaySyncResultReq_descriptor_;
  metadata.reflection = PaySyncResultReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PaySyncResultResp::kDataFieldNumber;
#endif  // !_MSC_VER

PaySyncResultResp::PaySyncResultResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PaySyncResultResp::InitAsDefaultInstance() {
}

PaySyncResultResp::PaySyncResultResp(const PaySyncResultResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PaySyncResultResp::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaySyncResultResp::~PaySyncResultResp() {
  SharedDtor();
}

void PaySyncResultResp::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void PaySyncResultResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaySyncResultResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaySyncResultResp_descriptor_;
}

const PaySyncResultResp& PaySyncResultResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

PaySyncResultResp* PaySyncResultResp::default_instance_ = NULL;

PaySyncResultResp* PaySyncResultResp::New() const {
  return new PaySyncResultResp;
}

void PaySyncResultResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PaySyncResultResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PaySyncResultResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PaySyncResultResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PaySyncResultResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaySyncResultResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PaySyncResultResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PaySyncResultResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PaySyncResultResp::MergeFrom(const PaySyncResultResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PaySyncResultResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaySyncResultResp::CopyFrom(const PaySyncResultResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaySyncResultResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PaySyncResultResp::Swap(PaySyncResultResp* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PaySyncResultResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaySyncResultResp_descriptor_;
  metadata.reflection = PaySyncResultResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserReceiver::kIdFieldNumber;
const int UserReceiver::kNameFieldNumber;
const int UserReceiver::kPhoneFieldNumber;
const int UserReceiver::kZipCodeFieldNumber;
const int UserReceiver::kAreaFieldNumber;
const int UserReceiver::kAddressFieldNumber;
const int UserReceiver::kAreaStoreFieldNumber;
const int UserReceiver::kIsDefaultFieldNumber;
const int UserReceiver::kActIdFieldNumber;
const int UserReceiver::kStreetFieldNumber;
const int UserReceiver::kAddressDetailFieldNumber;
#endif  // !_MSC_VER

UserReceiver::UserReceiver()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserReceiver::InitAsDefaultInstance() {
}

UserReceiver::UserReceiver(const UserReceiver& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserReceiver::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  zip_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  area_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  area_store_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  is_default_ = false;
  act_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  street_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_detail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserReceiver::~UserReceiver() {
  SharedDtor();
}

void UserReceiver::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (zip_code_ != &::google::protobuf::internal::kEmptyString) {
    delete zip_code_;
  }
  if (area_ != &::google::protobuf::internal::kEmptyString) {
    delete area_;
  }
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (area_store_ != &::google::protobuf::internal::kEmptyString) {
    delete area_store_;
  }
  if (act_id_ != &::google::protobuf::internal::kEmptyString) {
    delete act_id_;
  }
  if (street_ != &::google::protobuf::internal::kEmptyString) {
    delete street_;
  }
  if (address_detail_ != &::google::protobuf::internal::kEmptyString) {
    delete address_detail_;
  }
  if (this != default_instance_) {
  }
}

void UserReceiver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserReceiver::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserReceiver_descriptor_;
}

const UserReceiver& UserReceiver::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

UserReceiver* UserReceiver::default_instance_ = NULL;

UserReceiver* UserReceiver::New() const {
  return new UserReceiver;
}

void UserReceiver::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::kEmptyString) {
        phone_->clear();
      }
    }
    if (has_zip_code()) {
      if (zip_code_ != &::google::protobuf::internal::kEmptyString) {
        zip_code_->clear();
      }
    }
    if (has_area()) {
      if (area_ != &::google::protobuf::internal::kEmptyString) {
        area_->clear();
      }
    }
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
    if (has_area_store()) {
      if (area_store_ != &::google::protobuf::internal::kEmptyString) {
        area_store_->clear();
      }
    }
    is_default_ = false;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_act_id()) {
      if (act_id_ != &::google::protobuf::internal::kEmptyString) {
        act_id_->clear();
      }
    }
    if (has_street()) {
      if (street_ != &::google::protobuf::internal::kEmptyString) {
        street_->clear();
      }
    }
    if (has_address_detail()) {
      if (address_detail_ != &::google::protobuf::internal::kEmptyString) {
        address_detail_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserReceiver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_phone;
        break;
      }

      // optional string phone = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_zip_code;
        break;
      }

      // optional string zip_code = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_zip_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zip_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->zip_code().data(), this->zip_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_area;
        break;
      }

      // optional string area = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->area().data(), this->area().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_address;
        break;
      }

      // optional string address = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_area_store;
        break;
      }

      // optional string area_store = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_store()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->area_store().data(), this->area_store().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_is_default;
        break;
      }

      // optional bool is_default = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_default:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_default_)));
          set_has_is_default();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_act_id;
        break;
      }

      // optional string act_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_act_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->act_id().data(), this->act_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_street;
        break;
      }

      // optional string street = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_street:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_street()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->street().data(), this->street().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_address_detail;
        break;
      }

      // optional string address_detail = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_detail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address_detail().data(), this->address_detail().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserReceiver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional string phone = 3;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->phone(), output);
  }

  // optional string zip_code = 4;
  if (has_zip_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->zip_code().data(), this->zip_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->zip_code(), output);
  }

  // optional string area = 5;
  if (has_area()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->area(), output);
  }

  // optional string address = 6;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->address(), output);
  }

  // optional string area_store = 7;
  if (has_area_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_store().data(), this->area_store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->area_store(), output);
  }

  // optional bool is_default = 8;
  if (has_is_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_default(), output);
  }

  // optional string act_id = 9;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->act_id().data(), this->act_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->act_id(), output);
  }

  // optional string street = 10;
  if (has_street()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->street(), output);
  }

  // optional string address_detail = 11;
  if (has_address_detail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address_detail().data(), this->address_detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->address_detail(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserReceiver::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string phone = 3;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone(), target);
  }

  // optional string zip_code = 4;
  if (has_zip_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->zip_code().data(), this->zip_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->zip_code(), target);
  }

  // optional string area = 5;
  if (has_area()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->area(), target);
  }

  // optional string address = 6;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->address(), target);
  }

  // optional string area_store = 7;
  if (has_area_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_store().data(), this->area_store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->area_store(), target);
  }

  // optional bool is_default = 8;
  if (has_is_default()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_default(), target);
  }

  // optional string act_id = 9;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->act_id().data(), this->act_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->act_id(), target);
  }

  // optional string street = 10;
  if (has_street()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->street(), target);
  }

  // optional string address_detail = 11;
  if (has_address_detail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address_detail().data(), this->address_detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->address_detail(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserReceiver::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string phone = 3;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional string zip_code = 4;
    if (has_zip_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zip_code());
    }

    // optional string area = 5;
    if (has_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->area());
    }

    // optional string address = 6;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional string area_store = 7;
    if (has_area_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->area_store());
    }

    // optional bool is_default = 8;
    if (has_is_default()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string act_id = 9;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->act_id());
    }

    // optional string street = 10;
    if (has_street()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->street());
    }

    // optional string address_detail = 11;
    if (has_address_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address_detail());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserReceiver::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserReceiver* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserReceiver*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserReceiver::MergeFrom(const UserReceiver& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_phone()) {
      set_phone(from.phone());
    }
    if (from.has_zip_code()) {
      set_zip_code(from.zip_code());
    }
    if (from.has_area()) {
      set_area(from.area());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_area_store()) {
      set_area_store(from.area_store());
    }
    if (from.has_is_default()) {
      set_is_default(from.is_default());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_street()) {
      set_street(from.street());
    }
    if (from.has_address_detail()) {
      set_address_detail(from.address_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserReceiver::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserReceiver::CopyFrom(const UserReceiver& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserReceiver::IsInitialized() const {

  return true;
}

void UserReceiver::Swap(UserReceiver* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(phone_, other->phone_);
    std::swap(zip_code_, other->zip_code_);
    std::swap(area_, other->area_);
    std::swap(address_, other->address_);
    std::swap(area_store_, other->area_store_);
    std::swap(is_default_, other->is_default_);
    std::swap(act_id_, other->act_id_);
    std::swap(street_, other->street_);
    std::swap(address_detail_, other->address_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserReceiver::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserReceiver_descriptor_;
  metadata.reflection = UserReceiver_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryUserReceiverReq::kAccountIdFieldNumber;
#endif  // !_MSC_VER

queryUserReceiverReq::queryUserReceiverReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryUserReceiverReq::InitAsDefaultInstance() {
}

queryUserReceiverReq::queryUserReceiverReq(const queryUserReceiverReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryUserReceiverReq::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryUserReceiverReq::~queryUserReceiverReq() {
  SharedDtor();
}

void queryUserReceiverReq::SharedDtor() {
  if (account_id_ != &::google::protobuf::internal::kEmptyString) {
    delete account_id_;
  }
  if (this != default_instance_) {
  }
}

void queryUserReceiverReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryUserReceiverReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryUserReceiverReq_descriptor_;
}

const queryUserReceiverReq& queryUserReceiverReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryUserReceiverReq* queryUserReceiverReq::default_instance_ = NULL;

queryUserReceiverReq* queryUserReceiverReq::New() const {
  return new queryUserReceiverReq;
}

void queryUserReceiverReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account_id()) {
      if (account_id_ != &::google::protobuf::internal::kEmptyString) {
        account_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryUserReceiverReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string account_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account_id().data(), this->account_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryUserReceiverReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_id().data(), this->account_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->account_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryUserReceiverReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_id().data(), this->account_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryUserReceiverReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryUserReceiverReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryUserReceiverReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryUserReceiverReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryUserReceiverReq::MergeFrom(const queryUserReceiverReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryUserReceiverReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryUserReceiverReq::CopyFrom(const queryUserReceiverReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryUserReceiverReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void queryUserReceiverReq::Swap(queryUserReceiverReq* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryUserReceiverReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryUserReceiverReq_descriptor_;
  metadata.reflection = queryUserReceiverReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryUserReceiverRes::kReceiverListFieldNumber;
#endif  // !_MSC_VER

queryUserReceiverRes::queryUserReceiverRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryUserReceiverRes::InitAsDefaultInstance() {
}

queryUserReceiverRes::queryUserReceiverRes(const queryUserReceiverRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryUserReceiverRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryUserReceiverRes::~queryUserReceiverRes() {
  SharedDtor();
}

void queryUserReceiverRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void queryUserReceiverRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryUserReceiverRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryUserReceiverRes_descriptor_;
}

const queryUserReceiverRes& queryUserReceiverRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryUserReceiverRes* queryUserReceiverRes::default_instance_ = NULL;

queryUserReceiverRes* queryUserReceiverRes::New() const {
  return new queryUserReceiverRes;
}

void queryUserReceiverRes::Clear() {
  receiver_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryUserReceiverRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CS.UserReceiver receiver_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_receiver_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_receiver_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryUserReceiverRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CS.UserReceiver receiver_list = 1;
  for (int i = 0; i < this->receiver_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->receiver_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryUserReceiverRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CS.UserReceiver receiver_list = 1;
  for (int i = 0; i < this->receiver_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->receiver_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryUserReceiverRes::ByteSize() const {
  int total_size = 0;

  // repeated .CS.UserReceiver receiver_list = 1;
  total_size += 1 * this->receiver_list_size();
  for (int i = 0; i < this->receiver_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->receiver_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryUserReceiverRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryUserReceiverRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryUserReceiverRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryUserReceiverRes::MergeFrom(const queryUserReceiverRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  receiver_list_.MergeFrom(from.receiver_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryUserReceiverRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryUserReceiverRes::CopyFrom(const queryUserReceiverRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryUserReceiverRes::IsInitialized() const {

  return true;
}

void queryUserReceiverRes::Swap(queryUserReceiverRes* other) {
  if (other != this) {
    receiver_list_.Swap(&other->receiver_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryUserReceiverRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryUserReceiverRes_descriptor_;
  metadata.reflection = queryUserReceiverRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int createUserReceiverReq::kUserReceiverFieldNumber;
#endif  // !_MSC_VER

createUserReceiverReq::createUserReceiverReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void createUserReceiverReq::InitAsDefaultInstance() {
  user_receiver_ = const_cast< ::CS::UserReceiver*>(&::CS::UserReceiver::default_instance());
}

createUserReceiverReq::createUserReceiverReq(const createUserReceiverReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void createUserReceiverReq::SharedCtor() {
  _cached_size_ = 0;
  user_receiver_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

createUserReceiverReq::~createUserReceiverReq() {
  SharedDtor();
}

void createUserReceiverReq::SharedDtor() {
  if (this != default_instance_) {
    delete user_receiver_;
  }
}

void createUserReceiverReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* createUserReceiverReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return createUserReceiverReq_descriptor_;
}

const createUserReceiverReq& createUserReceiverReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

createUserReceiverReq* createUserReceiverReq::default_instance_ = NULL;

createUserReceiverReq* createUserReceiverReq::New() const {
  return new createUserReceiverReq;
}

void createUserReceiverReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_user_receiver()) {
      if (user_receiver_ != NULL) user_receiver_->::CS::UserReceiver::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool createUserReceiverReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CS.UserReceiver user_receiver = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_receiver()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void createUserReceiverReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CS.UserReceiver user_receiver = 1;
  if (has_user_receiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user_receiver(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* createUserReceiverReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CS.UserReceiver user_receiver = 1;
  if (has_user_receiver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user_receiver(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int createUserReceiverReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CS.UserReceiver user_receiver = 1;
    if (has_user_receiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user_receiver());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void createUserReceiverReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const createUserReceiverReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const createUserReceiverReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void createUserReceiverReq::MergeFrom(const createUserReceiverReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_receiver()) {
      mutable_user_receiver()->::CS::UserReceiver::MergeFrom(from.user_receiver());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void createUserReceiverReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void createUserReceiverReq::CopyFrom(const createUserReceiverReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool createUserReceiverReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void createUserReceiverReq::Swap(createUserReceiverReq* other) {
  if (other != this) {
    std::swap(user_receiver_, other->user_receiver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata createUserReceiverReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = createUserReceiverReq_descriptor_;
  metadata.reflection = createUserReceiverReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int createUserReceiverRes::kResultFieldNumber;
#endif  // !_MSC_VER

createUserReceiverRes::createUserReceiverRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void createUserReceiverRes::InitAsDefaultInstance() {
}

createUserReceiverRes::createUserReceiverRes(const createUserReceiverRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void createUserReceiverRes::SharedCtor() {
  _cached_size_ = 0;
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

createUserReceiverRes::~createUserReceiverRes() {
  SharedDtor();
}

void createUserReceiverRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void createUserReceiverRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* createUserReceiverRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return createUserReceiverRes_descriptor_;
}

const createUserReceiverRes& createUserReceiverRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

createUserReceiverRes* createUserReceiverRes::default_instance_ = NULL;

createUserReceiverRes* createUserReceiverRes::New() const {
  return new createUserReceiverRes;
}

void createUserReceiverRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool createUserReceiverRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CS.ReceiverCmdResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::ReceiverCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::ReceiverCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void createUserReceiverRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* createUserReceiverRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int createUserReceiverRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CS.ReceiverCmdResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void createUserReceiverRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const createUserReceiverRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const createUserReceiverRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void createUserReceiverRes::MergeFrom(const createUserReceiverRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void createUserReceiverRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void createUserReceiverRes::CopyFrom(const createUserReceiverRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool createUserReceiverRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void createUserReceiverRes::Swap(createUserReceiverRes* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata createUserReceiverRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = createUserReceiverRes_descriptor_;
  metadata.reflection = createUserReceiverRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int updateUserReceiverReq::kUserReceiverFieldNumber;
#endif  // !_MSC_VER

updateUserReceiverReq::updateUserReceiverReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void updateUserReceiverReq::InitAsDefaultInstance() {
  user_receiver_ = const_cast< ::CS::UserReceiver*>(&::CS::UserReceiver::default_instance());
}

updateUserReceiverReq::updateUserReceiverReq(const updateUserReceiverReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void updateUserReceiverReq::SharedCtor() {
  _cached_size_ = 0;
  user_receiver_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

updateUserReceiverReq::~updateUserReceiverReq() {
  SharedDtor();
}

void updateUserReceiverReq::SharedDtor() {
  if (this != default_instance_) {
    delete user_receiver_;
  }
}

void updateUserReceiverReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* updateUserReceiverReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return updateUserReceiverReq_descriptor_;
}

const updateUserReceiverReq& updateUserReceiverReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

updateUserReceiverReq* updateUserReceiverReq::default_instance_ = NULL;

updateUserReceiverReq* updateUserReceiverReq::New() const {
  return new updateUserReceiverReq;
}

void updateUserReceiverReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_user_receiver()) {
      if (user_receiver_ != NULL) user_receiver_->::CS::UserReceiver::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool updateUserReceiverReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CS.UserReceiver user_receiver = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_receiver()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void updateUserReceiverReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CS.UserReceiver user_receiver = 1;
  if (has_user_receiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user_receiver(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* updateUserReceiverReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CS.UserReceiver user_receiver = 1;
  if (has_user_receiver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user_receiver(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int updateUserReceiverReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CS.UserReceiver user_receiver = 1;
    if (has_user_receiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user_receiver());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void updateUserReceiverReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const updateUserReceiverReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const updateUserReceiverReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void updateUserReceiverReq::MergeFrom(const updateUserReceiverReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_receiver()) {
      mutable_user_receiver()->::CS::UserReceiver::MergeFrom(from.user_receiver());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void updateUserReceiverReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void updateUserReceiverReq::CopyFrom(const updateUserReceiverReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool updateUserReceiverReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void updateUserReceiverReq::Swap(updateUserReceiverReq* other) {
  if (other != this) {
    std::swap(user_receiver_, other->user_receiver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata updateUserReceiverReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = updateUserReceiverReq_descriptor_;
  metadata.reflection = updateUserReceiverReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int updateUserReceiverRes::kResultFieldNumber;
#endif  // !_MSC_VER

updateUserReceiverRes::updateUserReceiverRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void updateUserReceiverRes::InitAsDefaultInstance() {
}

updateUserReceiverRes::updateUserReceiverRes(const updateUserReceiverRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void updateUserReceiverRes::SharedCtor() {
  _cached_size_ = 0;
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

updateUserReceiverRes::~updateUserReceiverRes() {
  SharedDtor();
}

void updateUserReceiverRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void updateUserReceiverRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* updateUserReceiverRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return updateUserReceiverRes_descriptor_;
}

const updateUserReceiverRes& updateUserReceiverRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

updateUserReceiverRes* updateUserReceiverRes::default_instance_ = NULL;

updateUserReceiverRes* updateUserReceiverRes::New() const {
  return new updateUserReceiverRes;
}

void updateUserReceiverRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool updateUserReceiverRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CS.ReceiverCmdResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::ReceiverCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::ReceiverCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void updateUserReceiverRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* updateUserReceiverRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int updateUserReceiverRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CS.ReceiverCmdResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void updateUserReceiverRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const updateUserReceiverRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const updateUserReceiverRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void updateUserReceiverRes::MergeFrom(const updateUserReceiverRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void updateUserReceiverRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void updateUserReceiverRes::CopyFrom(const updateUserReceiverRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool updateUserReceiverRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void updateUserReceiverRes::Swap(updateUserReceiverRes* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata updateUserReceiverRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = updateUserReceiverRes_descriptor_;
  metadata.reflection = updateUserReceiverRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int createDefaultUserReceiverReq::kIdFieldNumber;
#endif  // !_MSC_VER

createDefaultUserReceiverReq::createDefaultUserReceiverReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void createDefaultUserReceiverReq::InitAsDefaultInstance() {
}

createDefaultUserReceiverReq::createDefaultUserReceiverReq(const createDefaultUserReceiverReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void createDefaultUserReceiverReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

createDefaultUserReceiverReq::~createDefaultUserReceiverReq() {
  SharedDtor();
}

void createDefaultUserReceiverReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void createDefaultUserReceiverReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* createDefaultUserReceiverReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return createDefaultUserReceiverReq_descriptor_;
}

const createDefaultUserReceiverReq& createDefaultUserReceiverReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

createDefaultUserReceiverReq* createDefaultUserReceiverReq::default_instance_ = NULL;

createDefaultUserReceiverReq* createDefaultUserReceiverReq::New() const {
  return new createDefaultUserReceiverReq;
}

void createDefaultUserReceiverReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool createDefaultUserReceiverReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void createDefaultUserReceiverReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* createDefaultUserReceiverReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int createDefaultUserReceiverReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void createDefaultUserReceiverReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const createDefaultUserReceiverReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const createDefaultUserReceiverReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void createDefaultUserReceiverReq::MergeFrom(const createDefaultUserReceiverReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void createDefaultUserReceiverReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void createDefaultUserReceiverReq::CopyFrom(const createDefaultUserReceiverReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool createDefaultUserReceiverReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void createDefaultUserReceiverReq::Swap(createDefaultUserReceiverReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata createDefaultUserReceiverReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = createDefaultUserReceiverReq_descriptor_;
  metadata.reflection = createDefaultUserReceiverReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int createDefaultUserReceiverRes::kResultFieldNumber;
#endif  // !_MSC_VER

createDefaultUserReceiverRes::createDefaultUserReceiverRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void createDefaultUserReceiverRes::InitAsDefaultInstance() {
}

createDefaultUserReceiverRes::createDefaultUserReceiverRes(const createDefaultUserReceiverRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void createDefaultUserReceiverRes::SharedCtor() {
  _cached_size_ = 0;
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

createDefaultUserReceiverRes::~createDefaultUserReceiverRes() {
  SharedDtor();
}

void createDefaultUserReceiverRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void createDefaultUserReceiverRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* createDefaultUserReceiverRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return createDefaultUserReceiverRes_descriptor_;
}

const createDefaultUserReceiverRes& createDefaultUserReceiverRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

createDefaultUserReceiverRes* createDefaultUserReceiverRes::default_instance_ = NULL;

createDefaultUserReceiverRes* createDefaultUserReceiverRes::New() const {
  return new createDefaultUserReceiverRes;
}

void createDefaultUserReceiverRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool createDefaultUserReceiverRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CS.ReceiverCmdResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::ReceiverCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::ReceiverCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void createDefaultUserReceiverRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* createDefaultUserReceiverRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int createDefaultUserReceiverRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CS.ReceiverCmdResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void createDefaultUserReceiverRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const createDefaultUserReceiverRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const createDefaultUserReceiverRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void createDefaultUserReceiverRes::MergeFrom(const createDefaultUserReceiverRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void createDefaultUserReceiverRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void createDefaultUserReceiverRes::CopyFrom(const createDefaultUserReceiverRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool createDefaultUserReceiverRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void createDefaultUserReceiverRes::Swap(createDefaultUserReceiverRes* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata createDefaultUserReceiverRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = createDefaultUserReceiverRes_descriptor_;
  metadata.reflection = createDefaultUserReceiverRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int deleteUserReceiverReq::kIdFieldNumber;
#endif  // !_MSC_VER

deleteUserReceiverReq::deleteUserReceiverReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void deleteUserReceiverReq::InitAsDefaultInstance() {
}

deleteUserReceiverReq::deleteUserReceiverReq(const deleteUserReceiverReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void deleteUserReceiverReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

deleteUserReceiverReq::~deleteUserReceiverReq() {
  SharedDtor();
}

void deleteUserReceiverReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void deleteUserReceiverReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deleteUserReceiverReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return deleteUserReceiverReq_descriptor_;
}

const deleteUserReceiverReq& deleteUserReceiverReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

deleteUserReceiverReq* deleteUserReceiverReq::default_instance_ = NULL;

deleteUserReceiverReq* deleteUserReceiverReq::New() const {
  return new deleteUserReceiverReq;
}

void deleteUserReceiverReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool deleteUserReceiverReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void deleteUserReceiverReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* deleteUserReceiverReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int deleteUserReceiverReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deleteUserReceiverReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const deleteUserReceiverReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const deleteUserReceiverReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void deleteUserReceiverReq::MergeFrom(const deleteUserReceiverReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void deleteUserReceiverReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deleteUserReceiverReq::CopyFrom(const deleteUserReceiverReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteUserReceiverReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void deleteUserReceiverReq::Swap(deleteUserReceiverReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata deleteUserReceiverReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = deleteUserReceiverReq_descriptor_;
  metadata.reflection = deleteUserReceiverReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int deleteUserReceiverRes::kResultFieldNumber;
#endif  // !_MSC_VER

deleteUserReceiverRes::deleteUserReceiverRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void deleteUserReceiverRes::InitAsDefaultInstance() {
}

deleteUserReceiverRes::deleteUserReceiverRes(const deleteUserReceiverRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void deleteUserReceiverRes::SharedCtor() {
  _cached_size_ = 0;
  result_ = 200;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

deleteUserReceiverRes::~deleteUserReceiverRes() {
  SharedDtor();
}

void deleteUserReceiverRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void deleteUserReceiverRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deleteUserReceiverRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return deleteUserReceiverRes_descriptor_;
}

const deleteUserReceiverRes& deleteUserReceiverRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

deleteUserReceiverRes* deleteUserReceiverRes::default_instance_ = NULL;

deleteUserReceiverRes* deleteUserReceiverRes::New() const {
  return new deleteUserReceiverRes;
}

void deleteUserReceiverRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 200;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool deleteUserReceiverRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CS.ReceiverCmdResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CS::ReceiverCmdResult_IsValid(value)) {
            set_result(static_cast< ::CS::ReceiverCmdResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void deleteUserReceiverRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* deleteUserReceiverRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .CS.ReceiverCmdResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int deleteUserReceiverRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .CS.ReceiverCmdResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deleteUserReceiverRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const deleteUserReceiverRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const deleteUserReceiverRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void deleteUserReceiverRes::MergeFrom(const deleteUserReceiverRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void deleteUserReceiverRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deleteUserReceiverRes::CopyFrom(const deleteUserReceiverRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteUserReceiverRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void deleteUserReceiverRes::Swap(deleteUserReceiverRes* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata deleteUserReceiverRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = deleteUserReceiverRes_descriptor_;
  metadata.reflection = deleteUserReceiverRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Area::kAreaNoFieldNumber;
const int Area::kAreaNameFieldNumber;
#endif  // !_MSC_VER

Area::Area()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Area::InitAsDefaultInstance() {
}

Area::Area(const Area& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Area::SharedCtor() {
  _cached_size_ = 0;
  area_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  area_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Area::~Area() {
  SharedDtor();
}

void Area::SharedDtor() {
  if (area_no_ != &::google::protobuf::internal::kEmptyString) {
    delete area_no_;
  }
  if (area_name_ != &::google::protobuf::internal::kEmptyString) {
    delete area_name_;
  }
  if (this != default_instance_) {
  }
}

void Area::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Area::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Area_descriptor_;
}

const Area& Area::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

Area* Area::default_instance_ = NULL;

Area* Area::New() const {
  return new Area;
}

void Area::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_area_no()) {
      if (area_no_ != &::google::protobuf::internal::kEmptyString) {
        area_no_->clear();
      }
    }
    if (has_area_name()) {
      if (area_name_ != &::google::protobuf::internal::kEmptyString) {
        area_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Area::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string area_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->area_no().data(), this->area_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_area_name;
        break;
      }

      // optional string area_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->area_name().data(), this->area_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Area::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string area_no = 1;
  if (has_area_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_no().data(), this->area_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->area_no(), output);
  }

  // optional string area_name = 2;
  if (has_area_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_name().data(), this->area_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->area_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Area::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string area_no = 1;
  if (has_area_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_no().data(), this->area_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->area_no(), target);
  }

  // optional string area_name = 2;
  if (has_area_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_name().data(), this->area_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->area_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Area::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string area_no = 1;
    if (has_area_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->area_no());
    }

    // optional string area_name = 2;
    if (has_area_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->area_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Area::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Area* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Area*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Area::MergeFrom(const Area& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_area_no()) {
      set_area_no(from.area_no());
    }
    if (from.has_area_name()) {
      set_area_name(from.area_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Area::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Area::CopyFrom(const Area& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Area::IsInitialized() const {

  return true;
}

void Area::Swap(Area* other) {
  if (other != this) {
    std::swap(area_no_, other->area_no_);
    std::swap(area_name_, other->area_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Area::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Area_descriptor_;
  metadata.reflection = Area_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryAreaFirstReq::kAccountIdFieldNumber;
#endif  // !_MSC_VER

queryAreaFirstReq::queryAreaFirstReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryAreaFirstReq::InitAsDefaultInstance() {
}

queryAreaFirstReq::queryAreaFirstReq(const queryAreaFirstReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryAreaFirstReq::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryAreaFirstReq::~queryAreaFirstReq() {
  SharedDtor();
}

void queryAreaFirstReq::SharedDtor() {
  if (account_id_ != &::google::protobuf::internal::kEmptyString) {
    delete account_id_;
  }
  if (this != default_instance_) {
  }
}

void queryAreaFirstReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryAreaFirstReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryAreaFirstReq_descriptor_;
}

const queryAreaFirstReq& queryAreaFirstReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryAreaFirstReq* queryAreaFirstReq::default_instance_ = NULL;

queryAreaFirstReq* queryAreaFirstReq::New() const {
  return new queryAreaFirstReq;
}

void queryAreaFirstReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account_id()) {
      if (account_id_ != &::google::protobuf::internal::kEmptyString) {
        account_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryAreaFirstReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string account_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account_id().data(), this->account_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryAreaFirstReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_id().data(), this->account_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->account_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryAreaFirstReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_id().data(), this->account_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryAreaFirstReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryAreaFirstReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryAreaFirstReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryAreaFirstReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryAreaFirstReq::MergeFrom(const queryAreaFirstReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryAreaFirstReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryAreaFirstReq::CopyFrom(const queryAreaFirstReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAreaFirstReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void queryAreaFirstReq::Swap(queryAreaFirstReq* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryAreaFirstReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryAreaFirstReq_descriptor_;
  metadata.reflection = queryAreaFirstReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryAreaFirstResp::kAreaFieldNumber;
#endif  // !_MSC_VER

queryAreaFirstResp::queryAreaFirstResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryAreaFirstResp::InitAsDefaultInstance() {
}

queryAreaFirstResp::queryAreaFirstResp(const queryAreaFirstResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryAreaFirstResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryAreaFirstResp::~queryAreaFirstResp() {
  SharedDtor();
}

void queryAreaFirstResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void queryAreaFirstResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryAreaFirstResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryAreaFirstResp_descriptor_;
}

const queryAreaFirstResp& queryAreaFirstResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryAreaFirstResp* queryAreaFirstResp::default_instance_ = NULL;

queryAreaFirstResp* queryAreaFirstResp::New() const {
  return new queryAreaFirstResp;
}

void queryAreaFirstResp::Clear() {
  area_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryAreaFirstResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CS.Area area = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_area()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_area;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryAreaFirstResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CS.Area area = 1;
  for (int i = 0; i < this->area_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->area(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryAreaFirstResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CS.Area area = 1;
  for (int i = 0; i < this->area_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->area(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryAreaFirstResp::ByteSize() const {
  int total_size = 0;

  // repeated .CS.Area area = 1;
  total_size += 1 * this->area_size();
  for (int i = 0; i < this->area_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->area(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryAreaFirstResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryAreaFirstResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryAreaFirstResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryAreaFirstResp::MergeFrom(const queryAreaFirstResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  area_.MergeFrom(from.area_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryAreaFirstResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryAreaFirstResp::CopyFrom(const queryAreaFirstResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAreaFirstResp::IsInitialized() const {

  return true;
}

void queryAreaFirstResp::Swap(queryAreaFirstResp* other) {
  if (other != this) {
    area_.Swap(&other->area_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryAreaFirstResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryAreaFirstResp_descriptor_;
  metadata.reflection = queryAreaFirstResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryAreaSecondReq::kAreaNoFieldNumber;
#endif  // !_MSC_VER

queryAreaSecondReq::queryAreaSecondReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryAreaSecondReq::InitAsDefaultInstance() {
}

queryAreaSecondReq::queryAreaSecondReq(const queryAreaSecondReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryAreaSecondReq::SharedCtor() {
  _cached_size_ = 0;
  area_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryAreaSecondReq::~queryAreaSecondReq() {
  SharedDtor();
}

void queryAreaSecondReq::SharedDtor() {
  if (area_no_ != &::google::protobuf::internal::kEmptyString) {
    delete area_no_;
  }
  if (this != default_instance_) {
  }
}

void queryAreaSecondReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryAreaSecondReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryAreaSecondReq_descriptor_;
}

const queryAreaSecondReq& queryAreaSecondReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryAreaSecondReq* queryAreaSecondReq::default_instance_ = NULL;

queryAreaSecondReq* queryAreaSecondReq::New() const {
  return new queryAreaSecondReq;
}

void queryAreaSecondReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_area_no()) {
      if (area_no_ != &::google::protobuf::internal::kEmptyString) {
        area_no_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryAreaSecondReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string area_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->area_no().data(), this->area_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryAreaSecondReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string area_no = 1;
  if (has_area_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_no().data(), this->area_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->area_no(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryAreaSecondReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string area_no = 1;
  if (has_area_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_no().data(), this->area_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->area_no(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryAreaSecondReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string area_no = 1;
    if (has_area_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->area_no());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryAreaSecondReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryAreaSecondReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryAreaSecondReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryAreaSecondReq::MergeFrom(const queryAreaSecondReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_area_no()) {
      set_area_no(from.area_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryAreaSecondReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryAreaSecondReq::CopyFrom(const queryAreaSecondReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAreaSecondReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void queryAreaSecondReq::Swap(queryAreaSecondReq* other) {
  if (other != this) {
    std::swap(area_no_, other->area_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryAreaSecondReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryAreaSecondReq_descriptor_;
  metadata.reflection = queryAreaSecondReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryAreaSecondResp::kAreaListFieldNumber;
#endif  // !_MSC_VER

queryAreaSecondResp::queryAreaSecondResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryAreaSecondResp::InitAsDefaultInstance() {
}

queryAreaSecondResp::queryAreaSecondResp(const queryAreaSecondResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryAreaSecondResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryAreaSecondResp::~queryAreaSecondResp() {
  SharedDtor();
}

void queryAreaSecondResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void queryAreaSecondResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryAreaSecondResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryAreaSecondResp_descriptor_;
}

const queryAreaSecondResp& queryAreaSecondResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryAreaSecondResp* queryAreaSecondResp::default_instance_ = NULL;

queryAreaSecondResp* queryAreaSecondResp::New() const {
  return new queryAreaSecondResp;
}

void queryAreaSecondResp::Clear() {
  area_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryAreaSecondResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CS.Area area_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_area_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_area_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryAreaSecondResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CS.Area area_list = 1;
  for (int i = 0; i < this->area_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->area_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryAreaSecondResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CS.Area area_list = 1;
  for (int i = 0; i < this->area_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->area_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryAreaSecondResp::ByteSize() const {
  int total_size = 0;

  // repeated .CS.Area area_list = 1;
  total_size += 1 * this->area_list_size();
  for (int i = 0; i < this->area_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->area_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryAreaSecondResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryAreaSecondResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryAreaSecondResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryAreaSecondResp::MergeFrom(const queryAreaSecondResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  area_list_.MergeFrom(from.area_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryAreaSecondResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryAreaSecondResp::CopyFrom(const queryAreaSecondResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAreaSecondResp::IsInitialized() const {

  return true;
}

void queryAreaSecondResp::Swap(queryAreaSecondResp* other) {
  if (other != this) {
    area_list_.Swap(&other->area_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryAreaSecondResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryAreaSecondResp_descriptor_;
  metadata.reflection = queryAreaSecondResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryAreaThreeReq::kAreaNoFieldNumber;
#endif  // !_MSC_VER

queryAreaThreeReq::queryAreaThreeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryAreaThreeReq::InitAsDefaultInstance() {
}

queryAreaThreeReq::queryAreaThreeReq(const queryAreaThreeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryAreaThreeReq::SharedCtor() {
  _cached_size_ = 0;
  area_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryAreaThreeReq::~queryAreaThreeReq() {
  SharedDtor();
}

void queryAreaThreeReq::SharedDtor() {
  if (area_no_ != &::google::protobuf::internal::kEmptyString) {
    delete area_no_;
  }
  if (this != default_instance_) {
  }
}

void queryAreaThreeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryAreaThreeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryAreaThreeReq_descriptor_;
}

const queryAreaThreeReq& queryAreaThreeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryAreaThreeReq* queryAreaThreeReq::default_instance_ = NULL;

queryAreaThreeReq* queryAreaThreeReq::New() const {
  return new queryAreaThreeReq;
}

void queryAreaThreeReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_area_no()) {
      if (area_no_ != &::google::protobuf::internal::kEmptyString) {
        area_no_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryAreaThreeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string area_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->area_no().data(), this->area_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryAreaThreeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string area_no = 1;
  if (has_area_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_no().data(), this->area_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->area_no(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryAreaThreeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string area_no = 1;
  if (has_area_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->area_no().data(), this->area_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->area_no(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryAreaThreeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string area_no = 1;
    if (has_area_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->area_no());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryAreaThreeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryAreaThreeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryAreaThreeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryAreaThreeReq::MergeFrom(const queryAreaThreeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_area_no()) {
      set_area_no(from.area_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryAreaThreeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryAreaThreeReq::CopyFrom(const queryAreaThreeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAreaThreeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void queryAreaThreeReq::Swap(queryAreaThreeReq* other) {
  if (other != this) {
    std::swap(area_no_, other->area_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryAreaThreeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryAreaThreeReq_descriptor_;
  metadata.reflection = queryAreaThreeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int queryAreaThreeResp::kAreaListFieldNumber;
#endif  // !_MSC_VER

queryAreaThreeResp::queryAreaThreeResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void queryAreaThreeResp::InitAsDefaultInstance() {
}

queryAreaThreeResp::queryAreaThreeResp(const queryAreaThreeResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void queryAreaThreeResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

queryAreaThreeResp::~queryAreaThreeResp() {
  SharedDtor();
}

void queryAreaThreeResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void queryAreaThreeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* queryAreaThreeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return queryAreaThreeResp_descriptor_;
}

const queryAreaThreeResp& queryAreaThreeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

queryAreaThreeResp* queryAreaThreeResp::default_instance_ = NULL;

queryAreaThreeResp* queryAreaThreeResp::New() const {
  return new queryAreaThreeResp;
}

void queryAreaThreeResp::Clear() {
  area_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool queryAreaThreeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CS.Area area_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_area_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_area_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void queryAreaThreeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CS.Area area_list = 1;
  for (int i = 0; i < this->area_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->area_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* queryAreaThreeResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CS.Area area_list = 1;
  for (int i = 0; i < this->area_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->area_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int queryAreaThreeResp::ByteSize() const {
  int total_size = 0;

  // repeated .CS.Area area_list = 1;
  total_size += 1 * this->area_list_size();
  for (int i = 0; i < this->area_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->area_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void queryAreaThreeResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const queryAreaThreeResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const queryAreaThreeResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void queryAreaThreeResp::MergeFrom(const queryAreaThreeResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  area_list_.MergeFrom(from.area_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void queryAreaThreeResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryAreaThreeResp::CopyFrom(const queryAreaThreeResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAreaThreeResp::IsInitialized() const {

  return true;
}

void queryAreaThreeResp::Swap(queryAreaThreeResp* other) {
  if (other != this) {
    area_list_.Swap(&other->area_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata queryAreaThreeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = queryAreaThreeResp_descriptor_;
  metadata.reflection = queryAreaThreeResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CS

// @@protoc_insertion_point(global_scope)
