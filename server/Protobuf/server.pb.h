// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_server_2eproto__INCLUDED
#define PROTOBUF_server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_server_2eproto();
void protobuf_AssignDesc_server_2eproto();
void protobuf_ShutdownFile_server_2eproto();

class Msg_Client_Disconnet_G2M;
class Msg_Client_Kickout_M2G;
class Msg_Heart_Beat_M2G;
class Msg_Heart_Beat_G2M;
class Msg_ServerRegister_G2O;
class Msg_Heart_Beat_G2O;
class Msg_Heart_Beat_O2G;
class Msg_Mobile_Validate_G2O;
class Msg_Mobile_Validate_O2G;
class Msg_LogicCommon_M2O;
class Msg_LogicCommon_O2M;
class CommonData;

// ===================================================================

class Msg_Client_Disconnet_G2M : public ::google::protobuf::Message {
 public:
  Msg_Client_Disconnet_G2M();
  virtual ~Msg_Client_Disconnet_G2M();

  Msg_Client_Disconnet_G2M(const Msg_Client_Disconnet_G2M& from);

  inline Msg_Client_Disconnet_G2M& operator=(const Msg_Client_Disconnet_G2M& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Client_Disconnet_G2M& default_instance();

  void Swap(Msg_Client_Disconnet_G2M* other);

  // implements Message ----------------------------------------------

  Msg_Client_Disconnet_G2M* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Client_Disconnet_G2M& from);
  void MergeFrom(const Msg_Client_Disconnet_G2M& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SS.Msg_Client_Disconnet_G2M)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Client_Disconnet_G2M* default_instance_;
};
// -------------------------------------------------------------------

class Msg_Client_Kickout_M2G : public ::google::protobuf::Message {
 public:
  Msg_Client_Kickout_M2G();
  virtual ~Msg_Client_Kickout_M2G();

  Msg_Client_Kickout_M2G(const Msg_Client_Kickout_M2G& from);

  inline Msg_Client_Kickout_M2G& operator=(const Msg_Client_Kickout_M2G& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Client_Kickout_M2G& default_instance();

  void Swap(Msg_Client_Kickout_M2G* other);

  // implements Message ----------------------------------------------

  Msg_Client_Kickout_M2G* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Client_Kickout_M2G& from);
  void MergeFrom(const Msg_Client_Kickout_M2G& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SS.Msg_Client_Kickout_M2G)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Client_Kickout_M2G* default_instance_;
};
// -------------------------------------------------------------------

class Msg_Heart_Beat_M2G : public ::google::protobuf::Message {
 public:
  Msg_Heart_Beat_M2G();
  virtual ~Msg_Heart_Beat_M2G();

  Msg_Heart_Beat_M2G(const Msg_Heart_Beat_M2G& from);

  inline Msg_Heart_Beat_M2G& operator=(const Msg_Heart_Beat_M2G& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Heart_Beat_M2G& default_instance();

  void Swap(Msg_Heart_Beat_M2G* other);

  // implements Message ----------------------------------------------

  Msg_Heart_Beat_M2G* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Heart_Beat_M2G& from);
  void MergeFrom(const Msg_Heart_Beat_M2G& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SS.Msg_Heart_Beat_M2G)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Heart_Beat_M2G* default_instance_;
};
// -------------------------------------------------------------------

class Msg_Heart_Beat_G2M : public ::google::protobuf::Message {
 public:
  Msg_Heart_Beat_G2M();
  virtual ~Msg_Heart_Beat_G2M();

  Msg_Heart_Beat_G2M(const Msg_Heart_Beat_G2M& from);

  inline Msg_Heart_Beat_G2M& operator=(const Msg_Heart_Beat_G2M& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Heart_Beat_G2M& default_instance();

  void Swap(Msg_Heart_Beat_G2M* other);

  // implements Message ----------------------------------------------

  Msg_Heart_Beat_G2M* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Heart_Beat_G2M& from);
  void MergeFrom(const Msg_Heart_Beat_G2M& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SS.Msg_Heart_Beat_G2M)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Heart_Beat_G2M* default_instance_;
};
// -------------------------------------------------------------------

class Msg_ServerRegister_G2O : public ::google::protobuf::Message {
 public:
  Msg_ServerRegister_G2O();
  virtual ~Msg_ServerRegister_G2O();

  Msg_ServerRegister_G2O(const Msg_ServerRegister_G2O& from);

  inline Msg_ServerRegister_G2O& operator=(const Msg_ServerRegister_G2O& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ServerRegister_G2O& default_instance();

  void Swap(Msg_ServerRegister_G2O* other);

  // implements Message ----------------------------------------------

  Msg_ServerRegister_G2O* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ServerRegister_G2O& from);
  void MergeFrom(const Msg_ServerRegister_G2O& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SS.Msg_ServerRegister_G2O)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 server_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_ServerRegister_G2O* default_instance_;
};
// -------------------------------------------------------------------

class Msg_Heart_Beat_G2O : public ::google::protobuf::Message {
 public:
  Msg_Heart_Beat_G2O();
  virtual ~Msg_Heart_Beat_G2O();

  Msg_Heart_Beat_G2O(const Msg_Heart_Beat_G2O& from);

  inline Msg_Heart_Beat_G2O& operator=(const Msg_Heart_Beat_G2O& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Heart_Beat_G2O& default_instance();

  void Swap(Msg_Heart_Beat_G2O* other);

  // implements Message ----------------------------------------------

  Msg_Heart_Beat_G2O* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Heart_Beat_G2O& from);
  void MergeFrom(const Msg_Heart_Beat_G2O& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SS.Msg_Heart_Beat_G2O)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Heart_Beat_G2O* default_instance_;
};
// -------------------------------------------------------------------

class Msg_Heart_Beat_O2G : public ::google::protobuf::Message {
 public:
  Msg_Heart_Beat_O2G();
  virtual ~Msg_Heart_Beat_O2G();

  Msg_Heart_Beat_O2G(const Msg_Heart_Beat_O2G& from);

  inline Msg_Heart_Beat_O2G& operator=(const Msg_Heart_Beat_O2G& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Heart_Beat_O2G& default_instance();

  void Swap(Msg_Heart_Beat_O2G* other);

  // implements Message ----------------------------------------------

  Msg_Heart_Beat_O2G* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Heart_Beat_O2G& from);
  void MergeFrom(const Msg_Heart_Beat_O2G& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SS.Msg_Heart_Beat_O2G)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Heart_Beat_O2G* default_instance_;
};
// -------------------------------------------------------------------

class Msg_Mobile_Validate_G2O : public ::google::protobuf::Message {
 public:
  Msg_Mobile_Validate_G2O();
  virtual ~Msg_Mobile_Validate_G2O();

  Msg_Mobile_Validate_G2O(const Msg_Mobile_Validate_G2O& from);

  inline Msg_Mobile_Validate_G2O& operator=(const Msg_Mobile_Validate_G2O& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Mobile_Validate_G2O& default_instance();

  void Swap(Msg_Mobile_Validate_G2O* other);

  // implements Message ----------------------------------------------

  Msg_Mobile_Validate_G2O* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Mobile_Validate_G2O& from);
  void MergeFrom(const Msg_Mobile_Validate_G2O& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string moblie = 1;
  inline bool has_moblie() const;
  inline void clear_moblie();
  static const int kMoblieFieldNumber = 1;
  inline const ::std::string& moblie() const;
  inline void set_moblie(const ::std::string& value);
  inline void set_moblie(const char* value);
  inline void set_moblie(const char* value, size_t size);
  inline ::std::string* mutable_moblie();
  inline ::std::string* release_moblie();
  inline void set_allocated_moblie(::std::string* moblie);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // required int32 code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SS.Msg_Mobile_Validate_G2O)
 private:
  inline void set_has_moblie();
  inline void clear_has_moblie();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* moblie_;
  ::std::string* password_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Mobile_Validate_G2O* default_instance_;
};
// -------------------------------------------------------------------

class Msg_Mobile_Validate_O2G : public ::google::protobuf::Message {
 public:
  Msg_Mobile_Validate_O2G();
  virtual ~Msg_Mobile_Validate_O2G();

  Msg_Mobile_Validate_O2G(const Msg_Mobile_Validate_O2G& from);

  inline Msg_Mobile_Validate_O2G& operator=(const Msg_Mobile_Validate_O2G& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Mobile_Validate_O2G& default_instance();

  void Swap(Msg_Mobile_Validate_O2G* other);

  // implements Message ----------------------------------------------

  Msg_Mobile_Validate_O2G* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Mobile_Validate_O2G& from);
  void MergeFrom(const Msg_Mobile_Validate_O2G& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string moblie = 1;
  inline bool has_moblie() const;
  inline void clear_moblie();
  static const int kMoblieFieldNumber = 1;
  inline const ::std::string& moblie() const;
  inline void set_moblie(const ::std::string& value);
  inline void set_moblie(const char* value);
  inline void set_moblie(const char* value, size_t size);
  inline ::std::string* mutable_moblie();
  inline ::std::string* release_moblie();
  inline void set_allocated_moblie(::std::string* moblie);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // required int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 error_code = 4;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 4;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SS.Msg_Mobile_Validate_O2G)
 private:
  inline void set_has_moblie();
  inline void clear_has_moblie();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* moblie_;
  ::std::string* password_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_Mobile_Validate_O2G* default_instance_;
};
// -------------------------------------------------------------------

class Msg_LogicCommon_M2O : public ::google::protobuf::Message {
 public:
  Msg_LogicCommon_M2O();
  virtual ~Msg_LogicCommon_M2O();

  Msg_LogicCommon_M2O(const Msg_LogicCommon_M2O& from);

  inline Msg_LogicCommon_M2O& operator=(const Msg_LogicCommon_M2O& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_LogicCommon_M2O& default_instance();

  void Swap(Msg_LogicCommon_M2O* other);

  // implements Message ----------------------------------------------

  Msg_LogicCommon_M2O* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_LogicCommon_M2O& from);
  void MergeFrom(const Msg_LogicCommon_M2O& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::int32 msg_id() const;
  inline void set_msg_id(::google::protobuf::int32 value);

  // optional string msg_body = 2;
  inline bool has_msg_body() const;
  inline void clear_msg_body();
  static const int kMsgBodyFieldNumber = 2;
  inline const ::std::string& msg_body() const;
  inline void set_msg_body(const ::std::string& value);
  inline void set_msg_body(const char* value);
  inline void set_msg_body(const char* value, size_t size);
  inline ::std::string* mutable_msg_body();
  inline ::std::string* release_msg_body();
  inline void set_allocated_msg_body(::std::string* msg_body);

  // optional string url = 3;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 3;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional string userId = 4;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 4;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // optional uint32 seq = 5;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 5;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SS.Msg_LogicCommon_M2O)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_msg_body();
  inline void clear_has_msg_body();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_body_;
  ::std::string* url_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::uint32 seq_;
  ::std::string* userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_LogicCommon_M2O* default_instance_;
};
// -------------------------------------------------------------------

class Msg_LogicCommon_O2M : public ::google::protobuf::Message {
 public:
  Msg_LogicCommon_O2M();
  virtual ~Msg_LogicCommon_O2M();

  Msg_LogicCommon_O2M(const Msg_LogicCommon_O2M& from);

  inline Msg_LogicCommon_O2M& operator=(const Msg_LogicCommon_O2M& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_LogicCommon_O2M& default_instance();

  void Swap(Msg_LogicCommon_O2M* other);

  // implements Message ----------------------------------------------

  Msg_LogicCommon_O2M* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_LogicCommon_O2M& from);
  void MergeFrom(const Msg_LogicCommon_O2M& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::int32 msg_id() const;
  inline void set_msg_id(::google::protobuf::int32 value);

  // optional string msg_body = 2;
  inline bool has_msg_body() const;
  inline void clear_msg_body();
  static const int kMsgBodyFieldNumber = 2;
  inline const ::std::string& msg_body() const;
  inline void set_msg_body(const ::std::string& value);
  inline void set_msg_body(const char* value);
  inline void set_msg_body(const char* value, size_t size);
  inline ::std::string* mutable_msg_body();
  inline ::std::string* release_msg_body();
  inline void set_allocated_msg_body(::std::string* msg_body);

  // required int32 msg_code = 3;
  inline bool has_msg_code() const;
  inline void clear_msg_code();
  static const int kMsgCodeFieldNumber = 3;
  inline ::google::protobuf::int32 msg_code() const;
  inline void set_msg_code(::google::protobuf::int32 value);

  // optional string msg_desc = 4;
  inline bool has_msg_desc() const;
  inline void clear_msg_desc();
  static const int kMsgDescFieldNumber = 4;
  inline const ::std::string& msg_desc() const;
  inline void set_msg_desc(const ::std::string& value);
  inline void set_msg_desc(const char* value);
  inline void set_msg_desc(const char* value, size_t size);
  inline ::std::string* mutable_msg_desc();
  inline ::std::string* release_msg_desc();
  inline void set_allocated_msg_desc(::std::string* msg_desc);

  // optional uint32 seq = 5;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 5;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SS.Msg_LogicCommon_O2M)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_msg_body();
  inline void clear_has_msg_body();
  inline void set_has_msg_code();
  inline void clear_has_msg_code();
  inline void set_has_msg_desc();
  inline void clear_has_msg_desc();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_body_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 msg_code_;
  ::std::string* msg_desc_;
  ::google::protobuf::uint32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static Msg_LogicCommon_O2M* default_instance_;
};
// -------------------------------------------------------------------

class CommonData : public ::google::protobuf::Message {
 public:
  CommonData();
  virtual ~CommonData();

  CommonData(const CommonData& from);

  inline CommonData& operator=(const CommonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonData& default_instance();

  void Swap(CommonData* other);

  // implements Message ----------------------------------------------

  CommonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonData& from);
  void MergeFrom(const CommonData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:SS.CommonData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static CommonData* default_instance_;
};
// ===================================================================


// ===================================================================

// Msg_Client_Disconnet_G2M

// -------------------------------------------------------------------

// Msg_Client_Kickout_M2G

// required int32 error_code = 1;
inline bool Msg_Client_Kickout_M2G::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Client_Kickout_M2G::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Client_Kickout_M2G::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Client_Kickout_M2G::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 Msg_Client_Kickout_M2G::error_code() const {
  return error_code_;
}
inline void Msg_Client_Kickout_M2G::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// Msg_Heart_Beat_M2G

// -------------------------------------------------------------------

// Msg_Heart_Beat_G2M

// -------------------------------------------------------------------

// Msg_ServerRegister_G2O

// required int32 server_id = 1;
inline bool Msg_ServerRegister_G2O::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ServerRegister_G2O::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ServerRegister_G2O::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ServerRegister_G2O::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 Msg_ServerRegister_G2O::server_id() const {
  return server_id_;
}
inline void Msg_ServerRegister_G2O::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// -------------------------------------------------------------------

// Msg_Heart_Beat_G2O

// -------------------------------------------------------------------

// Msg_Heart_Beat_O2G

// -------------------------------------------------------------------

// Msg_Mobile_Validate_G2O

// required string moblie = 1;
inline bool Msg_Mobile_Validate_G2O::has_moblie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Mobile_Validate_G2O::set_has_moblie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Mobile_Validate_G2O::clear_has_moblie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Mobile_Validate_G2O::clear_moblie() {
  if (moblie_ != &::google::protobuf::internal::kEmptyString) {
    moblie_->clear();
  }
  clear_has_moblie();
}
inline const ::std::string& Msg_Mobile_Validate_G2O::moblie() const {
  return *moblie_;
}
inline void Msg_Mobile_Validate_G2O::set_moblie(const ::std::string& value) {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  moblie_->assign(value);
}
inline void Msg_Mobile_Validate_G2O::set_moblie(const char* value) {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  moblie_->assign(value);
}
inline void Msg_Mobile_Validate_G2O::set_moblie(const char* value, size_t size) {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  moblie_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Mobile_Validate_G2O::mutable_moblie() {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  return moblie_;
}
inline ::std::string* Msg_Mobile_Validate_G2O::release_moblie() {
  clear_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = moblie_;
    moblie_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Mobile_Validate_G2O::set_allocated_moblie(::std::string* moblie) {
  if (moblie_ != &::google::protobuf::internal::kEmptyString) {
    delete moblie_;
  }
  if (moblie) {
    set_has_moblie();
    moblie_ = moblie;
  } else {
    clear_has_moblie();
    moblie_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string password = 2;
inline bool Msg_Mobile_Validate_G2O::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_Mobile_Validate_G2O::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_Mobile_Validate_G2O::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_Mobile_Validate_G2O::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Msg_Mobile_Validate_G2O::password() const {
  return *password_;
}
inline void Msg_Mobile_Validate_G2O::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Msg_Mobile_Validate_G2O::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Msg_Mobile_Validate_G2O::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Mobile_Validate_G2O::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* Msg_Mobile_Validate_G2O::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Mobile_Validate_G2O::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 code = 3;
inline bool Msg_Mobile_Validate_G2O::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_Mobile_Validate_G2O::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_Mobile_Validate_G2O::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_Mobile_Validate_G2O::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 Msg_Mobile_Validate_G2O::code() const {
  return code_;
}
inline void Msg_Mobile_Validate_G2O::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// required int32 type = 4;
inline bool Msg_Mobile_Validate_G2O::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_Mobile_Validate_G2O::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_Mobile_Validate_G2O::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_Mobile_Validate_G2O::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg_Mobile_Validate_G2O::type() const {
  return type_;
}
inline void Msg_Mobile_Validate_G2O::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Msg_Mobile_Validate_O2G

// required string moblie = 1;
inline bool Msg_Mobile_Validate_O2G::has_moblie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Mobile_Validate_O2G::set_has_moblie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Mobile_Validate_O2G::clear_has_moblie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Mobile_Validate_O2G::clear_moblie() {
  if (moblie_ != &::google::protobuf::internal::kEmptyString) {
    moblie_->clear();
  }
  clear_has_moblie();
}
inline const ::std::string& Msg_Mobile_Validate_O2G::moblie() const {
  return *moblie_;
}
inline void Msg_Mobile_Validate_O2G::set_moblie(const ::std::string& value) {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  moblie_->assign(value);
}
inline void Msg_Mobile_Validate_O2G::set_moblie(const char* value) {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  moblie_->assign(value);
}
inline void Msg_Mobile_Validate_O2G::set_moblie(const char* value, size_t size) {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  moblie_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Mobile_Validate_O2G::mutable_moblie() {
  set_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    moblie_ = new ::std::string;
  }
  return moblie_;
}
inline ::std::string* Msg_Mobile_Validate_O2G::release_moblie() {
  clear_has_moblie();
  if (moblie_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = moblie_;
    moblie_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Mobile_Validate_O2G::set_allocated_moblie(::std::string* moblie) {
  if (moblie_ != &::google::protobuf::internal::kEmptyString) {
    delete moblie_;
  }
  if (moblie) {
    set_has_moblie();
    moblie_ = moblie;
  } else {
    clear_has_moblie();
    moblie_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string password = 2;
inline bool Msg_Mobile_Validate_O2G::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_Mobile_Validate_O2G::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_Mobile_Validate_O2G::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_Mobile_Validate_O2G::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Msg_Mobile_Validate_O2G::password() const {
  return *password_;
}
inline void Msg_Mobile_Validate_O2G::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Msg_Mobile_Validate_O2G::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Msg_Mobile_Validate_O2G::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Mobile_Validate_O2G::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* Msg_Mobile_Validate_O2G::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Mobile_Validate_O2G::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 type = 3;
inline bool Msg_Mobile_Validate_O2G::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_Mobile_Validate_O2G::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_Mobile_Validate_O2G::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_Mobile_Validate_O2G::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg_Mobile_Validate_O2G::type() const {
  return type_;
}
inline void Msg_Mobile_Validate_O2G::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 error_code = 4;
inline bool Msg_Mobile_Validate_O2G::has_error_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_Mobile_Validate_O2G::set_has_error_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_Mobile_Validate_O2G::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_Mobile_Validate_O2G::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 Msg_Mobile_Validate_O2G::error_code() const {
  return error_code_;
}
inline void Msg_Mobile_Validate_O2G::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// Msg_LogicCommon_M2O

// required int32 msg_id = 1;
inline bool Msg_LogicCommon_M2O::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_LogicCommon_M2O::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_LogicCommon_M2O::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_LogicCommon_M2O::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 Msg_LogicCommon_M2O::msg_id() const {
  return msg_id_;
}
inline void Msg_LogicCommon_M2O::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// optional string msg_body = 2;
inline bool Msg_LogicCommon_M2O::has_msg_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_LogicCommon_M2O::set_has_msg_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_LogicCommon_M2O::clear_has_msg_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_LogicCommon_M2O::clear_msg_body() {
  if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
    msg_body_->clear();
  }
  clear_has_msg_body();
}
inline const ::std::string& Msg_LogicCommon_M2O::msg_body() const {
  return *msg_body_;
}
inline void Msg_LogicCommon_M2O::set_msg_body(const ::std::string& value) {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  msg_body_->assign(value);
}
inline void Msg_LogicCommon_M2O::set_msg_body(const char* value) {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  msg_body_->assign(value);
}
inline void Msg_LogicCommon_M2O::set_msg_body(const char* value, size_t size) {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  msg_body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_LogicCommon_M2O::mutable_msg_body() {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  return msg_body_;
}
inline ::std::string* Msg_LogicCommon_M2O::release_msg_body() {
  clear_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_body_;
    msg_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_LogicCommon_M2O::set_allocated_msg_body(::std::string* msg_body) {
  if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_body_;
  }
  if (msg_body) {
    set_has_msg_body();
    msg_body_ = msg_body;
  } else {
    clear_has_msg_body();
    msg_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string url = 3;
inline bool Msg_LogicCommon_M2O::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_LogicCommon_M2O::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_LogicCommon_M2O::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_LogicCommon_M2O::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& Msg_LogicCommon_M2O::url() const {
  return *url_;
}
inline void Msg_LogicCommon_M2O::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void Msg_LogicCommon_M2O::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void Msg_LogicCommon_M2O::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_LogicCommon_M2O::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* Msg_LogicCommon_M2O::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_LogicCommon_M2O::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string userId = 4;
inline bool Msg_LogicCommon_M2O::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_LogicCommon_M2O::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_LogicCommon_M2O::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_LogicCommon_M2O::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& Msg_LogicCommon_M2O::userid() const {
  return *userid_;
}
inline void Msg_LogicCommon_M2O::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void Msg_LogicCommon_M2O::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void Msg_LogicCommon_M2O::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_LogicCommon_M2O::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* Msg_LogicCommon_M2O::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_LogicCommon_M2O::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 seq = 5;
inline bool Msg_LogicCommon_M2O::has_seq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_LogicCommon_M2O::set_has_seq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_LogicCommon_M2O::clear_has_seq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_LogicCommon_M2O::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 Msg_LogicCommon_M2O::seq() const {
  return seq_;
}
inline void Msg_LogicCommon_M2O::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// Msg_LogicCommon_O2M

// required int32 msg_id = 1;
inline bool Msg_LogicCommon_O2M::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_LogicCommon_O2M::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_LogicCommon_O2M::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_LogicCommon_O2M::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 Msg_LogicCommon_O2M::msg_id() const {
  return msg_id_;
}
inline void Msg_LogicCommon_O2M::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// optional string msg_body = 2;
inline bool Msg_LogicCommon_O2M::has_msg_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_LogicCommon_O2M::set_has_msg_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_LogicCommon_O2M::clear_has_msg_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_LogicCommon_O2M::clear_msg_body() {
  if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
    msg_body_->clear();
  }
  clear_has_msg_body();
}
inline const ::std::string& Msg_LogicCommon_O2M::msg_body() const {
  return *msg_body_;
}
inline void Msg_LogicCommon_O2M::set_msg_body(const ::std::string& value) {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  msg_body_->assign(value);
}
inline void Msg_LogicCommon_O2M::set_msg_body(const char* value) {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  msg_body_->assign(value);
}
inline void Msg_LogicCommon_O2M::set_msg_body(const char* value, size_t size) {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  msg_body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_LogicCommon_O2M::mutable_msg_body() {
  set_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    msg_body_ = new ::std::string;
  }
  return msg_body_;
}
inline ::std::string* Msg_LogicCommon_O2M::release_msg_body() {
  clear_has_msg_body();
  if (msg_body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_body_;
    msg_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_LogicCommon_O2M::set_allocated_msg_body(::std::string* msg_body) {
  if (msg_body_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_body_;
  }
  if (msg_body) {
    set_has_msg_body();
    msg_body_ = msg_body;
  } else {
    clear_has_msg_body();
    msg_body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 msg_code = 3;
inline bool Msg_LogicCommon_O2M::has_msg_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_LogicCommon_O2M::set_has_msg_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_LogicCommon_O2M::clear_has_msg_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_LogicCommon_O2M::clear_msg_code() {
  msg_code_ = 0;
  clear_has_msg_code();
}
inline ::google::protobuf::int32 Msg_LogicCommon_O2M::msg_code() const {
  return msg_code_;
}
inline void Msg_LogicCommon_O2M::set_msg_code(::google::protobuf::int32 value) {
  set_has_msg_code();
  msg_code_ = value;
}

// optional string msg_desc = 4;
inline bool Msg_LogicCommon_O2M::has_msg_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_LogicCommon_O2M::set_has_msg_desc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_LogicCommon_O2M::clear_has_msg_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_LogicCommon_O2M::clear_msg_desc() {
  if (msg_desc_ != &::google::protobuf::internal::kEmptyString) {
    msg_desc_->clear();
  }
  clear_has_msg_desc();
}
inline const ::std::string& Msg_LogicCommon_O2M::msg_desc() const {
  return *msg_desc_;
}
inline void Msg_LogicCommon_O2M::set_msg_desc(const ::std::string& value) {
  set_has_msg_desc();
  if (msg_desc_ == &::google::protobuf::internal::kEmptyString) {
    msg_desc_ = new ::std::string;
  }
  msg_desc_->assign(value);
}
inline void Msg_LogicCommon_O2M::set_msg_desc(const char* value) {
  set_has_msg_desc();
  if (msg_desc_ == &::google::protobuf::internal::kEmptyString) {
    msg_desc_ = new ::std::string;
  }
  msg_desc_->assign(value);
}
inline void Msg_LogicCommon_O2M::set_msg_desc(const char* value, size_t size) {
  set_has_msg_desc();
  if (msg_desc_ == &::google::protobuf::internal::kEmptyString) {
    msg_desc_ = new ::std::string;
  }
  msg_desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_LogicCommon_O2M::mutable_msg_desc() {
  set_has_msg_desc();
  if (msg_desc_ == &::google::protobuf::internal::kEmptyString) {
    msg_desc_ = new ::std::string;
  }
  return msg_desc_;
}
inline ::std::string* Msg_LogicCommon_O2M::release_msg_desc() {
  clear_has_msg_desc();
  if (msg_desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_desc_;
    msg_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_LogicCommon_O2M::set_allocated_msg_desc(::std::string* msg_desc) {
  if (msg_desc_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_desc_;
  }
  if (msg_desc) {
    set_has_msg_desc();
    msg_desc_ = msg_desc;
  } else {
    clear_has_msg_desc();
    msg_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 seq = 5;
inline bool Msg_LogicCommon_O2M::has_seq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_LogicCommon_O2M::set_has_seq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_LogicCommon_O2M::clear_has_seq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_LogicCommon_O2M::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 Msg_LogicCommon_O2M::seq() const {
  return seq_;
}
inline void Msg_LogicCommon_O2M::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// -------------------------------------------------------------------

// CommonData

// required string data = 1;
inline bool CommonData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonData::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CommonData::data() const {
  return *data_;
}
inline void CommonData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CommonData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CommonData::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommonData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* CommonData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommonData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SS

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2eproto__INCLUDED
